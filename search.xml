<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【java】异常和 try / catch</title>
      <link href="/2020/01/20/%E3%80%90java%E3%80%91%E5%BC%82%E5%B8%B8%E5%92%8C-try-catch/"/>
      <url>/2020/01/20/%E3%80%90java%E3%80%91%E5%BC%82%E5%B8%B8%E5%92%8C-try-catch/</url>
      
        <content type="html"><![CDATA[<ul><li>基本语句</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        process1();</span><br><span class="line">        process2();</span><br><span class="line">        process3();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        System.out.println(<span class="string">"Bad encoding"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException | NumberFormatException e) &#123;</span><br><span class="line">        System.out.println(<span class="string">"IO error"</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"END"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为处理IOException和NumberFormatException的代码是相同的，所以我们用 | 将他们合并到一起。<br>在try-catch语句内所声明的变量的作用域在语句块内部，外部不可见。<br>finally语句不是必须的，可写可不写；<br>finally总是最后执行。</p><ul><li>Java异常类的继承关系图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20200120220914.png" alt=""></p><ul><li>一个栗子</li></ul><p>在这里故意写一个异常语句1/0.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String a = <span class="string">"12"</span>;</span><br><span class="line">        String b = <span class="string">"x9"</span>;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 捕获异常并处理</span></span><br><span class="line">        <span class="keyword">int</span> c = stringToInt(a);</span><br><span class="line">        <span class="keyword">int</span> d = stringToInt(b);</span><br><span class="line">        System.out.println(c * d);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">stringToInt</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译正常，运行时抛出异常：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;x9&quot;</span><br><span class="line">        at java.base&#x2F;java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)</span><br><span class="line">        at java.base&#x2F;java.lang.Integer.parseInt(Integer.java:658)</span><br><span class="line">        at java.base&#x2F;java.lang.Integer.parseInt(Integer.java:776)</span><br><span class="line">        at Test.stringToInt(Test.java:35)</span><br><span class="line">        at Test.main(Test.java:30)</span><br></pre></td></tr></table></figure><p>可以看出是NumberFormatException异常，这时候就可以用try-catch捕获该异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String a = <span class="string">"12"</span>;</span><br><span class="line">        String b = <span class="string">"x9"</span>;</span><br><span class="line">        <span class="keyword">int</span> c = stringToInt(a);</span><br><span class="line">        <span class="keyword">int</span> d;<span class="comment">//变量声明要在try-catch语句外面</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            d = stringToInt(b);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">            b = <span class="string">"19"</span>;</span><br><span class="line">            d = stringToInt(b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(c * d);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">stringToInt</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>会先执行try语句，抛出NumberFormatException异常后，系统会选择性的执行catch语句。这有点像switch语句。</p><p>使用try … catch … finally时：</p><ol><li><p>多个catch语句的匹配顺序非常重要，子类必须放在前面；</p></li><li><p>finally语句保证了有无异常都会执行，它是可选的；</p></li><li><p>一个catch语句也可以匹配多个非继承关系的异常</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【数据结构】时间复杂度的计算</title>
      <link href="/2020/01/20/%E3%80%90%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%91%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
      <url>/2020/01/20/%E3%80%90%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%91%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<blockquote><p>作者：raymondCaptain<br>链接：<a href="https://www.jianshu.com/p/f4cca5ce055a" target="_blank" rel="noopener">https://www.jianshu.com/p/f4cca5ce055a</a><br>来源：简书</p></blockquote><a id="more"></a><p>我们假设计算机运行一行基础代码需要执行一次运算。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello, World!\n"</span>);      <span class="comment">//  需要执行 1 次</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;       <span class="comment">// 需要执行 1 次</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么上面这个方法需要执行 2 次运算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++) &#123;         <span class="comment">// 需要执行 (n + 1) 次</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Hello, World!\n"</span>);      <span class="comment">// 需要执行 n 次</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;       <span class="comment">// 需要执行 1 次</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法需要 (n + 1 + n + 1) = 2n + 2 次运算。</p><p>我们把 算法需要执行的运算次数 用 输入大小n 的函数 表示，即 T(n) 。<br>此时为了 估算算法需要的运行时间 和 简化算法分析，我们引入时间复杂度的概念。</p><p>定义：存在常数 c 和函数 f(N)，使得当 N &gt;= c 时 T(N) &lt;= f(N)，表示为 T(n) = O(f(n)) 。<br>如图：</p><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20200120202622.png" alt=""></p><p>当 N &gt;= 2 的时候，f(n) = n^2 总是大于 T(n) = n + 2 的，于是我们说 f(n) 的增长速度是大于或者等于 T(n) 的，也说 f(n) 是 T(n) 的上界，可以表示为 T(n) = O(f(n))。</p><p>因为f(n) 的增长速度是大于或者等于 T(n) 的，即T(n) = O(f(n))，所以我们可以用 f(n) 的增长速度来度量 T(n) 的增长速度，所以我们说这个算法的时间复杂度是 O(f(n))。</p><p>算法的时间复杂度，用来度量算法的运行时间，记作: T(n) = O(f(n))。它表示随着 输入大小n 的增大，算法执行需要的时间的增长速度可以用 f(n) 来描述。</p><p>显然如果 T(n) = n^2，那么 T(n) = O(n^2)，T(n) = O(n^3)，T(n) = O(n^4) 都是成立的，但是因为第一个 f(n) 的增长速度与 T(n) 是最接近的，所以第一个是最好的选择，所以我们说这个算法的复杂度是 O(n^2) 。</p><p>那么当我们拿到算法的执行次数函数 T(n) 之后怎么得到算法的时间复杂度呢？</p><ol><li>我们知道常数项对函数的增长速度影响并不大，所以当 T(n) = c，c 为一个常数的时候，我们说这个算法的时间复杂度为 O(1)；如果 T(n) 不等于一个常数项时，直接将常数项省略。</li></ol><blockquote><p>比如<br>第一个 Hello, World 的例子中 T(n) = 2，所以我们说那个函数(算法)的时间复杂度为 O(1)。<br>T(n) = n + 29，此时时间复杂度为 O(n)。</p></blockquote><ol start="2"><li>我们知道高次项对于函数的增长速度的影响是最大的。n^3 的增长速度是远超 n^2 的，同时 n^2 的增长速度是远超 n 的。 同时因为要求的精度不高，所以我们直接忽略低此项。</li></ol><blockquote><p>比如<br>T(n) = n^3 + n^2 + 29，此时时间复杂度为 O(n^3)。</p></blockquote><ol start="3"><li>因为函数的阶数对函数的增长速度的影响是最显著的，所以我们忽略与最高阶相乘的常数。</li></ol><blockquote><p>比如<br>T(n) = 3n^3，此时时间复杂度为 O(n^3)。</p></blockquote><p><strong>综合起来：如果一个算法的执行次数是 T(n)，那么只保留最高次项，同时忽略最高项的系数后得到函数 f(n)，此时算法的时间复杂度就是 O(f(n))。为了方便描述，下文称此为 大O推导法。</strong></p><p>由此可见，由执行次数 T(n) 得到时间复杂度并不困难，很多时候困难的是从算法通过分析和数学运算得到 T(n)。对此，提供下列四个便利的法则，这些法则都是可以简单推导出来的，总结出来以便提高效率。</p><ol><li>对于一个循环，假设循环体的时间复杂度为 O(n)，循环次数为 m，则这个<br>循环的时间复杂度为 O(n×m)。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;         <span class="comment">// 循环次数为 n</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Hello, World!\n"</span>);      <span class="comment">// 循环体时间复杂度为 O(1)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时时间复杂度为 O(n × 1)，即 O(n)。<br>2. 对于多个循环，假设循环体的时间复杂度为 O(n)，各个循环的循环次数分别是a, b, c…，则这个循环的时间复杂度为 O(n×a×b×c…)。分析的时候应该由里向外分析这些循环。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;         <span class="comment">// 循环次数为 n</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;       <span class="comment">// 循环次数为 n</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Hello, World!\n"</span>);      <span class="comment">// 循环体时间复杂度为 O(1)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时时间复杂度为 O(n × n × 1)，即 O(n^2)。</p><ol start="3"><li>对于顺序执行的语句或者算法，总的时间复杂度等于其中最大的时间复杂度。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 第一部分时间复杂度为 O(n^2)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Hello, World!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 第二部分时间复杂度为 O(n)</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Hello, World!\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时时间复杂度为 max(O(n^2), O(n))，即 O(n^2)。</p><ol start="4"><li>对于条件判断语句，总的时间复杂度等于其中 时间复杂度最大的路径 的时间复杂度。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 第一条路径时间复杂度为 O(n^2)</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"输入数据大于等于零\n"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 第二条路径时间复杂度为 O(n)</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"输入数据小于零\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时时间复杂度为 max(O(n^2), O(n))，即 O(n^2)。</p><p><strong>时间复杂度分析的基本策略是：从内向外分析，从最深层开始分析。如果遇到函数调用，要深入函数进行分析。</strong></p><p>最后，我们来练习一下</p><p>一. 基础题<br>求该方法的时间复杂度</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考答案：<br>当 i = 0 时，内循环执行 n 次运算，当 i = 1 时，内循环执行 n - 1 次运算……当 i = n - 1 时，内循环执行 1 次运算。<br>所以，执行次数 T(n) = n + (n - 1) + (n - 2)……+ 1 = n(n + 1) / 2 = n^2 / 2 + n / 2。<br>根据上文说的 大O推导法 可以知道，此时时间复杂度为 O(n^2)。</p><p>二. 进阶题<br>求该方法的时间复杂度</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        i *= <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%i\n"</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考答案：<br>假设循环次数为 t，则循环条件满足 2^t &lt; n。<br>可以得出，执行次数t = log(2)(n)，即 T(n) = log(2)(n)，可见时间复杂度为 O(log(2)(n))，即 O(log n)。</p><p>三. 再次进阶<br>求该方法的时间复杂度</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">aFunc</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> aFunc(n - <span class="number">1</span>) + aFunc(n - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考答案：<br>显然运行次数，T(0) = T(1) = 1，同时 T(n) = T(n - 1) + T(n - 2) + 1，这里的 1 是其中的加法算一次执行。<br>显然 T(n) = T(n - 1) + T(n - 2) 是一个斐波那契数列，通过归纳证明法可以证明，当 n &gt;= 1 时 T(n) &lt; (5/3)^n，同时当 n &gt; 4 时 T(n) &gt;= (3/2)^n。<br>所以该方法的时间复杂度可以表示为 O((5/3)^n)，简化后为 O(2^n)。</p><hr><p>作者：raymondCaptain<br>链接：<a href="https://www.jianshu.com/p/f4cca5ce055a" target="_blank" rel="noopener">https://www.jianshu.com/p/f4cca5ce055a</a><br>来源：简书</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【数据结构】树的存储结构</title>
      <link href="/2020/01/20/%E3%80%90%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%91%E6%A0%91%E7%9A%84%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/"/>
      <url>/2020/01/20/%E3%80%90%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%91%E6%A0%91%E7%9A%84%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<blockquote><p>图源：<a href="https://space.bilibili.com/314076440?spm_id_from=333.788.b_765f7570696e666f.1" target="_blank" rel="noopener">鱼C-小甲鱼</a></p></blockquote><a id="more"></a><hr><h1 id="孩子表示法"><a href="#孩子表示法" class="headerlink" title="孩子表示法"></a>孩子表示法</h1><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/child.jpg" alt=""></p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/child_plus.jpg" alt=""></p><h1 id="双亲表示法"><a href="#双亲表示法" class="headerlink" title="双亲表示法"></a>双亲表示法</h1><h2 id="方案一-1"><a href="#方案一-1" class="headerlink" title="方案一"></a>方案一</h2><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/parents.jpg" alt=""></p><h2 id="方案二-1"><a href="#方案二-1" class="headerlink" title="方案二"></a>方案二</h2><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/parents_plus.jpg" alt=""></p><h1 id="双亲孩子表示法"><a href="#双亲孩子表示法" class="headerlink" title="双亲孩子表示法"></a>双亲孩子表示法</h1><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/child_parents.jpg" alt=""></p><ul><li>具体实现<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TREE_SIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> ElemType;</span><br><span class="line"><span class="comment">//孩子结点</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CTNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> child;              <span class="comment">//孩子结点的下标</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span>      <span class="comment">//指向下一个孩子结点的指针</span></span><br><span class="line">&#125;*ChildPtr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//表头结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    ElemType data;          <span class="comment">//存放在树中的结点的数据</span></span><br><span class="line">    <span class="keyword">int</span> parent;             <span class="comment">//存放双亲的下标</span></span><br><span class="line">    ChildPtr firstchild;    <span class="comment">//指向第一个孩子的指针</span></span><br><span class="line">&#125;CTBox;</span><br><span class="line"></span><br><span class="line"><span class="comment">//树结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    CTBox nodes[MAX_TREE_SIZE];<span class="comment">//结点数组</span></span><br><span class="line">    <span class="keyword">int</span> r;                  <span class="comment">//根的位置</span></span><br><span class="line">    <span class="keyword">int</span> n;                  <span class="comment">//结点数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Java】警告：The constructor Integer(int) is deprecated since version 9</title>
      <link href="/2020/01/16/Java%E4%B8%8D%E6%8E%A8%E8%8D%90%E7%94%A8%E5%8C%85%E8%A3%85%E7%B1%BB%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
      <url>/2020/01/16/Java%E4%B8%8D%E6%8E%A8%E8%8D%90%E7%94%A8%E5%8C%85%E8%A3%85%E7%B1%BB%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>从jdk1.9开始就不建议用Integer构建包了</p></blockquote><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20200116143052.png" alt=""><br>查询<a href="https://docs.oracle.com/javase/9/docs/api/java/lang/Integer.html#valueOf-int-" target="_blank" rel="noopener">文档的解释</a>:<br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20200116143443.png" alt=""><br>官方推荐使用ValueOf方法来构建包。</p><p><del>Integer obj = new Integer(1024);</del><br>Integer obj = Integer.valueOf(1024);</p>]]></content>
      
      
      <categories>
          
          <category> 踩过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Java】错误：编码 GBK 的不可映射字符 (0x8C)</title>
      <link href="/2020/01/16/Java%E8%BE%93%E5%87%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/01/16/Java%E8%BE%93%E5%87%BA%E4%B8%AD%E6%96%87%E5%AD%97%E7%AC%A6%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关于Java中输出中文字符的问题</p></blockquote><a id="more"></a><p>今天在写Java学习笔记的时候发现的问题。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"阿腾木的小世界"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我在java中用syso输出中文字符<br>但是在用javac -d命令编译上述源代码总会出现</p><pre><code>错误：编码 GBK 的不可映射字符 (0x8C)</code></pre><p>上网搜了搜<a href="https://www.cnblogs.com/lucky-zhangcd/p/8409810.html" target="_blank" rel="noopener">网上的解释</a>：<br>　　由于JDK是国际版的，我们在用javac编译时，编译程序首先会获得我们操作系统默认采用的编码格式（GBK），然后JDK就把Java源文件从GBK编码格式转换为Java内部默认的Unicode格式放入内存中，然后javac把转换后的Unicode格式的文件编译成class类文件，此时，class文件是Unicode编码的，它暂存在内存中，紧接着，JDK将此以Unicode格式编码的class文件保存到操作系统中形成我们见到的class文件。当我们不加设置就编译时，相当于使用了参数：javac -encoding GBK Test.java，就会出现不兼容的情况。</p><ul><li>解决方法：使用-encoding参数指明编码方式：<strong>javac -encoding UTF-8 Test.java</strong>，就可以了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 踩过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Java】学习笔记（语言基础及面向对象）</title>
      <link href="/2020/01/14/%E3%80%90Java%E3%80%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E5%8F%8A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%89/"/>
      <url>/2020/01/14/%E3%80%90Java%E3%80%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E5%8F%8A%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p>QAQ寒假flag屹立不倒~</p></blockquote><a id="more"></a><h1 id="Java语言概述"><a href="#Java语言概述" class="headerlink" title="Java语言概述"></a>Java语言概述</h1><ul><li><strong>Java虚拟机(JVM : Java Virtual Machine)</strong><br>java语言里负责解释执行字节码文件，是运行Java字节码文件的虚拟计算机。<br>当使用Java编译器编译Java程序时，生成的是与平台无关的字节码，这些字节码不面向任何具体平台，只面向JVM。<br>不同平台上的JVM都是不同的，但他们都提供了相同的接口。</li><li><strong>Java标准化开发包(JDK : Java SE Development Kit)</strong><br>提供了编译、运行Java程序所需的各种工具和资源（包括Java编译器、Java运行时环境以及常用的Java类库等）</li><li><strong>Java运行时环境(JRE : Java Runtime Enviroment)</strong><br>JRE与JVM的关系：JRE包含JVM，JVM是运行Java程序的核心虚拟机，而运行Java程序不仅需要核心虚拟机，还需要其他的类的加载器、字节码校验器以及基础类库。JRE除包含JVM之外，还包含运行Java程序的其他环境支持。</li><li><strong>计算机如何查找命令？（设置环境变量的原因）</strong><br>Windows根据Path环境变量来查找命令，Path环境变量的值是一系列路径，系统会根据这一系列路径中依次查找命令。如果能找到这个命令，则执行；如果找不到这个命令，就会出现：’xxx’不是内部或外部命令，也不是可运行的程序或批处理文件。</li><li><strong>关于CLASSPATH</strong><br>如果使用1.4以前版本的JDK，需要设置CLASSPATH环境变量的值为<br>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar<br>一旦设置了该环境变量，JRE将会按照该环境变量指定的路径来搜索Java类。<br>点( . )代表当前路径，用以强制Java解释器在当前路径下搜索Java类。</li><li><strong>Java源文件的命名规则</strong><br>如果Java源程序的源代码里定义了一个public类，则该源文件的主文件名必须与public类的类名相同。（因此，一个Java源文件内最多只能有一个public类）<br>如果一个源文件内有3个类，则使用javac命令编译会生成3个.class文件，每一个类对应一个.class文件。</li><li><strong>提高可读性的建议</strong></li></ul><ol><li>一个Java源文件通常只定义一个类，不同的类使用不同的源文件定义。</li><li>让Java源文件的主文件名与该源文件中定义的public类同名。</li></ol><ul><li><strong>垃圾回收（Garbage Collection , GC）</strong><br>JRE回收无用内存的机制。通常JRE会提供一个后台线程来进行检测和控制，一般都是在CPU空闲或内存不足时自动进行垃圾回收。</li><li><strong>Java的堆内存</strong><br>是一个运行时数据区，用以保存类的实例。堆内存中存储着在运行的应用程序所建立的所有对象，这些对象不需要程序通过代码来显式地释放。堆内存的回收由垃圾回收器来负责，所有的JVM实现都有一个由垃圾回收器管理的堆内存。<h1 id="数据类型和运算符"><a href="#数据类型和运算符" class="headerlink" title="数据类型和运算符"></a>数据类型和运算符</h1><h2 id="自动提升规则"><a href="#自动提升规则" class="headerlink" title="自动提升规则"></a>自动提升规则</h2><blockquote><p>byte -&gt; short&amp;char -&gt; int -&gt; long -&gt; float -&gt; double</p></blockquote></li></ul><ol><li>所有的byte、short和char类型都将被提升到int类型。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">short</span> value = <span class="number">5</span>;</span><br><span class="line">value = value - <span class="number">2</span>;</span><br><span class="line"><span class="comment">//这里的value-2被自动提升到int类型，int赋给short可能会报错</span></span><br></pre></td></tr></table></figure></li><li>整个算数表达式的数据类型自动提升到与表达式中最高等级操作数相同的类型</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> b = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">var</span> i = <span class="number">23</span>;</span><br><span class="line"><span class="keyword">var</span> d = .<span class="number">314</span>;</span><br><span class="line"><span class="keyword">double</span> ans = b + c + i * d;</span><br><span class="line">System.out.print(ans);<span class="comment">//输出7</span></span><br></pre></td></tr></table></figure><h2 id="直接量"><a href="#直接量" class="headerlink" title="直接量"></a>直接量</h2><p>是指在程序中通过源代码直接给出的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>; <span class="comment">//1是直接量</span></span><br><span class="line"><span class="keyword">double</span> b = <span class="number">2.0</span>; <span class="comment">//2.0是直接量</span></span><br><span class="line">String name = <span class="string">"MJT"</span>; <span class="comment">//"MJT"是直接量</span></span><br></pre></td></tr></table></figure><blockquote><p>String类的直接量不能赋给其他类型的变量。<br>null类型的直接量可以直接赋给任何引用类型的变量，包括String类型。<br>boolean类型的直接量只能赋给boolean类型的变量，不能赋给其他任何类型的变量。</p></blockquote><h2 id="常量池"><a href="#常量池" class="headerlink" title="常量池"></a>常量池</h2><p>指的是在编译器被确定，并保存在已编译的.class文件中的一些数据。<br>包括关于类、方法、接口中的常量，也包括字符串中的直接量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面的"hello"都在常量池中储存</span></span><br><span class="line"><span class="keyword">var</span> s1 = <span class="string">"hello"</span>; </span><br><span class="line"><span class="keyword">var</span> s2 = <span class="string">"hello"</span>;</span><br><span class="line"><span class="keyword">var</span> s3 = <span class="string">"he"</span> + <span class="string">"llo"</span>;</span><br></pre></td></tr></table></figure><blockquote><p>Java确保每个字符串常量只有一个，不会产生多个副本。<br>因此，上面那三个”hello”在常量池中是同一块数据。</p></blockquote><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th>功能</th></tr></thead><tbody><tr><td align="center">&amp;</td><td align="center">按位与</td><td>同时为1时返回1</td></tr><tr><td align="center">&#124;</td><td align="center">按位或</td><td>只要有一位为1则返回1</td></tr><tr><td align="center">~</td><td align="center">按位非</td><td>单目运算符，用来取反。</td></tr><tr><td align="center">^</td><td align="center">按位异或</td><td>当两位相同时返回0，不同时返回1</td></tr><tr><td align="center">&lt;&lt;</td><td align="center">左移运算符</td><td>右侧补0。左侧超出截断</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">右移运算符</td><td>原来是正数，则左边补零;原来是复数，则左边补1。右侧超出截断</td></tr><tr><td align="center">&gt;&gt;&gt;</td><td align="center">无符号右移运算符</td><td>左侧总是补零。右侧超出截断</td></tr></tbody></table><blockquote><p>n&gt;&gt;x相当于n乘以2的x次方。<br>n&lt;&lt;x相当于n除以2的x次方。</p></blockquote><h2 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h2><ol><li>静态初始化 : 显式指定初始值，系统决定数组长度。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一种方式</span></span><br><span class="line"><span class="keyword">int</span>[] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="comment">//第二种方式（推荐）</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span>  <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure></li><li>动态初始化 : 显式指定长度，系统分配初始值。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一种方式</span></span><br><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="comment">//第二种方式（推荐）</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br></pre></td></tr></table></figure></li><li>动态初始化分配规则</li></ol><table><thead><tr><th align="center">数组元素类型</th><th align="center">自动分配的值</th></tr></thead><tbody><tr><td align="center">整数类型</td><td align="center">0</td></tr><tr><td align="center">浮点类型</td><td align="center">0.0</td></tr><tr><td align="center">字符型(char)</td><td align="center">‘\u0000’</td></tr><tr><td align="center">布尔类型</td><td align="center">false</td></tr><tr><td align="center">引用类型(类，接口，数组）</td><td align="center">null</td></tr></tbody></table><br><h2 id="foreach循环"><a href="#foreach循环" class="headerlink" title="foreach循环"></a>foreach循环</h2><p>以遍历数组元素为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrs = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> arr : arrs) &#123;</span><br><span class="line">    System.out.println(arr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用foreach循环迭代数组元素时，并不能改变数组元素的值，因此不应用foreach的循环变量进行赋值。</p></blockquote><h2 id="深入数组"><a href="#深入数组" class="headerlink" title="深入数组"></a>深入数组</h2><p>Java中“数组元素”和“数组变量（引用变量）”在内存中是分开存放的。举个栗子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] p;<span class="comment">//定义一个局部变量</span></span><br></pre></td></tr></table></figure><blockquote><p>这里的p是一个引用变量，作为局部变量被存储在<strong>栈内存</strong>中。<br>相当于C++中的指针，指向一个int元素的内存。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>实际的数组元素{1,2,3}被存储在被new开辟的一块<strong>堆内存</strong>中，p = new int[] {1,2,3};则让p引用变量指向该堆内存。</p></blockquote><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE0MTI0NDQ5LnBuZw?x-oss-process=image/format,png" alt=""></p><h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态初始化方式</span></span><br><span class="line"><span class="keyword">int</span>[][] arr;</span><br><span class="line">arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>][];</span><br><span class="line"><span class="comment">//静态初始化方式</span></span><br><span class="line"><span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[][] &#123;<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>],<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE0MTMwOTE1LnBuZw?x-oss-process=image/format,png" alt=""></p><blockquote><p>这个二维数组实际上完全可以看作是一维数组：使用new int[4]初始化一维数组后，相当于定义了4个int类型的变量；<br>类似的，使用new int[4][]初始化这个数组后，相当于<strong>定义了4个int[]类型的变量</strong>，这些int[]类型的变量都是数组类型，因此必须再次初始化这些数组。</p></blockquote><h1 id="面向对象（上）"><a href="#面向对象（上）" class="headerlink" title="面向对象（上）"></a>面向对象（上）</h1><h2 id="关于static的问题"><a href="#关于static的问题" class="headerlink" title="关于static的问题"></a>关于static的问题</h2><p><strong>为什么静态成员（类成员）不能直接访问非静态成员（对象成员）？</strong></p><p>先了解几个书中的基本概念</p><p>主调：调用成员变量、方法的对象称为主调。如：主调.方法();</p><p>基本概念（1）：如果调用static修饰的成员时忽略了主调，那么默认使用该类作为主调。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在调用static方法时下列两种形式相同。</span></span><br><span class="line">static_fun();</span><br><span class="line">ClassName.static_fun();</span><br></pre></td></tr></table></figure><p>基本概念（2）：如果调用没有static修饰的成员时忽略了主调，那么默认使用this作为主调。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用普通成员时下列两种形式相同。</span></span><br><span class="line">fun();</span><br><span class="line"><span class="keyword">this</span>.fun();</span><br></pre></td></tr></table></figure><p>基本概念（3）：this指向本类的实例，而static成员是属于类的，因此static成员内不能使用this。</p><p>如果在静态成员中调用普通成员，会发生什么？ 举个栗子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"HelloWorld"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">===============运行结果=================</span><br><span class="line">错误: 无法从静态上下文中引用非静态 方法 show()</span><br></pre></td></tr></table></figure><p>这对应基本概念（2），这里调用的是一个普通成员函数show，则默认使用this作为主调。<br>这里相当于this.show();<br>但show()只能通过对象来访问，而static方法是属于类的，在static内的this不知道该指向哪一个实例，因此show()无法在main方法中被调用。</p><p>如果确实想在static方法中调用非static方法，可以临时创建一个对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"HelloWorld"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个临时对象来调用临时对象中的show方法。</span></span><br><span class="line">        <span class="keyword">new</span> test().show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法的参数传递机制"><a href="#方法的参数传递机制" class="headerlink" title="方法的参数传递机制"></a>方法的参数传递机制</h2><p>Java参数的传递机制只有一种：值传递</p><p>对于引用类型的参数传递，一样采用的是值传递方式。但是这里的“值”，是地址值。比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Data</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> num2=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(Data p)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> temp = p.num1;</span><br><span class="line">        p.num1 = p.num2;</span><br><span class="line">        p.num2 = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Data a; <span class="comment">//定义一个Data类型的引用</span></span><br><span class="line">        a = <span class="keyword">new</span> Data(); <span class="comment">//a引用指向一块用new新开辟的一块Data内存空间。</span></span><br><span class="line">        swap(a); <span class="comment">//值传递，p接受a的地址值，使得p与a存储着相同的地址值。</span></span><br><span class="line">        System.out.println(a.num1 + <span class="string">" "</span> + a.num2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE0MTQwNDIyLnBuZw?x-oss-process=image/format,png" alt=""></p><h2 id="形参个数可变的方法"><a href="#形参个数可变的方法" class="headerlink" title="形参个数可变的方法"></a>形参个数可变的方法</h2><p>方法：在最后一个形参类型后加三个点 (Typename… name)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> num,String... books)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String string : books) &#123;</span><br><span class="line">            System.out.println(string);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//可直接罗列参数</span></span><br><span class="line">        fun(<span class="number">3</span>,<span class="string">"Java"</span>,<span class="string">"C++"</span>,<span class="string">"Python"</span>);</span><br><span class="line">        <span class="comment">//也可将String...看做String[]，传递一个数组进去。</span></span><br><span class="line">        fun(<span class="number">3</span>,<span class="keyword">new</span> String[] &#123;<span class="string">"Java"</span>,<span class="string">"C++"</span>,<span class="string">"Python"</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>必须将Typename…形参放在在最后一个位置，否则会报错。</p></blockquote><h2 id="成员变量和局部变量"><a href="#成员变量和局部变量" class="headerlink" title="成员变量和局部变量"></a>成员变量和局部变量</h2><p>  成员变量：在类内定义的变量。无需显式初始化，系统自动初始化。<br>  局部变量：在方法内定义的变量。需要显式初始化。<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE0MTQzMzQyLnBuZw?x-oss-process=image/format,png" alt=""></p><h2 id="成员变量的初始化和内存中的运行机制"><a href="#成员变量的初始化和内存中的运行机制" class="headerlink" title="成员变量的初始化和内存中的运行机制"></a>成员变量的初始化和内存中的运行机制</h2><p>当系统加载类或创建该类的实例时，系统会自动为成员变量分配内存空间。</p><p>举个栗子：<br>比如说我们有一个类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> eyeNum;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1）如果在主函数中第一次加载这个类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Person();</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE0MTQ0NjM2LnBuZw?x-oss-process=image/format,png" alt=""></p><blockquote><p>会初始化Person类，只初始化静态变量（类变量）↑</p></blockquote><p>2）然后创建一个Person类型的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person();</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE0MTQ1MDE2LnBuZw?x-oss-process=image/format,png" alt=""></p><blockquote><p>创建一个Person对象时并不需要为eyeName类变量分配内存<br>系统只为name实例变量分配了内存空间</p></blockquote><p>3）再创建第二个Person类对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Person();</span><br><span class="line">p2.name = <span class="string">"张三"</span>;</span><br></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE0MTQ1NTI5LnBuZw?x-oss-process=image/format,png" alt=""></p><blockquote><p>系统只为第二个对象的对象成员分配了内存空间</p></blockquote><h2 id="局部变量的初始化和内存中的运行机制"><a href="#局部变量的初始化和内存中的运行机制" class="headerlink" title="局部变量的初始化和内存中的运行机制"></a>局部变量的初始化和内存中的运行机制</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a; <span class="comment">//系统并未分配空间</span></span><br><span class="line">a = <span class="number">1</span>; <span class="comment">//赋值时才分配空间</span></span><br></pre></td></tr></table></figure><ol><li>局部变量不属于任何类或实例，因此它总是保存在其<strong>所在方法的栈内存中</strong></li><li>因为局部变量只保存基本类型的值或者对象的引用，因此<strong>局部变量所占的内存区通常比较小</strong></li></ol><h2 id="访问控制符"><a href="#访问控制符" class="headerlink" title="访问控制符"></a>访问控制符</h2><table><thead><tr><th align="left"></th><th align="center">private</th><th align="center">default</th><th align="center">protected</th><th align="center">public</th></tr></thead><tbody><tr><td align="left">同一个类中</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="left">同一个包中</td><td align="center"></td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="left">子类中</td><td align="center"></td><td align="center"></td><td align="center">√</td><td align="center">√</td></tr><tr><td align="left">全局范围内</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">√</td></tr></tbody></table><blockquote><p>局部变量不能用用访问控制符修饰</p></blockquote><h2 id="工具方法"><a href="#工具方法" class="headerlink" title="工具方法"></a>工具方法</h2><p>  只用于辅助该类的其他方法的方法。也应该用private修饰</p><h2 id="package包机制"><a href="#package包机制" class="headerlink" title="package包机制"></a>package包机制</h2><p>几个知识点</p><ol><li>包机制用于解决类的重名冲突，类文件的管理。</li><li>按照规范，包名最好小写字母。</li><li>应该使用域名的倒写，如com.ccatom包。</li><li>package语句必须作为源文件的第一条非注释语句。</li><li>一个源文件只能指定一个包</li><li>同一个包下的类可以直接访问</li><li>通常建议将class文件与java源文件分开放。</li></ol><p>特别注意的是：父包内的类使用子包中的类，必须写类的完整包路径加类名。</p><p>比如com.ccatom包下有一个类A，com.ccatom.child包下有一个类B。<br>类A使用类B必须要有com.ccatom.child.B，就像以下形式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com.ccatom.child.B obj = <span class="keyword">new</span> com.ccatom.child.B();</span><br></pre></td></tr></table></figure><h2 id="一个使用包机制的示例"><a href="#一个使用包机制的示例" class="headerlink" title="一个使用包机制的示例"></a>一个使用包机制的示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个子包的类</span></span><br><span class="line"><span class="keyword">package</span> com.ccatom.child;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello Package"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">父包类要用子包类，因此先编译子包源文件：javac -d . B.java</span><br><span class="line">发现在以下目录出现了class文件：当前目录\com\ccatom\child\B.class</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//再定义一个使用子包类的父包类</span></span><br><span class="line"><span class="keyword">package</span> com.ccatom;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//使用完整的名称来使用子类包</span></span><br><span class="line">        com.ccatom.child.B obj = <span class="keyword">new</span> com.ccatom.child.B();</span><br><span class="line">        obj.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">编译父包类源文件：javac -d . A.java</span><br><span class="line">发现在以下目录出现了class文件：当前目录\com\ccatom\A.class</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">运行父类包：java com.ccatom.A</span><br><span class="line">输出Hello Package</span><br></pre></td></tr></table></figure><blockquote><p>如果编译Java文件时不使用-d选项，编译器不会为Java源文件生成相应的文件结构。</p></blockquote><h2 id="import关键字"><a href="#import关键字" class="headerlink" title="import关键字"></a>import关键字</h2><p>import关键字用来简化上述源代码，简化以前：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ccatom;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        com.ccatom.child.B obj = <span class="keyword">new</span> com.ccatom.child.B();</span><br><span class="line">        obj.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用import直接导入类B，简化之后：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ccatom;</span><br><span class="line"><span class="keyword">import</span> com.ccatom.child.B;<span class="comment">//import导入子包类B</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        B obj = <span class="keyword">new</span> B(); <span class="comment">//简化了此处的操作</span></span><br><span class="line">        obj.show();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果想导入某个包下所有的类，则可以这样写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.ccatom.*; <span class="comment">//导入了com.ccatom包下的所有的类</span></span><br></pre></td></tr></table></figure><p>JDK 1.5以后可以进行“静态导入”，用来导入指定类的某个静态成员变量或方法。<br>如，导入com.ccatom包中类A的静态方法fun() ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.ccatom.A.fun;</span><br></pre></td></tr></table></figure><p>也可以导入类A中所有的静态成员：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.ccatom.A.*;</span><br></pre></td></tr></table></figure><blockquote><p>1.import语句应该出现在package语句之后、类定义之前。<br>2.Java默认为所有源文件导入java.lang包下所有的类，因此可以直接使用String和System类。<br>使用import可以省略包名；而使用import static则可以连类名都省略。</p></blockquote><h2 id="Java常用包"><a href="#Java常用包" class="headerlink" title="Java常用包"></a>Java常用包</h2><table><thead><tr><th>包</th><th>含有</th><th>例如</th></tr></thead><tbody><tr><td>java.lang</td><td>核心类（无需导入）</td><td>String、Math、System、Thread</td></tr><tr><td>java.util</td><td>工具类/接口和集合框架类/接口</td><td>Arrays、List、Set</td></tr><tr><td>java.net</td><td>网络编程相关</td><td>-</td></tr><tr><td>java.text</td><td>输入输出的类/接口</td><td>-</td></tr><tr><td>java.sql</td><td>JDBC数据库编程的相关类/接口</td><td>-</td></tr><tr><td>java.awt</td><td>抽象窗口工具集，用于构建GUI</td><td>-</td></tr><tr><td>java.swing</td><td>Swing GUI编程的相关类</td><td>-</td></tr></tbody></table><h2 id="Java构造器"><a href="#Java构造器" class="headerlink" title="Java构造器"></a>Java构造器</h2><p>类似于C++中的构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">//一个简单的构造器，用来初始化name和age</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">(String name,<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Test obj = <span class="keyword">new</span> Test(<span class="string">"MJT"</span>,<span class="number">20</span>);</span><br><span class="line">        System.out.println(obj.name+<span class="string">" "</span>+obj.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>不能说Java对象完全由构造器负责创建</strong>：在调用构造器之前，系统就已经为对象分配内存空间，并为这个对象执行默认初始化，这个对象就已经产生了。只是这个对象不能被外部访问，只能通过内部构造器的this来引用。</p></blockquote><p>同时，上述代码自定义了一个有参的构造器，这时就不能再用new Test();来创建实例，因为类中没有无参构造器。因此需要进行<strong>构造器重载</strong>（同一个类里具有多个构造器，各构造器的形参列表不同）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//上述类中重载一个无参的构造器</span></span><br><span class="line"><span class="comment">//就可以用new Test();来创建实例了</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">()</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>同一个类的构造器之间的调用</strong></li></ul><p>一种方法是在构造器中用new关键字来调用另一个构造器，但会重新创建一个对象，占用资源。<br>因此，对于含有包含关系的构造器来讲，就要<strong>用this调用另一个重载的构造器</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">(String name,<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(name);<span class="comment">//用this调用重载的构造器</span></span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里需要注意的是：</p><ol><li>使用this调用另一个重载的构造器<strong>只能在构造器中使用</strong>；</li><li>必须作为构造器执行体的<strong>第一行语句</strong>；</li></ol><h2 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h2><p>比如B类以public方式继承A类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> B extends A&#123;......&#125;</span><br></pre></td></tr></table></figure><p>需要注意的一些小知识：</p><ol><li>Java摒弃了多继承特征，<strong>Java类只能有一个直接父类</strong>；</li><li>为显式指定父类，则默认父类java.lang.Object,java。因此，<strong>java.lang.Object类是所有类的父类</strong>；</li><li>构造器不能被继承；</li><li>从子类角度看，子类扩展（extends）了父类；</li><li>从父类角度看，父类派生（derive）出了子类；</li></ol><h2 id="重写父类的方法"><a href="#重写父类的方法" class="headerlink" title="重写父类的方法"></a>重写父类的方法</h2><p>方法重写（override）：子类包含父类同名方法的现象。又称方法覆盖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"A_fun"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="comment">//重写父类A中的方法fun</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"B_fun"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        B obj = <span class="keyword">new</span> B();</span><br><span class="line">        obj.fun();<span class="comment">//输出B_fun</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>静态方法与非静态方法不能互相重写</p></blockquote><p>如果父类中有一个private方法，则在子类中定义一个同名方法不构成重写，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="comment">//父类中的方法定义为private</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;...&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="comment">//这里可以用static限定，因为不属于重写。</span></span><br><span class="line">    <span class="comment">//所定义的fun是子类的新方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="super限定"><a href="#super限定" class="headerlink" title="super限定"></a>super限定</h2><p>如果需要在子类中调用父类中被重写的方法，可以用super限定作为主调来调用被覆盖的方法。比如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show_a_in_A</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//在子类方法中用super来调用父类的实例变量a</span></span><br><span class="line">        System.out.println(<span class="keyword">super</span>.a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//尽管父类的a被子类的a覆盖</span></span><br><span class="line">        <span class="comment">//但是new B();的时候依然会为父类中的a开辟一块内存</span></span><br><span class="line">        B obj = <span class="keyword">new</span> B();</span><br><span class="line">        obj.show_a_in_A();<span class="comment">//输出1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的小知识：</p><ol><li>可以将super与this相似看待，<strong>super不能出现在static修饰的方法中</strong>；</li><li>并不是完全覆盖，系统在创建子类对象时，依然会为父类中定义的、被隐藏的变量分配内存空间；</li></ol><h2 id="重载（overload）与重写（override）"><a href="#重载（overload）与重写（override）" class="headerlink" title="重载（overload）与重写（override）"></a>重载（overload）与重写（override）</h2><p>重载：发生在同一个类的多个同名方法之前。<br>重写：发生在子类和父类的同名方法之间。</p><blockquote><p>也有例外：如果子类中定义一个与父类方法有相同的方法名，但参数列表不同的方法，就会形成父类方法和子类方法的重载。</p></blockquote><h2 id="子类调用父类的构造器"><a href="#子类调用父类的构造器" class="headerlink" title="子类调用父类的构造器"></a>子类调用父类的构造器</h2><p>同一个类，在一个构造器中调用另一个构造器使用this调用来完成。<br>类似的，在子类构造器中调用父类的构造器用super调用来完成。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">(String n)</span></span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">B</span><span class="params">(String n,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        <span class="comment">//使用super限定来调用父类的构造器</span></span><br><span class="line">        <span class="keyword">super</span>(n)</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        B obj = <span class="keyword">new</span> B(<span class="string">"MJT"</span>,<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的小知识：</p><ol><li>super调用父类构造器时也必须出现在构造器执行体的<strong>第一行</strong>（因此this调用与super调用不会同时出现）</li><li>当调用子类构造器来初始化子类对象时，父类构造器总会在子类构造器之前执行。</li><li>super调用不能用在static方法内（构造器不属于类，也不可能用static修饰）</li></ol><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><ul><li>多态：相同类型的变量，调用同一个方法时呈现出多种不同的行为特征的现象。</li><li>编译时类型：由声明变量的类型决定，如 String s ,那么String就是编译时类型。</li><li>运行时类型：由实际赋给该变量的对象决定，如var s =  new String()； ，那么String就是运行时类型。</li><li>向上转型（upcasting）：将一个子类对象直接赋给一个父类引用变量</li></ul><p><strong>如果编译时类型和运行时类型不一致，就可能出现多态</strong><br>类似的形式： 编译时类型 变量名 = new 运行时类型();</p><p>这种类型的多态分为两种情况：</p><p>首先是重写成员的情况：<br>先上结论：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE1MDAxMTE5LnBuZw?x-oss-process=image/format,png" alt=""></p><blockquote><p>解释一下图表：变量名.重写方法(); 调用的是执行运行时类型的方法，也就相当于<br>变量名.执行运行时类型的方法();</p></blockquote><p>以代码为例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//这里的num与show对应图表中的“重写实例变量”与“重写方法”</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Father_show_override"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//子类中重写num实例变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> num = <span class="number">3</span>;</span><br><span class="line">    <span class="comment">//子类中重写show方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Child_show_override"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Father obj = <span class="keyword">new</span> Child();</span><br><span class="line"></span><br><span class="line">        obj.show();<span class="comment">//调用重写的show方法</span></span><br><span class="line">        System.out.println(obj.num);<span class="comment">//输出重写的num实例变量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是特有成员的情况（子类有，父类没有 或 父类有子类没有）<br>结论：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE1MDAyMDUyLnBuZw?x-oss-process=image/format,png" alt=""><br>代码为例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//父类中特有的实例变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> father_num = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">//父类中特有的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">father_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Father_fun"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="comment">//子类中特有的实例变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> child_num = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">//子类中特有的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">child_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Child_fun"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Father obj = <span class="keyword">new</span> Child();</span><br><span class="line"></span><br><span class="line">        obj.father_fun();<span class="comment">//调用父类中特有的方法</span></span><br><span class="line">        System.out.println(obj.father_num);<span class="comment">//输出父类中特有的实例变量</span></span><br><span class="line"></span><br><span class="line">        obj.child_fun();<span class="comment">//调用子类中特有的方法，报错</span></span><br><span class="line">        System.out.println(obj.child_num);<span class="comment">//输出子类中特有的实例变量，报错</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="instanceof运算符"><a href="#instanceof运算符" class="headerlink" title="instanceof运算符"></a>instanceof运算符</h2><ul><li><p>使用：双目运算符。前一个操作数通常是一个引用类型变量，后一个操作数通常是一个类（或接口）。</p></li><li><p>作用：用来判断前面的对象是否是后面的类或其子类（是返回true，不是则返回false）。</p></li><li><p>应用：一般用于强制类型转换（向上或向下转型）的情景。</p><p>例如：如果试图将一个父类实例强制转换为子类类型，则这个对象必须是子类实例才行（即编译时类型是父类类型，而运行时类型是子类类型）否则将在运行时引发ClassCastException异常。</p><p>通常情况下instanceof和(type)运算符搭配使用：通常先用instanceof判断一个对象是否可以强制类型转换，然后再使用(type)运算符进行强制类型转换，从而保证程序不会出现错误。</p><p>举个栗子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果obj是String类或其子类</span></span><br><span class="line"><span class="keyword">if</span>(obj <span class="keyword">instanceof</span> String)&#123;</span><br><span class="line">    <span class="comment">//那么就可以将obj对象类型强制转换为同类或其父类类型</span></span><br><span class="line">    <span class="keyword">var</span> str = (String)obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用继承的注意点"><a href="#使用继承的注意点" class="headerlink" title="使用继承的注意点"></a>使用继承的注意点</h2></li><li><p>尽量隐藏父类的内部数据，用private修饰符。</p></li><li><p>不要让子类可以随意访问、修改父类的方法。工具方法应该用private修饰；需要被外部类调用，就用public修饰，但又不想子类重写该方法，就再加一个final修饰符；如果希望某个方法被子类重写，又不想被其他类访问，就用protected修饰符。</p></li><li><p>尽量不要在父类构造器中调用将要被子类重写的方法。</p></li></ul><h2 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h2><ul><li>对于继承：子类可以直接获得父类的public方法。</li><li>而对于组合：把旧类对象作为新类的成员变量组合起来，用以实现新类的功能。</li></ul><p>举个栗子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun_A</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello_World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="comment">//将旧类A的对象a作为新类B的成员变量组合起来。</span></span><br><span class="line">    <span class="comment">//这里用private，是因为我们想让用户看到的只是旧类的方法，而不是旧类对象。</span></span><br><span class="line">    <span class="keyword">private</span> A a = <span class="keyword">new</span> A();<span class="comment">//组合</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun_A_in_B</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//从而可以在新类方法内调用旧类的方法。</span></span><br><span class="line">        a.fun_A();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> obj = <span class="keyword">new</span> B();</span><br><span class="line">        obj.fun_A_in_B();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>组合的内存花销：继承与组合设计的系统开销不会有本质的差别。继承为父类（旧类）开辟空间，也为子类（新类）开辟空间。组合也一样，只不过比继承多了一个引用变量来引用被嵌入的对象，一般影响不大。</p></blockquote><h2 id="初始化块"><a href="#初始化块" class="headerlink" title="初始化块"></a>初始化块</h2><ul><li>格式：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] &#123;</span><br><span class="line">    &#x2F;&#x2F;初始化块的可执行性代码</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>这里的 [修饰符] 如果是static，则称此代码块为<strong>类初始化块</strong></li><li>没有static修饰，则称为<strong>实例初始化块</strong><h3 id="实例初始化块"><a href="#实例初始化块" class="headerlink" title="实例初始化块"></a>实例初始化块</h3></li><li>实例初始化块只在创建Java对象时隐式执行，而且在构造器执行之前自动执行<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"第一个运行的实例初始化块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"初始化块按顺序执行"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"先运行完初始化块后运行Test构造器"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Test();<span class="comment">//创建对象时隐式执行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">=============执行结果=============</span><br><span class="line">第一个运行的初始化块</span><br><span class="line">初始化块按顺序执行</span><br><span class="line">先运行完初始化块后运行Test构造器</span><br></pre></td></tr></table></figure><blockquote><p>实例初始化块的“假象”：其实在编译后实例初始化块会消失，被还原到每个构造器的所有代码的前面</p></blockquote></li></ul><h3 id="类初始化块"><a href="#类初始化块" class="headerlink" title="类初始化块"></a>类初始化块</h3><ul><li>类初始化块在类初始化阶段执行，而不是创建对象时才执行。因此<strong>类初始化块总是比实例初始化块先执行</strong>。</li><li>类初始化块只能访问静态成员。</li></ul><h3 id="【重点】实例初始化快、类初始化快、构造器的执行顺序"><a href="#【重点】实例初始化快、类初始化快、构造器的执行顺序" class="headerlink" title="【重点】实例初始化快、类初始化快、构造器的执行顺序"></a>【重点】实例初始化快、类初始化快、构造器的执行顺序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"父类类初始化块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"父类实例初始化块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Father</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"父类的构造器"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"子类类初始化块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"子类实例初始化块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Child</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"子类的构造器"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//第一次new Child();</span></span><br><span class="line">        <span class="keyword">new</span> Child();</span><br><span class="line">        <span class="comment">//第二次new Child();</span></span><br><span class="line">        <span class="keyword">new</span> Child();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用流程图来简单描述运行流程（贫穷的我只能用试用版亿图图示）：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE2MDAwMDA4LnBuZw?x-oss-process=image/format,png" alt=""></p><h1 id="面向对象（下）"><a href="#面向对象（下）" class="headerlink" title="面向对象（下）"></a>面向对象（下）</h1><h2 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h2><p>Java中的基本类型功能简单，不具备对象的特性，为了使基本类型具备对象的特性，所以出现了包装类，就可以像操作对象一样操作基本类型数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个包装类Integer的对象</span></span><br><span class="line">Integer int_obj = <span class="keyword">new</span> Integer(<span class="number">1024</span>);</span><br></pre></td></tr></table></figure><ul><li>自动装箱：将一个基本类型变量直接赋给对应的包装类变量，或者赋给Object变量。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动装箱</span></span><br><span class="line"><span class="keyword">int</span> num = <span class="number">1024</span>;<span class="comment">//一个基本类型变量</span></span><br><span class="line">Integer int_obj=num;<span class="comment">//直接赋给Integer包装类变量</span></span><br></pre></td></tr></table></figure></li><li>自动拆箱：与装箱相反，直接把包装类对象赋给一个对应的基本类型变量。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动拆箱</span></span><br><span class="line">Integer int_obj = <span class="keyword">new</span> Integer(<span class="number">1024</span>);<span class="comment">//一个包装类对象</span></span><br><span class="line"><span class="keyword">int</span> num = int_obj;<span class="comment">//直接赋给基本类型变量</span></span><br></pre></td></tr></table></figure></li><li>基本数据类型和包装类的对应关系</li></ul><table><thead><tr><th>基本数据类型</th><th>包装类</th></tr></thead><tbody><tr><td>byte</td><td>Byte</td></tr><tr><td>short</td><td>Short</td></tr><tr><td>int</td><td><strong>Integer</strong></td></tr><tr><td>long</td><td>Long</td></tr><tr><td>char</td><td><strong>Character</strong></td></tr><tr><td>float</td><td>Float</td></tr><tr><td>double</td><td>Double</td></tr><tr><td>boolean</td><td>Boolean</td></tr></tbody></table><ul><li><p>包装类常用方法<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2NuYXRvbS9pbWFnZXMvaW1hZ2VzLzIwMjAwMTE2MTM0OTU5LnBuZw?x-oss-process=image/format,png" alt=""></p><h2 id="打印对象和toString方法"><a href="#打印对象和toString方法" class="headerlink" title="打印对象和toString方法"></a>打印对象和toString方法</h2><p>在Java中可以直接输出类对象。<br>举个栗子：<br>先定义一个简单的类，用于输出：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在main函数中直接输出Person类对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Person obj = <span class="keyword">new</span> Person(<span class="number">1024</span>);</span><br><span class="line">        System.out.println(obj);<span class="comment">//直接输出类对象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">============输出结果=============</span><br><span class="line">Person@<span class="number">1f</span>32e575</span><br></pre></td></tr></table></figure><p>实际上这里隐式用到了Object类里的一个实例方法toString()<br>而所有的Java类都是Object类的子类，因此所有的Java对象都具有toString()方法<br>下面这两种形式是等价的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(obj);</span><br><span class="line">System.out.println(obj.toString());</span><br></pre></td></tr></table></figure><p>Object类提供的toString()方法总是返回该对象实现类的”类名+@+hashCode”值。<br>如果想要输出我们想要的结果，就可以重写toString方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> num;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重写这个toString方法（Object类的一个实例方法）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"["</span> + <span class="string">"num="</span> + num + <span class="string">"]"</span>;<span class="comment">//返回我们想要的结果</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译javac -d . Test.java<br>运行java Test<br>走<del>~</del></p><p>  [num=12]</p></li></ul><p>还是挺好玩的QAQ</p><h2 id="和equals方法"><a href="#和equals方法" class="headerlink" title="==和equals方法"></a>==和equals方法</h2><p>在Java中有两种比较变量的方式：一个是利用==，另一个是利用equals()方法。</p><p><strong>先来说说==运算符。</strong><br>这玩意对于基本数据类型可以直接比较，C++中也经常使用。<br>但是如果用来比较引用类型变量的话，则只有两个引用类型变量都指向同一个对象时，==判断才会返回true。举个栗子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num1 = Integer.valueOf(<span class="number">1024</span>);</span><br><span class="line"><span class="keyword">var</span> num2 = Integer.valueOf(<span class="number">1024</span>);</span><br><span class="line">System.out.println(num1 == num2);</span><br><span class="line">============输出结果=============</span><br><span class="line"><span class="keyword">false</span></span><br></pre></td></tr></table></figure><p>这里的num1和num2是两个引用类型变量，分别存储着不同的地址，指向不同的位置，==直接判断的是地址，因此输出false</p><p><strong>再讲讲equals方法</strong><br>equals()方法是Object类提供的一个实例方法，因此所有的引用变量都可以调用该方法来判断是否与其他引用变量相等。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num1 = Integer.valueOf(<span class="number">1024</span>);</span><br><span class="line"><span class="keyword">var</span> num2 = Integer.valueOf(<span class="number">1024</span>);</span><br><span class="line">System.out.println(num1.equals(num2));</span><br><span class="line">============输出结果==============</span><br><span class="line"><span class="keyword">true</span></span><br></pre></td></tr></table></figure><blockquote><p>这里的equals()方法判断的不是地址，而是其指向的值。</p></blockquote><p><strong>自定义equals()方法</strong><br>这个equals()既然是Object类的一个方法，而Object类是所有类的父类。<br>那么我们也可以像自定义toString()方法那样来自定义equals()咯~<br>举个栗子：<br>我们先定义一个”人”类，有名字也有年龄，只要年龄相等，我们就判断这两个是true<br>即p1.equals(p2);应该返回true。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;<span class="comment">//年龄</span></span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//姓名</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> age,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重写equals方法，只判断年龄就好了。</span></span><br><span class="line">    <span class="comment">//重写要求返回值和形参都不能改变。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">this</span>.age==obj.age?<span class="keyword">true</span>:<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//两个人名字不同，但年龄相同。</span></span><br><span class="line">        Person p1 = <span class="keyword">new</span> Person(<span class="number">18</span>, <span class="string">"Amy"</span>);</span><br><span class="line">        Person p2 = <span class="keyword">new</span> Person(<span class="number">18</span>, <span class="string">"Tom"</span>);</span><br><span class="line">        System.out.println(p1.equals(p2));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译 运行 走<del>~</del></p><pre><code>Exception in thread &quot;main&quot; java.lang.Error: Unresolved compilation problem:    age cannot be resolved or is not a field    at Person.equals(Test.java:32)    at Test.main(Test.java:40)</code></pre><p>emmm，竟然报错了。<br>报错信息指向这一段</p><pre><code>obj.age</code></pre><p>obj作为父类，并没有age这个变量。age是Person子类的特有成员！<br>但是想要重写，就必须返回值和形参都不能改变，而形参里面必有Object obj（equals文档说的）<br>那怎么办呢？？<br><strong>强制类型转换</strong><br>也就是需要进行向下转型，((Person)obj).age。<br>同时也要判断obj是不是Person类的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span></span>&#123;</span><br><span class="line">    <span class="comment">//判断obj对象是不是Person类对象</span></span><br><span class="line">    <span class="keyword">if</span>(obj.getClass() == Person<span class="class">.<span class="keyword">class</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">this</span>.age==((Person)obj).age?<span class="keyword">true</span>:<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他不变 编译 运行 走~~</p><pre><code>true</code></pre><blockquote><p>小细节：为什么是((Person)obj).age而不是(Person)obj.age ?<br>这是因为成员运算符（.）的优先级要比括号高。<br>(Person)obj.age就等同于(Person)(obj.age)</p></blockquote><h2 id="final成员变量"><a href="#final成员变量" class="headerlink" title="final成员变量"></a>final成员变量</h2><ul><li>前置知识：类初始化时，系统会为该类的类变量分配内存，并分配默认值；当创建对象时，系统会为该对象的实例变量分配内存，并分配默认值。</li><li>关于final：用final修饰的成员变量，一旦有了初始值，就不能被重新赋值。</li><li>Java语法规定：final修饰的成员变量必须由程序员显式地指定初始值。</li></ul><table><thead><tr><th>变量类型</th><th>能指定初始值的位置</th></tr></thead><tbody><tr><td>类变量</td><td>静态初始化块、声明时</td></tr><tr><td>实例变量</td><td>非静态初始化块、声明时、构造器中</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********类变量*********/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明时初始化</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> num = <span class="number">1024</span>;</span><br><span class="line"><span class="comment">//静态初始化块中初始化</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">    num = <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********实例变量*********/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明时初始化</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> num = <span class="number">1024</span>;</span><br><span class="line"><span class="comment">//非静态初始化块中初始化</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> num;</span><br><span class="line">&#123;</span><br><span class="line">    num = <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//构造器中初始化</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">private</span> <span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.num = num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>特别注意：如果打算在构造器、初始化块中对final成员变量进行初始化，则不要在初始化之前访问final成员变量。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> num;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//还没有初始化num，这样会报错</span></span><br><span class="line">    System.out.println(num);</span><br><span class="line">    <span class="comment">//但是，Java允许通过方法来访问final变量。</span></span><br><span class="line">    <span class="comment">//因此，通过这个fun()方法来间接访问num</span></span><br><span class="line">    <span class="comment">//会导致系统自动为num赋0</span></span><br><span class="line">    fun();</span><br><span class="line">    <span class="comment">//fun()结束后已经被系统赋初始值了</span></span><br><span class="line">    <span class="comment">//这里的num=1024失效</span></span><br><span class="line">    num = <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于final"><a href="#关于final" class="headerlink" title="关于final"></a>关于final</h2><h3 id="final局部变量"><a href="#final局部变量" class="headerlink" title="final局部变量"></a>final局部变量</h3><p>final局部变量的赋值可以往后稍稍，先声明，过一会再初始化。比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> num;<span class="comment">//先声明</span></span><br><span class="line">    num = <span class="number">1024</span>;<span class="comment">//稍后再进行初始化</span></span><br><span class="line">    System.out.println(num);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="final引用类型变量"><a href="#final引用类型变量" class="headerlink" title="final引用类型变量"></a>final引用类型变量</h3><blockquote><p>对于引用类型变量来讲，它保存的仅仅是一个引用，final只保证这个引用类型变量所指向的地址不会改变。</p></blockquote><h3 id="“宏替换”的final变量"><a href="#“宏替换”的final变量" class="headerlink" title="“宏替换”的final变量"></a>“宏替换”的final变量</h3><p>对于一个final变量来说，只要满足三个条件：</p><ol><li>使用final修饰符修饰。</li><li>在定义的同时指定了初始值。</li><li>该初始值可以在编译时被确定下来。</li></ol><p>这个final变量就不再是一个变量，而是相当于一个直接量，被存储在常量池中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面两个都是final“宏变量”</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">var</span> a = <span class="number">5</span>+<span class="number">2</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">var</span> str1 = <span class="string">"阿腾木"</span>+<span class="string">"的"</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">var</span> str2 = <span class="string">"小世界"</span></span><br><span class="line"><span class="comment">//下面的初始值不能在编译时确定</span></span><br><span class="line"><span class="comment">//不被当成宏变量</span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">var</span> num = Integer.valueOf(<span class="number">1024</span>);</span><br></pre></td></tr></table></figure><h3 id="final方法"><a href="#final方法" class="headerlink" title="final方法"></a>final方法</h3><blockquote><p>final修饰的方法不可被重写</p></blockquote><p>一个“例外”：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="comment">//这里用了private限定</span></span><br><span class="line">    <span class="comment">//对于B类是不可见的</span></span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">private</span> <span class="title">fun</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="comment">//因此这里相当于定义了一个新的方法</span></span><br><span class="line">    <span class="comment">//属于B子类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">fun</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="final类"><a href="#final类" class="headerlink" title="final类"></a>final类</h3><blockquote><p>final修饰的类不可以有子类</p></blockquote><h2 id="不可变类"><a href="#不可变类" class="headerlink" title="不可变类"></a>不可变类</h2><p>不可变(immutable)类的意思是创建该类的实例后，该实例的实例变量是不可改变的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="comment">//不可变类需要用private和final修饰成员变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String str;</span><br><span class="line">    <span class="comment">//需要提供带参数的构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.str = str;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//仅为该类的类成员提供getter方法</span></span><br><span class="line">    <span class="comment">//不提供setter方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>不可变类的实例在整个生命周期中永远处于初始化状态。<br>Java的8个包装类和java.lang.String类都是不可变类</p></blockquote><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><ol><li>抽象类只能被继承，无法使用new进行实例化。</li><li>abstract不能修饰变量。</li><li>有抽象方法的类只能是抽象类，抽象类可以没有抽象方法。</li><li>abstract与private不共存，因为在子类中private方法不可见，则无法重写。</li><li>final与abstract不能共存，否则类不能被继承，方法不能被重写。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Abs里面有一个抽象方法，Abs只能是抽象类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> Abs&#123;</span><br><span class="line">    <span class="comment">//abstract不能修饰变量</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//抽象类的构造器不能用于创建实例</span></span><br><span class="line">    <span class="comment">//主要用于被其他子类调用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Abs</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Abs</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//抽象方法不提供具体实现，交给子类实现</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>模板模式：如果编写一个抽象父类，父类提供了多个子类的通用方法，并把一个或多个方法留给子类实现。这种设计模式就叫做模板模式。</li></ul><blockquote><p>抽象类就是从多个具体类中抽象出来的父类<br>避免了子类设计的随意性</p></blockquote><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>如果说抽象类是从多个类中抽象出来的模板，那么接口抽象的更彻底。<br>接口是从多个相似类中抽象出来的<strong>规范</strong>,<strong>接口不提供任何实现</strong>。<br>接口定义了一批类所需要遵守的规范，接口不关心这些类的内部状态数据，也不关心这些类里方法的实现细节，它只规定这批类里必须提供某些方法，提供这些方法的类就可以满足实际需要。</p><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] interface 接口名 extends 父接口1,父接口2...</span><br><span class="line">&#123;</span><br><span class="line">    各种方法和常量</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一些知识点：</p><ol><li>修饰符只能是public，要么没有。因为接口是多个类的“公共”规范。</li><li>接口不能有初始化块、构造器。</li><li>接口成员变量只能是静态常量（int a = 1; 则系统自动加public static final修饰）。</li><li>接口的成员变量只能在定义时指定默认值。</li><li>接口的方法只能是类方法、抽象方法（普通方法自动加abstract）、默认方法或私有方法。</li><li>接口中的普通方法（抽象方法）不能有实现；但类方法、默认方法、私有方法必须有方法实现。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Itf</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**********成员变量**********/</span></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">1024</span>;</span><br><span class="line">    <span class="comment">//系统自动加public static final修饰</span></span><br><span class="line">    <span class="comment">//必须在定义时指定默认值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**********抽象方法**********/</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//系统自动加abstract</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**********默认方法**********/</span></span><br><span class="line">    <span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">def_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"默认方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//使用default修饰，必须有实现</span></span><br><span class="line">    <span class="comment">//系统自动加public修饰符</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**********类方法**********/</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sta_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"类方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//系统自动加public修饰符</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**********私有方法**********/</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pri_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"私有方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以使用static修饰符修饰</span></span><br><span class="line">    <span class="comment">//作为工具方法使用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一个源文件内只能有一个public接口，主文件名必须与接口名相同。</p></blockquote><h2 id="使用接口"><a href="#使用接口" class="headerlink" title="使用接口"></a>使用接口</h2><p>使用格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] class 类名 extends 父类 implements 接口1,接口2...</span><br><span class="line">&#123;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口的主要用途：</p><ol><li>定义接口类型的变量，也可用于进行强制类型转换</li><li>调用接口中定义的常量</li><li>接口中的方法被其他类实现</li></ol><p>举个栗子，使用上述Itf接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">Itf</span></span>&#123;</span><br><span class="line">    <span class="comment">//实现接口的抽象方法，需要用public</span></span><br><span class="line">    <span class="comment">//否则会报错：正在尝试分配更低的访问权限; 以前为public</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">abs_fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"实现了接口中的抽象方法fun"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Itf obj = <span class="keyword">new</span> Test();</span><br><span class="line">        System.out.println(obj.num);<span class="comment">//调用接口中的常量</span></span><br><span class="line">        obj.abs_fun();<span class="comment">//使用接口的对象调用了实现类所实现的抽象方法</span></span><br><span class="line">        obj.def_fun();<span class="comment">//可以直接调用接口的默认方法</span></span><br><span class="line">        Itf.sta_fun();<span class="comment">//使用接口来调用接口的类方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">==========输出结果==========</span><br><span class="line"><span class="number">1024</span></span><br><span class="line">实现了接口中的抽象方法fun</span><br><span class="line">默认方法</span><br><span class="line">类方法</span><br></pre></td></tr></table></figure><blockquote><p>实现接口方法时，必须使用public修饰符，因为接口里的方法都是public的，而子类重写父类方法时访问权限只能是更大或者相等。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《中国近现代史纲要》知识点汇总</title>
      <link href="/2019/12/23/%E3%80%8A%E4%B8%AD%E5%9B%BD%E8%BF%91%E7%8E%B0%E4%BB%A3%E5%8F%B2%E7%BA%B2%E8%A6%81%E3%80%8B%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
      <url>/2019/12/23/%E3%80%8A%E4%B8%AD%E5%9B%BD%E8%BF%91%E7%8E%B0%E4%BB%A3%E5%8F%B2%E7%BA%B2%E8%A6%81%E3%80%8B%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>附：中国近现代史大事年表</p></blockquote><a id="more"></a><h1 id="第一章-反对外国侵略的斗争"><a href="#第一章-反对外国侵略的斗争" class="headerlink" title="第一章 反对外国侵略的斗争"></a>第一章 反对外国侵略的斗争</h1><h2 id="第一节-鸦片战争前的中国与世界"><a href="#第一节-鸦片战争前的中国与世界" class="headerlink" title="第一节 鸦片战争前的中国与世界"></a>第一节 鸦片战争前的中国与世界</h2><p>1、中国经历了二千多年的封建社会，其社会的主要矛盾是地主阶级与农民阶级的矛盾。<br>2、乾隆朝后期，清王朝由盛转衰。<br>3、中国封建社会前后延续了两千多年，中国的封建社会的特点包括<br>（1）经济上封建土地所有制占主导地位<br>（2）政治上实行高度中央集权的封建君主专制制度<br>（3）文化上以儒家思想为核心<br>（4）社会结构上是族权与政权相结合的封建宗法等级制度<br>4、简述中国封建社会由盛转达衰的主要表现。<br>答： （1）政治上， 中央集权进一步强化， 官僚职能扩大， 官僚机构膨胀， 官吏贪污腐败严重， 巧取豪夺，<br>无所不用其极；<br>（2）经济上， 史无前例的人口大增长、 各级官吏和地主大肆兼并土地， 造成人均土地占有量逐年下降，<br>无地或少地的农民日益增多，流民不断增多。地租剥削、赋税征收、苛捐杂税、徭役摊派逐年加重，广<br>大农民生活日渐困苦；<br>（3）思想文化上，厉行专制主度，大兴文字狱，读书人动辄以只言片语获罪，整个社会万马齐喑，一<br>片死寂。<br>（4）军事上，军力衰败，军备废弛，八旗军无所事事，不劳而获，绿营军纪茫然，不堪一击；<br>（5）对外关系上，实行闭关锁国政策，严格限制对外贸易，使中国处于与世隔绝的状态。</p><h2 id="第二节-资本——帝国主义对中国的侵略及近代中国的演变"><a href="#第二节-资本——帝国主义对中国的侵略及近代中国的演变" class="headerlink" title="第二节 资本——帝国主义对中国的侵略及近代中国的演变"></a>第二节 资本——帝国主义对中国的侵略及近代中国的演变</h2><p>1、1842 年，中英间签署《南京条约》 ，割让香港岛给英国。开放广州、厦门、福州、宁波、上海为通<br>商口岸。<br>2、1860 年，英法联军攻占北京，抢劫焚毁了有“万园之园”美誉的皇家园林——圆明园。<br>3、1894 年 11 月，日军制造的连续 4 天大屠杀，造成 30 万中国居民死亡的旅顺大屠杀惨案。<br>4、1900 年，俄国军队侵入中国东北，制造了江东六十四屯惨案。<br>5、1860 年， 《北京条约》开放的通商口岸是天津。<br>6、1860 年， 《北京条约》开放的陆路商埠是伊犁和喀什噶尔。<br>7、1858 年清政府与英、法、美、俄签订《天津条约》 ，允许外国公使常驻北京。<br>8、近代中国司法主权受到破坏，规定外国享有领事裁判权的条约是<br>（1）1843 年中英《五口通商章程》<br>（2）1844 年《望厦条约》<br>9、控列强对中国进行经济掠夺的手段有控制中国通商口岸；剥夺中国关税自主权；对华倾销商品；资<br>本输出。<br>10、外国列强是如何侵略中国的，有什么后果？<br>答： （ 1）军事侵略：资本——帝国主义列强对中国的侵略，首先和主要的是进行军事侵略，迫使中国政<br>府签订不平等条约。通过不平等条约，资本——帝国主义列强侵占了中国领土，勒索巨额赔款，在战争<br>中屠杀中国人民。还公开抢劫中国财富， 肆意破坏中国的文物和古迹， 对中华民族优秀文化造成空前浩<br>劫。<br>（2）政治控制：资本——帝国主义列强还通过军事侵略和不平等条约，控制中国内政和外交，把持中<br>国海关，镇压中国人民的反抗，扶植、收买代理人。<br>（3）经济掠夺：外国列强控制中国通商口岸、剥夺中国关税自主权、对华倾销商品和资本输出，并逐<br>渐操纵中国经济命脉。<br>（4）文化渗透：外国列强利用宗教进行渗透和侵略活动，鼓吹侵略有功论、 “种族优劣论” ，为侵华制<br>造舆论。<br>（5）资本——帝国主义在给中国带来某些新变化的同时，又为了控制和掠夺中国的目的而同中国的封<br>建统治者勾结起来， 共同阻碍中国人民的独立和解放。它们来到中国的主要目的， 并非要把落后的中国<br>变成先进的中国，而是要强迫中国永远成为西方列强的附庸国。<br>第三节 抵御外来侵略争取民族独立的斗争<br>1、中国近代史上中国人民第一次大规模的反侵略武装斗争是三元里人民抗英斗争。<br>2、1841 年战死虎门的广东水师提督是关天培。<br>3、1842 年，在镇江战场战死的满族副都统是海龄。<br>4、中法战争期间，老将冯子材率领清军和民众取得“镇直关大捷” 。<br>5、甲午战争中，战死于平壤的清军将领是左宝贵。<br>6、甲午战争中，英勇牺牲的致远舰管带是邓世昌。<br>7、1839 年，林则徐组织翻译了英国人的《地理大全》 ，编成了《四洲志》成为近代中国开眼看世界的<br>第一人。<br>8、魏源编纂的综述世界各国历史、地理及中国应采取的对外政策的书是《海国图志》 ，提出“师夷长技<br>以制夷”的思想。<br>9、1895 年，严复在《救亡决论》中喊出的响亮口号是救亡。<br>10、提出“物竞开择，适者生存”口号的书是严复翻译的《天演论》 。<br>11、1887 年，葡萄牙胁迫清政府签订的允许葡萄牙“永驻管理澳门”的条约是《中葡友好通商条约》 。<br>12、1895 年中日间签订的中国割让台湾及所有附属岛屿和澎湖列岛给日本的条约是《马关条约》 。<br>13、近代提出“门户开放”政策的国家是美国。<br>14、在威海战斗中殉国的北洋般队将领有刘步蟾、丁汝昌。<br>15、中日甲午战争后，迫使日本将辽东半岛“还给”中国的国家包括俄国、法国、德国。<br>16、19 世纪末，法国在中国划分的势力范围有云南、广东、广西。<br>17、近代中国人民是如何进行反侵略斗争的？<br>答（ 1）人民群众的反侵略斗争：<br>鸦片战争时期，三元里人民抗英运动是中国近代史上中国人民第一次大规模的反侵略武装斗争。<br>太平天国农民战争后期，太平军曾多次重创外国侵略者。<br>1884 年，中法战争时期，香港的中国造船工人和码头工人举行罢工，拒修法国般艇等行为。<br>台湾人民也曾多次反抗侵略者。<br>1900 年，义和团与部分清军与八国联军进行了殊死搏斗，取得廊坊大捷等胜利。<br>（2）爱国官兵的反侵略斗争：<br>鸦片战争期间， 广东水师提督关天培战死虎门，江南提督陈化成在吴淞西炮台以身殉国，副都统海龄在<br>镇江战死疆场。<br>第二次鸦片战争时期，提督史荣椿、乐善战死于天津大沽炮台。<br>中法战争期间，督办台湾事务大臣刘铭传击退敌军。法船炮轰浙江镇海炮台，也被击退。冯子材率领军<br>民取得镇南关大捷。<br>在中日甲午战争中，爱国将士浴血奋战。左宝贵战死平壤，致远舰管带邓世昌、经远般管带林永升在黄<br>海战斗中英勇牺牲，北洋般队统帅丁汝昌、定远般管带刘步蟾在威海战斗中为国捐躯。<br>（3）近代中国人民包括统治阶级的爱国人物在反对外来侵略的斗争中表现出来的爱国主义精神，铸就<br>了中华民族的民族魂。正是由于中国人民前仆后继、英勇斗争，才使我们的国家和民族历尽劫难、屡遭<br>侵略而永不灭亡。</p><h1 id="第二章-对国家出路的早期探索"><a href="#第二章-对国家出路的早期探索" class="headerlink" title="第二章 对国家出路的早期探索"></a>第二章 对国家出路的早期探索</h1><h2 id="第一节-农民群众斗争风暴的起落"><a href="#第一节-农民群众斗争风暴的起落" class="headerlink" title="第一节 农民群众斗争风暴的起落"></a>第一节 农民群众斗争风暴的起落</h2><p>1、太平天国运动是中国历史上农民战争的最高峰。<br>2、1851 年，洪秀全在广西金田村发动起义。<br>3、太平天国农民战争爆发的根本原因是封建专制政权和地主阶级对农民的政治压迫和经济剥削。<br>4、1853 年 3 月，太平军攻克南京定为首都，改名为天京。<br>5、1956 年上半年，太平天国在军事上达到全盛时期，但也有军事上的失利。失利是指北伐。<br>6、最能体现太平天国社会理想和这次农民战争特点的纲领性文件是《天朝田亩制度》 。<br>7、太平天国后期提出《资政新篇》的是干王洪仁轩。<br>8、太平天国由盛到衰的转折点是天京事变。<br>9、天京事变后，洪秀全为挽救危局提拔的年轻将领是陈玉成和李秀成。<br>10、1864 年太平天国被中外反动势力联合绞杀，太平天国农民运动失败。<br>11、洪秀全撰写的具有相素平等观念，后来成为太平天国农民战争思想基础的书有《原道救世歌》 、 《原<br>道醒世训》、 《原道觉世训》 。<br>12、1851 年 9 月，天平军攻占永安，在永安封王建制，杨秀清被封为东王，节制其他诸王，其他诸葛<br>亮王有西王萧朝贵、南王冯云山、北王韦昌辉、翼王石达开。<br>13、太平天国领导人希望通过《天朝田亩制度》的实施来达到“有田同耕，有饭同食” 、 “有衣同穿、有<br>钱同使”、 “无处不均匀，无人不饱暖”的理想社会。<br>14、 《天朝田亩制度》确立了土地分配的方案，内容有<br>（1）原则是“凡天下田，天下人同耕” （2）田地分为 9 等，好坏搭配<br>（3）按人口平均分配（ 4） 16 岁以上分一整份， 16 岁以下分一半<br>15、对《资政新篇》的评价正确包括<br>（1）带有鲜明的资本主义色彩的改革与建设方案<br>（2）未涉及农民问题和土地问题<br>（3）缺乏实施的阶级基础和社会条件<br>16、天京事变是太平天国统治集团之间的内讧，大大削弱了领导和军事力量，事变中东王杨秀清和北王<br>韦昌辉被杀、翼王石达开迫走。<br>17、 《天朝田亩制度》的内容及其评价。<br>答： （1）主要内容：确立了平均分配土地的方案，根据“凡天下田，天下人同耕”的原则，田地分为 9<br>等，好坏搭配，不论男女老幼按人口平均分配， 16 岁以上分一整份， 16 岁以下分一半。<br>规定了农副业产品的生产与分配，都以农村政权的基层组织“两”来实行管理，每 25 户为一两。分得<br>土地的农民都要参加农副业生产劳动每“两”生产的农副业新产品， “除足其二十五家每人所食可接新<br>谷外，余则归国库。凡麦、豆、苎麻、布帛、鸡、犬各物及银钱亦然” 。支出也由国库统一分配， “所有<br>婚娶弥月喜事，俱用国库，但有限式，不得多用一钱” ， “鳏寡孤独废疾免役，皆颁国库以养” 。<br>（2）评价：第一，《天朝田亩制度》是一个以解决土地问题为中心的比较完整的社会改革方案，代表了<br>农民要求平均分配土地的强烈愿望， 反映了农民反对封建土地所有制的普遍要求。 与以往农民起义提出<br>的“均贫富，等贵贱”和“迎闯王，不纳粮”等相比， 《天朝田亩制度》有更完备的内容和更触及封建<br>社会矛盾核心的深度，应该说这个纲领是比历代农民起义所提出的口号更深刻一些。<br>第二，这个纲领，并没有超出农民小生产者的狭隘眼界。它所追求的理想天国，是小农业与家庭手<br>工业相结合的自然经济， 是一种小自耕农心目中的没有商品流通、 商品交换和绝对平均的理想社会。 所<br>以，这种社会理想是不切实际的空想。它表明，即使是像太平天国这样的农民起义，尽管给腐败的封建<br>制度以严重的冲击，却难以建立起足以替代腐朽制度的新的社会制度。</p><h2 id="第二节-地主阶级统治集团“自救”活动的兴衰"><a href="#第二节-地主阶级统治集团“自救”活动的兴衰" class="headerlink" title="第二节 地主阶级统治集团“自救”活动的兴衰"></a>第二节 地主阶级统治集团“自救”活动的兴衰</h2><p>1、清朝统治集团中倡导洋务的首领是弈欣。<br>2、冯桂芬最早对兴办洋务事业做出比较完整表述。<br>3、1861 年，清政府设立总理各国事务衙门为综理洋务运动的中央机关。<br>4、洋务派开办军事工业的首要目的是镇压太平天国起义。<br>5、洋务派兴办的第一个规模较大的近代意义上的军事兵工厂是江南制造总局。<br>6、由李鸿章管辖属于清政府海军主力的是北洋水师。<br>7、洋务运动的指导思想被概括为“中学为体，西学为用” 。<br>8、北洋水师全军覆没标志着洋务运动的彻底失败。<br>9、举办洋务的重要基地有上海、天津。<br>10、洋务派举办民用企业的目的是解决办军事工业煤铁等原料的需求， 交通运输的需要；企图以民用企<br>业的利润弥补军用工业的亏空。<br>11、到 19 世纪 90 年代，清政府建成福建水师、南洋水师、北洋水师、广东水师四支新式海军。<br>12、洋务运动失败的原因是什么？<br>答： （1）洋务运动具有封建性。洋务运动的指导思想是“中学为体，西学为用” ，即在封建主义思想的<br>指导下，在维护封建的上层建筑、经济基础的条件下学习西文发展一些近代企业， 目的是要维持行将毁<br>灭的清朝封建统治。 然而新的生产力与封建主义的生产关系及其上层建筑是不能相容的， 洋务派只注重<br>西法练兵和办企业， 而不去改变落后的政治制度， 只是在封建制度的母体上，嫁接西方近代生产技术的<br>枝芽，其结果只能是“无可奈何花落去” 。<br>（2）洋务运动对西方列强具有依赖性。在中国近代半殖民地半封建进程日益发展的情况下，洋务派官<br>员越是积极引进西方的“般坚炮利” ，也就越加深了对西方列强的依赖性。西方列强表面上积极扶植洋<br>务派，实际上是要以此为手段，巩固并扩大其在华物权，达到控制和操纵清廷的目的。面对于西方列强<br>的政治、 经济压力， 洋务派多是在 “以夷制夷” 的幌子下妥协退让。 洋务派仰仗西方列强来达到 “求强”、<br>“求富”的目的，无异与虎谋皮。<br>（3）洋务企业的管理具有腐朽性。洋务派所办的新式企业在管理方面仍采取封建衙门式的管理方法，<br>使洋务企业缺乏应有的生机和活力。 洋务派兴办的军事工业完全由官方控制，经营不讲效益， 造出的武<br>器不少质量低劣。官督商团体操民用企业的管理，也是清政府“专派大员，用人理财悉听调度” ，商人<br>没有发言权。企业内部官僚化、贪污中饱、挥霍浪费等现象十分严重。<br>（4）清朝统治集团中的顽固势力又多方阻挠， “一闻修建铁路、电报，痛心疾首，群起阻难” 。</p><h2 id="第三节-维新运动的进行和夭折"><a href="#第三节-维新运动的进行和夭折" class="headerlink" title="第三节 维新运动的进行和夭折"></a>第三节 维新运动的进行和夭折</h2><p>1、举国注目的倡导维新运动的旗手是康有为。<br>2、1895 年康有为联合在京参加会试的举人共同向皇帝上书，史称“公车上书” 。<br>3、严复翻译英国赫胥黎的《进化与伦理》的前两篇，命名为《天演论》 。<br>4、资产阶级思想与封建主义思想在中国的第一次下面交锋是维新派与守旧派的论战。<br>5、戊戌政变后，新政大部被废除，保留下来的是京师大学堂和各地新式学堂。<br>6、从 1898 年 6 月 11 日到 9 月 21 日，光绪帝颁布了一系列变法上谕，史称百日维新。<br>7、维新派维新变法的活动有向皇帝上书、著书立说、介绍外国的变法、办学会、办报纸、设学堂。<br>8、维新派办的影响较大的学会有强学会、南学会、保国会。<br>9、维新派办的影响较大的报纸有上海《时务报》 、天津《国闻报》 、湖南《湘报》 。<br>10、维新派和守旧派之间的论战围绕的问题有<br>（1）要不要变法（ 2）要不要兴民权、设议院，实现君主立宪<br>（3）要不要废除八股、改科举和兴学堂<br>11、1898 年被杀于莱市口的“戊戌六君子”有谭嗣同、刘光第、林旭、杨锐、杨深秀、康广仁。<br>12、 “百日维新”<br>（1）有利于中国资本主义的发展和资产阶级先进文化的传播<br>（2）给开明绅士和民族资产阶级提供了参与政治的机会<br>（3）一定程度上打击了封建官僚制度<br>（4）没有提到“君主立宪” ，改革很不彻底<br>13、论述戊戌维新运动的历史意义和影响。<br>答： （1）戊戌维新运动是一次爱国救亡运动。维新派在国难当头、瓜分危机迫在眉睫的关头挺身而出，<br>掀起了变法图存、维护民族独立和发展资本主义的救世主国运动，反映了时代的要求。<br>（2）戊戌维新运动是一场资产阶级性质的政治改革运动。维新派冲破了洋务派“中体西用”思想的局<br>限，鼓吹民权，提倡设议院，主张用君主立宪制来取代君主专制制度。尽管维新运动未能成功，但在一<br>定程度上冲击了封建制度。<br>（3）戊戌维新运动是一场思想启蒙运动。维新派大力传播西方的社会政治学说，宣传天赋人权、自由<br>平等、社会进化等观念，批判封建君权和封建纲常伦理，有利于民主主义思想在中国的传播。在维新派<br>的推动下，形成广泛的文化革新运动，并对近代教育发展起了积极作用。<br>（4）戊戌维新运动在改革社会风气方面也有不可低估的意义。维新派主张革除吸食鸦片及妇女缠足等<br>陋习，主张“剪辫易服” ，倡导讲文明、重卫生、反跪拜等。</p><h1 id="第三章-辛亥革命"><a href="#第三章-辛亥革命" class="headerlink" title="第三章 辛亥革命"></a>第三章 辛亥革命</h1><h2 id="第一节-举起近代民族民主革命的旗帜"><a href="#第一节-举起近代民族民主革命的旗帜" class="headerlink" title="第一节 举起近代民族民主革命的旗帜"></a>第一节 举起近代民族民主革命的旗帜</h2><p>1、1905 年成立的中国同盟会是中国历史上第一个资产阶级性质的政党。它的成立，标志着中国资<br>产阶级民主革命进入了一个新阶段。<br>2、 《辛丑条约》的签订标志着以慈禧太后为首的清政府甘心成为“洋人的朝廷” 。<br>3、民族资产阶级是资产阶级革命派的阶级基础。<br>4、1906 年清政府宣布“预备仿行宪政” ，1908 年颁布的一部宪法是《钦定宪法大纲》 。<br>5、1894 年孙中山成立兴中会，它是中国历史上第一个资产阶级革命组织。<br>6、1895 年春，兴中会设总部于香港。<br>7、1904 年，孙中山发表《中国问题的真解决》 ，指出只有推翻清政府，建立“中华民国” ，才能真正解<br>决中国问题。<br>8、同盟人的机关报是《民报》 。<br>9、1905 年，中国同盟会成立于东京。<br>10、中国历史上第一个比较完备的民主主义革命纲领是三民主义学说。<br>11、资产阶级革命派的骨干力量是资产阶级和小资产阶级知识分子。<br>12、中国同盟人的政治纲领是驱除鞑虏，恢复中华，创立民国，平均地权。<br>13、三民主义的内容及其历史意义。<br>答： （ 1）1905 年 11 月，孙中山在 《民报》 发刊词中， 将同盟会纲领概括为民族、 民权、 民生三大主义，后被称为三民主义。<br>民族主义包括“驱除鞑虏，恢复中华”两项内容。一是以革命手段推翻清王朝，改变它一贯推行的民族<br>歧视和压迫政策；二是变“次殖民地”的中国为独立的中国。针对同盟会内部存在的民族复仇主义，孙<br>中山指出民族主义“不是排斥所有的满洲人，而是针对那些阻碍某个的满洲人” ，将民族主义和民族复<br>仇主义区分开来。<br>民权主义的内容是“创立民国” ，即推翻封建君主专制制度，建立资产阶级的民主共和国。孙中山一再<br>阐明民族主义必须和民权主义结合起来， 民族革命和政治革命必须一次完成。他说，革命者打倒满清政<br>府，从驱除满人这一方面来说，是民族革命，从打倒君主专制制度这一方面来说，是政治革命。他还为<br>新生的共和国进行了蓝图设计。<br>民生主我的内容为“平均地权” 。基本方案是：核定地价，按价征税，涨价归分，孙中册指出，在资产<br>阶级革命胜利后，所有的土地所有者无要向国家申报自己的土地数目，由国家核定地价，按地价征税，<br>土地价格上涨之后，收入增加部分应当归国家所有。<br>（2）历史意义：孙中册的三民主义学说，提出了一套在中国历史上不曾有过的资产阶级共和国的建国<br>方案，是一个比较完备的民主主义的革命纲领。它的提出，在社会上产生了积极影响，推动了革命思想<br>的传播和革命运动的发展。</p><h2 id="第二节-辛亥革命的胜利与失败"><a href="#第二节-辛亥革命的胜利与失败" class="headerlink" title="第二节 辛亥革命的胜利与失败"></a>第二节 辛亥革命的胜利与失败</h2><p>1、辛亥革命开始的标志是武昌起义。<br>2、武昌起义后成立湖北军政府推举的都督是黎元洪。<br>3、保路风潮中，运动最强烈的省份是四川。<br>4、在中国延续了两千多年的封建帝制覆灭的标志是 1912 年 2 月 12 日的清帝退位。<br>5、中国历史上第一部具有资产阶级共和国宪法性质的法典是《中华民国临时约法》 。<br>6、1912 年 1 月 1 日中华民国临时政府成立，定都南京。<br>7、北洋军阀政府代表的是大地主和买办资产阶级利益。<br>8、1913 年 3 月，被袁世凯刺杀的是宋教仁。<br>9、袁世凯为得到日本对他复辟帝制的支持，接受日本提出的严重损害中国权益的“二十一条” 。<br>10、标志着旧民主主义革命终结的是第二次护法运动的失败。<br>11、袁世凯复辟帝制，举行登基大典是在 1916 年 1 月 1 目。<br>12、 “二次革命”又被称之为赣宁之役。<br>13、1915 年 12 月 25 日，反对袁世凯称帝，宣布云南独立的是蔡锷。<br>14、中华民国南京临时政府也有局限性，体现在<br>（1）企图用承认列强与清政府签订的不平等条约和外债来换去帝国主义的承认<br>（2）没有提出可以满足农民土地要求的政策和措施<br>（3）以保护私有财产为借口，维护封建土地制度以及官僚、地主所占有的土地和财产<br>15、孙中山为了防止袁世凯专制而提出的条件有奠都南京、新总统到南京就职、遵守临时约法。<br>16、袁世凯就任临时大总统后破坏资产阶级民主制度的活动有<br>（1）强迫国会选举他为正式大总统<br>（2）解散国会，遣散议员<br>（3）炮制《中华民国约法》 ，用总统制取代内阁制<br>（4）修改《总统选举法》以达到无限期连任，并推荐继承人<br>17、 “二次革命”起因是反对袁世凯刺杀宋教仁、反对“善后大借款” 。<br>18、第一次护法运动中，孙中山依靠的军阀主要有陆荣廷、唐继尧。<br>19、资产阶级革命派传播革命思想的著作有《革命军》 、 《驳康有为论革命书》 、 《警世钟》、 《猛回头》。<br>20、1905 年，孙中山在《民报》发刊词中，将同盟会纲领概括为民族主义、民权主义、民生主义三大<br>主义简称“三民主义” 。<br>21、革命派与维新派展开论战的主要舆论阵地是《民报》 、 《新民丛报》。<br>22、 孙中山革命党人为维护资产阶级民主革命成果进行的活动有护国运动、 第一次护法运动、 二次革命、<br>第二次护法运动。<br>23、资产阶级革命派为捍卫民主革命成果而反对北洋军阀又进行了怎样的斗争？<br>答： （1）为反对袁世凯刺杀宋孝仁和“善后大借款” ，发动“二次革命” 。<br>（2）组织中华革命党。二次革命失败后，孙中山逃亡日本。 1914 年 7 月，孙中山在东京正式成立中华<br>革命党。坚持反对袁世凯专制统治的正确方向。<br>（3）为反对袁世凯称帝， 1915 年 12 月 25 日，蔡锷宣布云南独立，护国运动爆发。<br>（4）发动第一次护法运动。袁世凯死后，北洋军阀分裂。皖系段祺瑞掌握了中央政权之后，公然破坏<br>《临时约法》，拒绝恢复国会。 1917 年 7 月中旬，孙中山率领部分国会议员南下广州，发动了第一次护<br>法运动。<br>（5）1919 年 10 月，孙中山重将中华革命党改组为中国国民党。 1920 年 11 月，孙中山重返广东，恢复<br>军政府，领导第二次护法战争。</p><h1 id="第四章-开天辟地的大事变"><a href="#第四章-开天辟地的大事变" class="headerlink" title="第四章 开天辟地的大事变"></a>第四章 开天辟地的大事变</h1><h2 id="第一节-新文化运动与五四运动"><a href="#第一节-新文化运动与五四运动" class="headerlink" title="第一节 新文化运动与五四运动"></a>第一节 新文化运动与五四运动</h2><p>1、标志着中国新民主主义革命开端的是五四运动。<br>2、新文化运动主要内容是民主与科学。<br>3、新文化运动兴起的标志是陈独秀在上海创办《青年》杂志。<br>4、鲁迅发表的《狂人日记》是新文学运动中第一篇白话文小说。<br>5、李大钊是最先在中国大地率先举起马克思主义旗帜。<br>6、李大钊发表的《我的马克思主义观》比较全面系统介绍了马克思的学说。<br>7、新文化运动的背景是<br>（1）北洋军阀用封建专制思想禁锢民众的头脑<br>（2）尊孔读经的复古逆流甚嚣尘上<br>（3）一部分民主主义知识分子开始从思想文化方面反思辛亥革命<br>8、李大钊讴歌十月革命的著作有《法俄革命之比较观》 、 《庶民的胜利》 、 《Bolshevism 的胜利》。<br>9、五四运动发生的时代条件和历史条件是<br>（1）发生在俄国十月革命所开辟的世界无产阶级社会主义革命的新时代<br>（2）新的社会力量的成长，民族资产阶级和工人阶级力量的进一步壮大<br>（3）新文化掀起的思想解放潮流<br>10、北洋政府迫于五四运动的压力罢免的亲日派官僚是曹汝霖、章宗祥、陆宗舆。<br>11、1919 年 6 月 5 日以后，五四运动发展为全国规模的具有广泛群众性的爱国政治运动，包括知识分<br>子、工人阶级、城市小资产阶级、民族资产阶级。<br>12、五四运动的历史特点和历史意义<br>答：五四运动是在新的时代和新的社会历史条件下发生的， 具有以辛亥革命为代表的旧民主主义革命所<br>不具备的历史意义。<br>（1）五四运动是中国近代史上一次彻底的反帝反封建的革命运动，表现了反学反封建的彻底性。把中<br>国人民反帝反封建的斗争提升到一个新的水平线上。<br>（2）五四运动广泛地动员和组织了群众，是一场真正的群众性的革命运动。青年学生起了先锋作用，<br>是中国工人阶级开始登上政治舞台，在运动后期发挥了主力军作用。<br>（3）五四运动促进了马克思主义在中国的广泛传播，促进了马克思主义同中国工人运动的结合，为中<br>国共产党的成立作了思想和干部上的准备。 一方面， 中国先进的知识分子在运动中充分领略了工人阶级<br>的伟大力量， 从而促使他们在行动上探萦马克思主义与工人阶级相结合的方式， 促进工人阶级进一步认<br>识自己的历史使命。 别一方面， 具有初步共产主义思想的知识分子在实际斗争中经受了锻炼， 并自觉进<br>行了自身的改造，逐步转变成为马克思主义者。<br>（4）五四运动是中国新民主主义革命的伟大开端。五四运动发生在俄国十月革命之后，中国革命逐渐<br>成为世界无产阶级社会主义革命的一部分。 五四运动发后， 无产阶级逐渐代替资产阶级成为近代中国民<br>族民主革命的领导者。</p><h2 id="第二节-马克思主义传播与中国共产党诞生"><a href="#第二节-马克思主义传播与中国共产党诞生" class="headerlink" title="第二节 马克思主义传播与中国共产党诞生"></a>第二节 马克思主义传播与中国共产党诞生</h2><p>1、中国共产党成立的标志是中共一大的召开。<br>2、上海共产主义小组是中国第一个地方共产党组织。<br>3、成为中国共产党后备力量的组织是社会主义青年团。<br>4、上海机器工会共产党早期组织领导的第一个产业工会。<br>5、1921 年 7 月 23 日，中国共产党第一次全国代表大会在上海召开。<br>6、党成立以后的中心任务是开展工人运动，以共产主义精神教育工人。<br>7、1922 年 7 月，中国共产党第二次全国代表大会制定了彻底的反帝反封建的民主革命纲领。<br>8、中共二大选举了新的中央领导机构，陈独秀当选中央执行委员会委员长。<br>9、中国工人阶级第一次直接同帝国主义势力进行的有组织较量是香港海员罢工。<br>10、1921 年 8 月，党在上海成立中国劳动组合书记部，作为领导工人运动的专门机关。<br>11、中国二大提出了资产阶级小资产阶级政党从没有采取过的革命方法是群众路线方法。<br>12、沈定一在浙江省萧山县衙前村举办了中国第一个农民协会。<br>13、中共一大选举产生中央局作为党的领导机构，其成员包括陈独秀、张国焘、李达。<br>14、中共二大指出革命的动力是工人、农民、小资产阶级、民族资产阶级。<br>15、在 1923 年“二七惨案”中共产党员林祥谦、施洋被害。<br>16、中国共产党二大的制定的民主革命纲领及其意义？<br>答： （1）党的最低纲领，即党在当前阶段也就是民主革命阶段的纲领是：消除内乱，打倒军阀，建设国<br>内和平；推翻国际帝国主义的压迫，达到中华民族完全独立；统一中国为真正的民主共和国。这是在中<br>国殖民地半封建社会条件下走向社会主义、共产主义的不可超越的一个阶段。<br>（2）中共二大在中国近现代历史上第一次明确提出了反帝反封建的民主革命纲领。历史证明，只有用<br>马克思主义武装起来的中国共产党才能为中国革命指明方向。 “打倒列强、除军阀”逐渐成为广大群众<br>的共同呼声。</p><h2 id="第三节-国共合作与国民革命"><a href="#第三节-国共合作与国民革命" class="headerlink" title="第三节 国共合作与国民革命"></a>第三节 国共合作与国民革命</h2><p>1、1923 年 6 月，中国共产党第三次全国代表大会集中讨论的问题是国共合作，建立革命统一战线的问<br>题。<br>2、以第一次国共合作为基础的革命统一战线正式形成的标志是国民党一大的成功召开。<br>3、成为国共合作的政治基础和革命统一战线的共同纲领是新三民主义。<br>4、黄埔军校同一切旧式军校根本区别在把政治教育提到和军事训练同等重要的地位。<br>5、1925 年 1 月召开的中国共产党第四次全国代表大会的中心议题是如何领导即将到来的革命高潮。<br>6、五卅运动掀起了全国范围的大革命风暴。<br>7、中国工人运动史上前所未有的壮举，对大革命的高潮形成起了重要推动作用的是省港大罢工。<br>8、1927 年 4 月 28 日被奉系军阀张作霖杀害的共产党创始人是李大钊。<br>9、第一次国共合作全面破裂，大革命最疑义失败的标志是“七一五”分共。<br>10、改组后的国民党成为革命聪明的政党，包括的阶级有工人阶级、农民阶级、小资产阶级、民族资产<br>阶级。<br>11、1925 年，中共四大在上海召开，主要内容有<br>（1）提出了无产阶级在民主革命中的领导权<br>（2）提出了工农业联盟的问题<br>（3）制定了开展工农运动的计划<br>（4）决定在全国建立和加强党的组织以适应革命形势的发展<br>12、北伐战争直接打击目标是吴佩孚、孙传芳、张作霖。<br>13、在北伐战争期间，中国人民反帝斗争邓得了重大胜利，收回的租借地是九江、汉口。<br>14、1926 年 3 月、 5 月蒋介石打击共产党员和工农革命群众力量的事件是中山舰事伯、整理党务案。<br>15、到 1927 年春，北伐胜利进军，革命势力从珠江流域推进到长江流域、黄河流域。<br>16、早期共党组织成员与反马克思主义者进行的论战主要有<br>（1）同胡适围绕“问题与主义的论战<br>（2）同张东荪、梁启超关于社会主义的论战<br>（3）同无政府主义者的论战<br>17、国民大革命失败的原因及经验教训是什么？<br>答： （1）国民革命失败的原因是复杂的，多方面的。<br>客观上， 一是帝国主义和中国封建主义势力的联合力量大大超过刚刚兴起的革命联合力量， 敌我力量悬<br>殊；二是革命统一战线内部出现剧烈化，蒋介石、汪精卫先后分裂统一战线，制造反共政变，使革命力<br>量遭到严重损失。<br>主观上， 以陈独秀为着的中共中央领导机关的大革命后期犯了右倾机会主义错误， 放弃了无产阶级对于<br>农民群众、 城市小资产阶级和民族资产阶级的领导权，尤其是武装斗争的领导权。 当时的中国共产党处<br>于幼年时期， 缺乏对中国社会和中国革命基本问题的深刻认识， 缺乏革命经验尤其是处理同资产阶级复<br>杂关系的经验， 还不善于把马克思主义基本原理和中国革命的实践结合起来。 当时的中国共产党作为共<br>产国际的一个支部，直接受共产国际的指导。对酿成陈独秀右倾机会主义错误有直接影响。<br>（2）国民大革命的失败得出的教训是：<br>第一， 共产党要领导人民取得革命的胜利，就必须坚持无产阶级对革命的领导权， 反对右倾投降主义错<br>误。<br>第二，共产党要领导人民取得革命的胜利，还必须建立革命的武装，坚持武装斗争，妥协退让只会断送<br>革命。</p><h1 id="第五章-中国革命的新道路"><a href="#第五章-中国革命的新道路" class="headerlink" title="第五章 中国革命的新道路"></a>第五章 中国革命的新道路</h1><h2 id="第一节-国民党在僵的统治和中间党派的政治主张"><a href="#第一节-国民党在僵的统治和中间党派的政治主张" class="headerlink" title="第一节 国民党在僵的统治和中间党派的政治主张"></a>第一节 国民党在僵的统治和中间党派的政治主张</h2><p>1、1928 年 12 月 29 日张学良宣布东北易帜，标志着国民党在形式上统一中国，在全国范围内建立了自<br>己统治。<br>2、官僚资本的垄断活动首先和主要的方面是在控制金融业。<br>3、国民党四大银行完成其金融垄断有决定意义的步骤是发行法币。<br>4、20 世纪二三十年代活跃着的中间党派的社会基础主要是民族资产阶级、上层小次产阶级及其知识分<br>子。<br>5、国民党是如何实行一党专政的军事独裁统治的？<br>答： （1）为了镇压人民和消灭异已力量，国民党建立了庞大的军队，还大力加强地方反动武装保安队。<br>广大人民被置于国民党武装的严密控制和监视之下。<br>（2）为了镇压人民和消灭异已力量，国民党还建立了庞大的全国性特务系统——“中统”和“军统” ，<br>主要任务就是对共产党，破坏革命运动，绑架或暗杀革命者和异已分子。<br>（3）为了控制人民，禁止革命活动，国民党还大力推行保甲制度，广大人民被禁锢在保甲制度之内。<br>（4）为了控制舆论，剥人民的言论和出版自由，国民党还厉行文化专制主义。国民党政府主要就是通<br>过这此方法，来维护帝国主义、封建主义、官僚资本主义的利益，巩固自身统治的。</p><h2 id="第二节-中国共产党对革命新道路的艰苦探索"><a href="#第二节-中国共产党对革命新道路的艰苦探索" class="headerlink" title="第二节 中国共产党对革命新道路的艰苦探索"></a>第二节 中国共产党对革命新道路的艰苦探索</h2><p>1、1927 年，中国共产党在汉口秘密召开党的临时会议，史称八七会议，它是大革命失败的土地革命战<br>争兴起的历史转折点。<br>2、成为建设共产党领导的新型人民军队的重要开端是三湾改编。<br>3、毛泽东提出“中国革命斗争的胜利要靠中国同志了解中国情况”的文章是《反对本本主义》 。<br>4、毛泽东提出以农村为中心，初步形成农村包围城市、武装夺取政权的理论的文章是《星星之火，可<br>以燎原》。<br>5、中国共产党历史上第一个土地法是井冈山土地法。<br>6、兴国土地法对井冈山土地法进行的一个原则性改动从而保护了中农利益的是改“没收一切土地”为<br>“没收一切公共土地及地主阶级的土地” 。<br>7、 “八七会议”彻底清算了陈独秀的右倾机会主义错误，确定了土地革命和武装斗争的方针，选出了以<br>瞿秋白为首的中央临时政治局，为挽救中国革命和中国共产党作出了巨大贡献。<br>8、南昌起义的历史意义是打响了武装反抗国民党反动统治的第一枪，成为中国共产党独立领导革命战<br>争、创建人民军队和武装夺取政权的伟大开端，揭开了土地革命的序幕。<br>9、同南昌起义相比，湘赣边界秋收起义的特点在于放弃了“左派“国民党运动的旗号，公开打出了”<br>工农革命军的旗帜，不仅是军队的行动，而且有数量众多的工农武装参加。<br>10、 “三湾改编”的主要内容有<br>（1）将原有的一个师缩为一个团（ 2）在部队中建立共产党各级组织<br>（3）将党的支部建在连上（ 4）成立各级士兵委员会，部队内部实现民主管理<br>11、井冈山革命根据地的创建有深远的意义，表现在<br>（1）点燃了“工农武装割据”的星星之火（ 2）为共产党领导的其他各地的起义武装树立了榜样<br>（3）开辟了在敌我力量悬殊的情况下共产党深入农村保持和发展力量的正确道路。<br>12、科学地回答了红色政权存在和发展的原因和条件的文章是《中国的红色政权为什么能够存在？》 、<br>《井冈山的斗争》 。<br>13、对于红军、游击队和红色区域的建立和发展，毛泽东在《星星之火，可以燎原》中指出<br>（1）这是半殖民地中国在无产阶级领导下的农民斗争的最高形式<br>（2）这是半殖民地农民斗争发展的必然结果（ 3）是促进全国革命高潮的最重要因素<br>14、从 1930 年 10 月到 1931 年 7 月，红军边疆粉碎敌人三次“围剿”的原因是<br>（1）土地革命在根据地的开展 （ 2）贯彻了积极防御的方针<br>（3）实行“诱敌深入” 、 “避敌主力” 、 “打其虚弱”等一整套战术<br>15、新民主主义革命时期开展土地革命的实质就是<br>（1）消灭封建地主的土地所有制（ 2）实现农民的土地所有制<br>16、党在第二次国内革命阶段，领导土地革命的阶级路线是<br>（1）坚定地依靠贫农、雇农（ 2）联合中农、限制定农（ 3）保护中小工商业者<br>（4）消灭地主阶级<br>17、党在土地革命时期的土地分配方法是以乡为单位、按人口平分土地、抽多补少、抽肥补瘦。<br>18、中国的红色政权存在和发展的原因和条件有哪些？<br>答： （1）中国是一个几个帝国主义国家间接统治的政治经济发展极端不平衡的半殖民地半封建的大国。<br>这是红色政权能够存在和发展的根本原因。<br>（2）国民革命的影响。这是红色政权存在和发展的一个客观条件。<br>（3）全国革命形势的继续向前民展。这是红色政权存在和发展的又一个主观条件。<br>（4）相当力量的正式红军的存在。这是红色政权存在和发展的一个主观条件。<br>（5） 共主党组织的坚强有力和各项政策的正确贯彻执行。 这是红色政权存在和发展的又一个主观条件。</p><h2 id="第三节-中国革命在探索中曲折前进"><a href="#第三节-中国革命在探索中曲折前进" class="headerlink" title="第三节 中国革命在探索中曲折前进"></a>第三节 中国革命在探索中曲折前进</h2><p>1、1931 年，中华苏维埃第一次全国代表大会在江西省瑞金召开。<br>2、中华苏维埃第一次全国代表大会选举毛泽东为中央执行委员会主席。<br>3、中化苏维埃政府实行的政治制度是各级工农兵代表大会制度。<br>4、1931 年 11 月赣南会议召开，错误地把毛泽东排除在中央根据地红军领导地位之外。<br>5、临时中央政治局迁到中央根据地后，全面推行“左”倾家荡产冒险主义错误，在福建开展的运动是<br>反对“罗明路线”的斗争。<br>6、第五次反“围剿”失败的最主要原因是“左”倾错误的进一步发展。<br>7、1934 年 10 月中央红军和中共中央机关开始长征。<br>8、率领北上抗日先遣部队的是方志敏。<br>9、长征初期，博古等犯的错误是逃跑主义。<br>10、遵义会议后张闻天代替博古对党负总责。<br>11、195 年 6 月，中央红军和红四方面军于四川懋功胜利会师。<br>12、中央红军和红四方面军会师后，张国焘提出南下四川、西康。<br>13、红军胜利结束长征实现了战略大转移的标志是红军三大主力会合。<br>14、中国共产党在政治上达到成熟的时期是第二次国内革命战争时期。<br>15、遵义会议后组成的负责红军军事行动的三人团包括毛泽东、周恩来、王稼祥。<br>16、1936 年 10 月，红二、四方面军先后同红一方面军胜利会师于甘肃会宁、静宁将台堡。<br>17、合编组成红二方面军的是红二军团、红六军团。<br>18、领导红二方面军的将领是贺龙、任弼时。<br>19、红四方面军中反对张国焘另立中央的有朱德、刘伯承、徐向前、贺龙。<br>20、论述遵义会议的主要内容和历史意义。<br>答 1935 年 1 月 15 日至： 17 日，中共中央政治局在遵义召开扩大会议。会议集中全力解决了当时具有<br>决定意义的军事和组织问题。<br>（1）经过激烈的争论，多数人同意毛泽东为代表的正确意见，批评了博古、李德在第五次反“围剿”<br>中的错误。<br>（2）会议增选毛泽东为中央政治局常委，并委托张闻天起草《中央关于反对敌人五次“围剿”的总结<br>的决议》（即遵义会议决议）<br>（3）会后不久，中共中央政治局常委分工，根据毛泽东的提议，决定由张闻天代替博古负总的责任；<br>博古任红军总政治部代理主任；并成立了由毛泽东、周恩来、王稼祥组成的新的三人团，全权负责红军<br>的军事行动。<br>遵义会议的一系列重大决策，是在中国共产党同共产国际中断联系的情况下，独立自主地作出的。<br>遵义会议召开的历史意义主要体现在：<br>（1）尊义会议在极其危急的情况下挽救了中国共产党、挽救了中国工农红军、挽救了中国革命，开始<br>确立了以毛泽东为代表的新的中央的领导， 成为中国共产党历史上一个生死攸关的转折点， 标志着中国<br>共产党在政治上走向成熟。<br>（2）遵义会议的召开证明，作为一个严肃的、对人民负责任的马克思主义政党，中国共产党从来都是<br>正视自己的错误， 并注意从自己所犯的错误中学习并汲取教训的。 在中国共产党领导中国革命全过程的<br>某一个时期内， 党以及党的领导人难免会犯这样那样的错误甚至严重的错误。但是，中国共产党是具有<br>自我净化和自我发展的能力的， 党正是通过总结成功的经验和失误的教训， 不断地把党及党所领导的革<br>命事业不断推向前进的。</p><h1 id="第六章-中华民族的抗日战争"><a href="#第六章-中华民族的抗日战争" class="headerlink" title="第六章 中华民族的抗日战争"></a>第六章 中华民族的抗日战争</h1><h2 id="第一节-日本发动灭亡中国的侵略战争"><a href="#第一节-日本发动灭亡中国的侵略战争" class="headerlink" title="第一节 日本发动灭亡中国的侵略战争"></a>第一节 日本发动灭亡中国的侵略战争</h2><p>1、中国人民抗日战争是近代以来中国第一次取得反侵略完全胜利的战争。<br>2、明治维新后，日本开始推行大陆政策。<br>3、1927 年日本召开“东方会议” ，制定了《对华政策纲领》 。<br>4、日本开始实施变中国为其独占殖民地的事件是“九一八”事变。<br>5、日本借口中国军队炸毁柳条湖铁路一段，挑起“九一八”事变。<br>6、日本制造“华北事变” ，策动华北五省二市“防共自治“。<br>7、1927 年“东方会议”<br>（1）由田中义一在东京主持<br>（2）制定了《对华政策纲领》<br>（3）提出满蒙与日本利益相关<br>（4）日本可以采取断然措施维护在满蒙利益<br>8、1938 年 10 月后日本侵华政策的调整是<br>（1）实施“以华制华”和“以战养战”的策略<br>（2）对国民党采取政治诱降为主、军事打击为辅的方针<br>（3）在占领共扶植傀儡政权，建立发展汉奸组织<br>（4）逐渐加强对共产党领导的敌后根据地的“扫荡”<br>9、1933 年 11 月，蔡廷锴、蒋光鼐在福州举行抗日反蒋事变，史称“福建事变。<br>10、 《为抗日救国告全国同胞书》<br>（1）中国共产党面临新形势提出的新政策<br>（2）中共驻共产国际代表团以中华苏维埃共和国临时中央政府和中共中央名义发表<br>（3）呼吁停止内战，集中国力为抗日救国的神圣事业而奋斗。</p><h2 id="第二节-从局部抗战到全国性抗战"><a href="#第二节-从局部抗战到全国性抗战" class="headerlink" title="第二节 从局部抗战到全国性抗战"></a>第二节 从局部抗战到全国性抗战</h2><p>1、1934 年 4 月，由共产党提出、宋庆龄等签名发表《中国人民对日作战的基本纲领》 ，号召中国人民<br>自己起来武装驱逐日本侵略者。<br>2、 “一二九运动”标志着中国人民抗日救亡运动新高潮的到来。<br>3、根据国共两党协议，红军主力改编为国民革命军第八路军，朱德、彭德怀任八路军正副总指挥，总<br>参谋长叶剑英，副总参谋长左权。<br>4、中国共产党领导的南方八省游击队改编后，叶挺、项英分别担任新四军正副军长。<br>5、 以国共两党第二次合作为基础的抗日民族统一战线正式建立的标志之一是国民党中央通讯社发表 《中<br>共中央为公布国共合作宣言》 。<br>6、瓦窑堡会议<br>（1）提出了在抗条件下与民族资产阶级重建统一战线的新政策<br>（2）批评了“左”倾冒险主义和关门主义错误倾向<br>（3）为迎接全国抗日新高潮的到来做了理论和政治上的准备<br>7、在北平南苑战斗号，国民党二十九军将领佟麟阁、赵登禹阵亡</p><h2 id="第三节-国民党下面战场以及大后方的抗日民主运动"><a href="#第三节-国民党下面战场以及大后方的抗日民主运动" class="headerlink" title="第三节 国民党下面战场以及大后方的抗日民主运动"></a>第三节 国民党下面战场以及大后方的抗日民主运动</h2><p>1、枣宜会战中，国民党第 33 集团军总司令张自忠将军壮烈殉国。<br>2、人缅作战中，国民党第五军 200 师师长戴安澜将军为国牺牲。<br>3、1942 年初成立的中国距区最高统帅是蒋介石。<br>4、抗战后期，国民党军队大溃败的战役是豫湘桂战役。<br>5、抗战以来，国民党取得第一次重大胜利的战役是台儿庄战役。<br>6、在抗战争进入相持阶段后，国民党的抗战态度趋向消极体现在<br>（1）实行保守的收缩战略以便保存实力<br>（2）打击限制共产党及其领导下的抗日军队<br>（3）国民党五届中全会决定成立“防共委员会”<br>（4）国民党五届五中全会制定了“防共、限共、溶共、反共”的方针<br>7、中国战区成立的背景是<br>（1）日军偷袭珍珠港，太平洋战争爆发<br>（2）美英等国对日宣战<br>（3）国民政府正式对日宣战<br>8、关于中国远征军的表述正确的有<br>（1）1942 年由国民政府组成入缅甸作战的军队<br>（2）在东吁保卫战中歼灭日军 5000 多人<br>（3）第 200 师师长戴安澜在缅北殉国<br>（4）1942 年 4 月，解救出被日军围困的英军 7000 多人<br>9、简述中国抗日战争的两个战场及其关系。<br>答： （1）抗日战争时期中国始终存在着两个战场，即共产党领导的敌后战场和国民党领导的下面战场。<br>（2）国民党领导的下面战场始终是中国抗战的重要战场，在全民族抗战中具有重要地位。全国性抗战<br>开始后，共产党领导的八路军、新四军立即投入抗日斗争。八路军刚开赴前线时，主要是直接在战役上<br>配合国民党军队作战。 1937 年 11 月太原失陷后，按照中共中央的部署，八路军在敌后实施战略展开，<br>发动独立自主的敌后游击战争。<br>（3）正面战场和敌后战场在中国抗日战争中逐渐形成，在战略上相互配合。</p><h2 id="第四节-中国共产党成为抗日战争的中流砥柱"><a href="#第四节-中国共产党成为抗日战争的中流砥柱" class="headerlink" title="第四节 中国共产党成为抗日战争的中流砥柱"></a>第四节 中国共产党成为抗日战争的中流砥柱</h2><p>1、全国性抗战开始后中国军队的第一次重大胜利是平型关战役。<br>2、1940 年八路军在华北发动的大规模破袭进攻战是百团大战。<br>3、太原失陷后，中国共产党领导的是八路军在敌后实施战略展开，最先建立的敌后抗日根据地是晋察<br>冀抗日革命根据地。<br>4、中国共产党在抗民族统一战线中必须坚持独立自主原则的实质是力争中国共产党对抗日战争的领导<br>权以取得抗战的胜利。<br>5、为了度过根据地严重的经济困难，中共中央采取实施的李鼎铭提出的“精兵简政”的建议。<br>6、中国共产党内反复出现“左”右倾错误的思想认识根源是主观主义。<br>7、1945 年，中国共产党第七次全国代表大会将毛泽东思想规定为党的一切工作的指针。<br>8、在联合国制宪会议上中国成为联合国的创始国和五个常任理事国。<br>9、敌后战场为国捐躯的八路军、新四军高级将领有左权、彭雪枫、赵尚志。<br>10、国民党顽固派制造的反共高潮有<br>（1）胡宗南进攻陕甘宁边区（ 2）阎锡山攻击共产党领导的新军和八路军<br>（3）皖南事变 （4）策划发动第三次反共高潮<br>11、中国共产党主张要实行全面抗战必须要做到<br>（1）实行全国军事的总动员（ 2）实行全国人民的总动员<br>（3）必须改革政治机构给人民以充分的民主权利（ 4）适当改善工农大众的生活<br>12、中国共产党强调必须在统一战线中坚持独立自主，为此要采取的措施有<br>（1）党必须保存在思想政治组织上的独立性，发动群众壮大人民力量<br>（2）坚持党对人民军队的绝对领导，努力发展抗日武装和抗日根据地<br>（3）对国民党采取又团结又斗争、以斗争求团结的方针<br>13、抗战初期国民党下面战场组织的重要会战有淞沪会战、忻口会战、徐州会战、武汉会战。<br>14、抗日战争时期中间势力包括民族资产阶级、开明绅士、地方实力派<br>15、大生产运动<br>（1）为了克服严重的经济困难 （2）首先在陕甘宁边区进行<br>（3）口号是“自己动手，丰衣足食” （4）三五九旅履行南泥湾<br>16、各地普遍开展大生产运动的效果是<br>（1）克服了经济困难 （2）解决了部队的粮饷 （3）提高了当地人民的生活水平<br>17、为什么说中国共产党及其领导的人民抗日力量在抗日战争中起了中流砥柱的作用？<br>答： （ 1）以毛泽东同志为杰出代表的中国共产党人，把马克思列宁主义同中国革命具体实际相结合，创<br>立和发展了毛泽东思想的科学理论，对抗日战争发挥了重要的思想和战略指导作用。<br>（2）中国共产党坚持抗战、反对妥协，坚持团结、反对分裂，坚持进步、反对后退，成为引导全民族<br>抗战走向胜利的一面旗帜。<br>（3）中国共产党积极倡导、促成、维护抗日民族统一战线，最大限度地动员了全国军民共同抗战，成<br>为凝聚全民族力量的杰出组织者和鼓舞者。<br>（4）中国共产党坚持全面抗战路线，制定正确的战略策略，实施动员人民、领先人民的路线政策，提<br>出持久战的战略总方针和一整套人民战争的战略战术， 开辟广大的敌后战场， 成为坚持抗战的中坚力量。<br>（5）中国共产党人以自己最富于牺牲精神的爱国主义、不怕流血牺牲的模范行为，支撑起全民族救亡<br>图存的希望，成为夺取抗战胜利的民族先锋。<br>（6）抗日战争的历史生动有力地证明，中国共产党人不仅是坚定的国际主义者，而且首先是最热烈、<br>最忠诚、最彻底的爱国主义者。没有中国共产党人作中流砥柱，抗日战争的坚持和胜利是不可想象的。</p><h2 id="第五节-抗日战争的胜利及其意义"><a href="#第五节-抗日战争的胜利及其意义" class="headerlink" title="第五节 抗日战争的胜利及其意义"></a>第五节 抗日战争的胜利及其意义</h2><p>1、抗日战争胜利取得完全胜利的重要标志是收回了台湾及澎湖列岛。<br>2、关于日本投降、抗日战争胜利的重要事件有<br>（1）8 月 15 日，天皇以广播“终战诏书”的形式宣布接受波茨坦公告<br>（2）9 月 2 日，日本方面的代表在美舰密苏里号上签署投降书<br>（3）9 月 9 日，中国战区受降仪式在南京举行<br>（4）10 月 25 日，中国政府在台湾举行受降仪式<br>3、中国人民抗日战争胜利的主要原因是什么？<br>答： （1）中国共产党在全民族抗战中发挥了中流砥柱的作用。 这是中国人民抗日战争同近代以来历次反<br>侵略战争最大的区别。中国共产党积极倡导、促成、维护抗日民族统一战线，最大限度地动员全国军民<br>共同抗战， 成为凝聚全民族力量的杰出组织者和鼓舞者。 以毛泽东为主要代表的中国共产党人， 把马克<br>思列宁主义基本原理同中国具体实际相结合， 科学阐明了抗日战争的规律和进程， 制定了正确的战略和<br>策略，对抗日战争发挥了重要的指导作用。<br>（2）中国人民巨大的民族觉醒、空前的民族团结和英勇的民族抗争，是中国人民抗日战争胜利的决定<br>性因素。抗日战争唤起了全民族的危机意识和使命意识。 中国共产党以全民抗战的纲领主张、 团结御侮<br>的先锋作用、人民战争的组织力量，最大限度地调动起全国人民的抗日积极性。在抗日战争中，军队和<br>老百姓相结合， 武装斗争与非武装斗争相结合，前方斗争和后方斗争相结合，公开斗争与隐蔽斗争相结<br>合， 使日本侵略者陷入了人民战争的汪洋大海之中。 国民党的爱国官兵也为反对日本的侵略作出了贡献。<br>（3）中国人民抗日战争的胜利，同世界所有爱好和平和正义的国家和人民、国际组织以及各种反法西<br>斯力量的同情和支持也是分不开的。苏联、美国、法国、英国等向中国提供了经济和军事援助。许多国<br>家的反法西斯战士直接参加了中国人民的抗日战争，为中国人民的解放事业贡献鲜血和生命。<br>4、中国人民抗日战争胜利的基本经验是什么？<br>答： （ 1）全国各族人民的大团结，是中国人民战胜一切艰难困苦、实现抗战胜利的力量源泉。在抗日战<br>争中，中华民族实现了空前的大团结，形成了真正意义上的全民族抗战。始终坚持以国共合作为基础、<br>以中国共产党为中流砥柱的抗日民族统一战线， 是实现和维护全国各族人民大团结的政治保证。 没有全<br>国各族人民的大团结，没有抗日民族统一战线，就没有抗日战争的伟大胜利。<br>（2）以爱国主义为核心的伟大民族精神是中国人民团结奋进的精神动力。这是抗日战争得以坚持和胜<br>利的重要的思想保证。 抗日战争大大丰富和升华了以爱国主义为核心的中华民族精神。 中国共产党以其<br>精诚团结、坚持抗战、献身民族的实际行动，成为中华民族精神的集中代表者，充分发挥出民族先锋队<br>和阶级先锋队的作用，赢得了全中国人民的拥戴。<br>（3）中国人民热爱和平、反对侵略战争，同时又不惧怕战争。中国人民进行反侵略战争，是为了捍卫<br>中华民族生存和发展的权利，是对世界反法西斯战争和人类进步事业的重大贡献。</p><h1 id="第七章-为创建新中国而奋斗"><a href="#第七章-为创建新中国而奋斗" class="headerlink" title="第七章 为创建新中国而奋斗"></a>第七章 为创建新中国而奋斗</h1><h2 id="第一节-从争取和平民主到进行自卫战"><a href="#第一节-从争取和平民主到进行自卫战" class="headerlink" title="第一节 从争取和平民主到进行自卫战"></a>第一节 从争取和平民主到进行自卫战</h2><p>1、第二次世界大战后，美国开始在资本主义世界中称雄。<br>2、中共中央在 1945 年 8 月 25 日明确提出“和平民主团结”的口号。<br>3、1945 年 10 月 10 日，国共双方签署了《政府与中共代表会谈纪要》 ，又称《双十协定》 。<br>4、1945 年 9 月 19 日，中共中央针对和谈期间特殊情况，正式确定了“向北发展，向南防御”的战略<br>方针。<br>5、反法西斯战争后，人民民主力量明显增长的主要表现是<br>（1）社会主义的苏联得以较快地恢复和巩固<br>（2）人民民主和社会主义制度在多国建立<br>（3）民族解放运动在亚洲、非洲、拉丁美洲蓬勃兴起<br>（4）在资本主义国家，共产党的影响显著增长，工人运动有了新的发展<br>6、为打退国民党军队在重庆谈判期间发动的军事进攻，解放区军民进行了上党战役、邯郸战役、平绥<br>战役、津浦战役。<br>7、出席 1946 年 1 月政治协商会议的党派，除国民党、共产党外，还有民主同盟、青年党。<br>8、1946 年 1 月的政治协商会议通过的协议包括政府组织、国民大会、和平建国纲领、宪法草案。<br>9、1946 年 2 月 10 日和 6 月 23 日，国民党当局先后在重庆和南京制造了较场口惨案、下关惨案。<br>10、毛泽东指出的必须打败蒋介石，而且能够打败他的原因。<br>答： （ 1）全面内战爆发后，中国共产党清醒地估计了国内外形势，明确而坚定地指出我们不但必须打败<br>蒋介石，而且能够打败他。<br>（2）必须打败蒋介石，是因为蒋介石发动的战争，是一场院在美帝国主义指挥之下的反对中国民族独<br>立和中国人民解放的反革命的战争。 不用革命战争反对反革命战争，中国就将变成黑暗世界， 中华民族<br>的前途就会被断送。<br>（3）能够打败蒋介石，是因为蒋介石军事力量的优势和美国的援助，只是暂时的现象是临时起作用的<br>因素；而蒋介石发动的战争的反人民性质，人心的向背，则是经常起作用的因素。人民解放战争所具有<br>的爱国的正义的革命的性质，必然要获得全国人民的拥护。这就是战胜蒋介石的政治基础。</p><h2 id="第二节-国民党处于全民的包围之中"><a href="#第二节-国民党处于全民的包围之中" class="headerlink" title="第二节 国民党处于全民的包围之中"></a>第二节 国民党处于全民的包围之中</h2><p>1、1947 年 2 月，解放区军民粉碎国民党军队的全面进攻。<br>2、1947 年 6 月，解放区军民粉碎国民党军队的重点进攻。<br>3、中国共产党发布《关于清算、减租及土地问题的指示》 ，决定将减租减息政策改变为实现“耕者有其<br>田”政策。<br>4、学生运动是国统区人民所进行的第二条战线的斗争的发端。<br>5、1947 年 12 月，毛泽东在《目前形势和我们的任务》的报告中提出新民主主义革命三大经济纲领。<br>6、 “一二 ?一”运动的基本口号是“反对内战，争取自由” 。<br>7、1947 年间，全国先后举行罢工的工人达 120 万人。<br>8、1947 年，台湾人民发动反对国民党黑暗统治的“二 ?二八”起义。<br>9、新疆省于 1945 年建立少数民族群众的革命政府。<br>10、1947 年 5 月 1 日，内蒙古自治政府成立，乌兰夫任政府主席。<br>11、1948 年 1 月 1 日，中国国民党革命委员会在香港成立。<br>12、1945 年 12 月中国民主建国会成立，其成员主要是爱国的民族工商业者以及有联系的知识分子。<br>13、中国民党临时行动委员会于 1947 年 2 月改称中国农工民主党。<br>14、1947 年 10 月，国民党当局宣布中国民主民盟“为非法团体” ，明令对该组织及其成员的一切活动<br>“严加取缔”。<br>15、台湾民主自治同盟于 1947 年 11 月在香港成立。<br>16、1948 年 4 月，毛泽东系统地阐明的中国共产党的土地改革总路线是依靠贫农，团结中农，有步骤<br>地、有分别地消灭封建剥削制度，发展农业生产。<br>17、国民党统治区的政治经济危机日益加深的主要原因是<br>（1）抗战胜利后，国民党把接收变成“劫收” ，从而使更多的民众期望破灭<br>（2）国民党统治集团违背全国人民的意愿，实行反人民的内战政策<br>（3）将全国各阶层人民置于饥饿和死亡线上<br>18、抗日战争胜利后正式成立的民主党派有九三学社、中国民主促进会。<br>19、中国各民主党派形成时的社会基础，主要是<br>（1）民族资产阶级及其知识分子（ 2）城市小资产阶级及其知识分子（ 3）其他爱国民主分子<br>20、1948 年 1 月，民盟一届三中全会明确宣告<br>（1）不接受解散民盟的任何决定，并恢复民盟总部<br>（2）民盟坚决不能够在是非曲直之间，有中立的态度<br>（3）今后要与中国共产党携手合作<br>21、抗日战争胜利后，国民党政府陷入全民的包围中并迅速走向崩溃的原因。<br>答：抗日战色胜利后，国民党政府陷入全民的包围中并迅速走向崩溃的原因是：<br>（1）抗战胜利后，国民党把接收变成“劫收” ，大发“胜利财” ，从而使更多的民众期望破灭。<br>（2）国民党统治集团违背全国人民迫切要求休养生息、和平建国的意愿，实行反人民的内战政策。<br>（3）为了支持反人民的内战，国民党政府从多方面加剧对广大人民的疯狂掠夺，将全国各阶层人民置<br>于饥饿和死亡线上，迫使全国各阶层人民团结起来，同国民党政府作你死我活的斗争，除此以外，再无<br>出路。<br>（4）中国共不产党制定和实行了推翻国民党黑暗统治的正确的政策和策略，不仅成功地领导了解放区<br>军民在第一条战线的革命斗争，而且成功地领导了国统区人民在第二条战线的革命斗争。</p><h2 id="第三节-人民共和国：中国人民的历史性选择"><a href="#第三节-人民共和国：中国人民的历史性选择" class="headerlink" title="第三节 人民共和国：中国人民的历史性选择"></a>第三节 人民共和国：中国人民的历史性选择</h2><p>1、毛泽东为新华社写的 1949 年新年献词一文是《将革命进行到底》 。<br>2、人民解放军占领南京是在 1949 年 4 月 23 日。<br>3、 《共同纲领》最基本、最核心的内容是关于新中国的国体和政体的规定。<br>4、自 1948 年 9 月 12 日开始至 1949 年 1 月 31 日结束的三大战役是辽沈战役、淮海战役、平津战役。<br>5、参加淮海战役的人民军队是华东野战军、中原野战军。<br>6、中共七届二中全人的主要内容是<br>（1）规定了全国胜利后中国共产党在政治、经济、外交等方面的基本政策<br>（2）指出了中国由农业国转变为工业国、由新民主主义社会转变为社会主义社会的发展方向<br>（3）在中国共产党自身建设的问题上，提出了“两个务必”的要求<br>7、从 1948 年 8 月起，各民主党派负责人、无党派民主人士接受中共中央邀请，分别从香港、上海、北<br>平及海外，陆续进行东北解放区、华北解放区。<br>8、淮海战役总前委的成员，除刘伯承、邓小平外，还有陈毅、粟裕、谭震林。<br>9、1949 年 4 月 21 日，向中国人民解放军发布《向全国进军的命令》的是毛泽东、朱德。<br>10、 《共同纲领》规定的新中国外交工作的原则<br>（1）保障本国独立、自由和领土主权的完整<br>（2）维护国际的持久和平和各国人民间的友好合作<br>（3）反对帝国主义的侵略政策和战争政策<br>11、中国革命取得胜利的基本经验有<br>答： （1）建立广泛的统一战线（ 2）坚持革命的武装斗争（ 3）加强共产党自身的建设</p><h1 id="第八章-社会主义基本制度的全面确立"><a href="#第八章-社会主义基本制度的全面确立" class="headerlink" title="第八章 社会主义基本制度的全面确立"></a>第八章 社会主义基本制度的全面确立</h1><h2 id="第一节-《共同纲领》的全面实施与新民主主义革命任务的胜利完成"><a href="#第一节-《共同纲领》的全面实施与新民主主义革命任务的胜利完成" class="headerlink" title="第一节 《共同纲领》的全面实施与新民主主义革命任务的胜利完成"></a>第一节 《共同纲领》的全面实施与新民主主义革命任务的胜利完成</h2><p>1、1949 年中华人民共和国的成立标志着中国现代史的开端。<br>2、在新解放区，人民解放军进行了大规模的剿匪作战，共消灭国民党土匪武装 200 多万。<br>3、1951 年 5 月，西藏和平解放标志着中国人民解放军完成全国大陆的解放。<br>4、1950 年 6 月，中央人民政府颁布了《中华人民共和国土地改革法》 。<br>5、新中国成立初期开展的镇压反革命运动的政策是镇压与宽大相结合。<br>6、新中国建立社会主义国营经济的最主要途径和手段是没收官僚资本。<br>7、1950 年 5 月，第一部《中华人民共和国婚姻法》颁布。<br>8、中共七届三中全会提出争取国家财政经济状况基本好转的任务。<br>9、到 1953 年 3 月，我国建立了县级以上的民族自治区达 47 个。<br>10、1951 年至 1952 年“五反”运动开展的领域是私营工商业。<br>11、新中国的第一个五年计划中，集中主要力量发展的是重工业。<br>12、新中国成立初期，我国主持召开的第一次大型国际会议是亚洲太平洋地区和平会议。<br>13、中国人民志愿军司令员兼政治委员是彭德怀。<br>14、1949 年 10 月 2 日，第一个照会中国政府，决定同中华人民共和国建立外交关系的国家是苏联。<br>15、新民主主义社会的起止时间是 1949 年—— 1956 年。<br>16、20 世纪中国人民在前进道路上经历的第一交历史性巨大变化是新中国的成立和社会主义制度的建<br>立。<br>17、中华人民共和国的成立奈志着新民主主义革命基本胜利； 半殖民地半封建社会结束；中国进入新民<br>主主义社会。<br>18、建国初期进行的运动主要有土地改革运动、镇压反革命运动、三反五反运动、抗美援朝运动。<br>19、建国初期，中国共产党对很高营工商业进行全面调整的原则是公私兼顾、劳资两利。<br>20、党的七届三中全会提出获得国家财政经济状况根本好转的条件是土地改革的完成； 现有工商业的调<br>整；国家机构所需经费的大量节减。<br>21、1951 年至 1952 年开展的“三反”运动的主要内容是反贪污、反浪费、反官僚主义。<br>22、1952 年开展的“五反”运动的主要内容是反行贿和反偷税漏税、反盗窃国家资财、反偷工减料、<br>反盗窃国家经济情报。<br>23、新中国成立前夕，中共中央提出的对外方针是另起炉灶、打扫干净屋子再请客的一边倒方针。<br>24、 新中国建立初期， 新民主主义社会的经济成分， 除了社会主义性质的国营经济外， 还有合作社经济、<br>个体经济、私人资本主义经济、国家资本主义经济。<br>25、中华人民共和国成立开辟了中国历史的新纪元。<br>答： 1949 年 10 月 1 日，中华人民共和国的成立，宣告中国人民当家作主的时代已经到来，中国历史由<br>此开辟了一个新纪元。<br>（1）帝国主义列强压迫中国、奴役中国人民的历史从此结束，中华民族一洗近百年来蒙受的屈辱，开<br>始以崭新的姿态自立于世界的民族之林。占人类总数四分之一的中办从此站立起来了。<br>（2）本国封建主义、官僚资本主义统治的历史从此结束，长期以来受尽可能压迫和欺凌的广大中国人<br>民在政治上翻了身，第一次成为新社会、新国家的主人。一个真正属于人民的共和国建立起来了。<br>（3）军阀割据、战乱频仍、匪患不断的历史从此结束，国家基本统一，民族团结，社会政治局面趋向<br>稳定，各族人民开始过上安居乐业的生活。 人民可以集中力量从事经济文化等方面建设的时期开始到来<br>了。<br>（4） 从根本上改变了中国社会的发展方向， 为实现由新民主主义向社会主义的过渡， 创造了前提条件。<br>（5）中国共产党成为全国范围内的执政党。它可以运用国家政权凝聚和调集全国力量，巩固民族独立<br>和人民解放的成果，解放并发展社会生产力，发造福于各族人民，造福于整个中华民族。<br>总之， 中华人民共和国的成立， 标志着中国人新民主主义革命取得了基本的胜利， 标志着半殖民地半封<br>建社会的结束和新民主主义社会在全国范围内的建立。这是马克思主义同中国实际相结合的伟大胜利。</p><h2 id="第二节-制定过渡埋藏总路线"><a href="#第二节-制定过渡埋藏总路线" class="headerlink" title="第二节 制定过渡埋藏总路线"></a>第二节 制定过渡埋藏总路线</h2><p>1、1953 年，中共中央正式提出过渡时期总路线。<br>2、中国共产党在过渡时期总路线的主体是实现国家的社会主义工业化。<br>3、全国胜利并解决了土地问题以后，新民主主义社会的基本矛盾是新中国同学国主义的矛盾；工人阶<br>级和资产阶级的矛盾。<br>4、 在农业合作化运动中， 党和政府领导农民创造的过渡形式有农业生产互助组、 初级农业生产合作社、<br>高级农业生产合作社。<br>5、1949 年至 1952 年期间，开始向社会主义过渡的实际步骤。<br>答： 1949 年至 1952 年期间，在着重完成民主革命的遗留任务的同时，社会主义革命的任务实际上也开<br>始实行了。这主要表现在以下三个方面：<br>（1）没收官僚资本，确立社会主义性质的国营经济的领导地位。<br>（2）开始将资本主义纳入国家资本主义轨道。<br>（3）引导个体农民在土地改革后逐步走上互助合作的道路。</p><h2 id="第三节-开辟中国社会主义改造道路"><a href="#第三节-开辟中国社会主义改造道路" class="headerlink" title="第三节 开辟中国社会主义改造道路"></a>第三节 开辟中国社会主义改造道路</h2><p>1、在农业社会主义改造中建立的初级农业生产合作社属于半社会主义性质。<br>2、毛泽东系统阐明农业合作化理论的重要文献是《关于农业合作化问题》<br>3、我国对资本主义工商业的社会主义改造所采取的基本政策是统购包销。<br>4、 在对资本主义工商业进行社会主义改造过程中， 当个别企业公私合营后， 企业的利润实行四马分肥。<br>5、社会主义改造的基本完成标志着社会主义制度在中国最终确立。<br>6、 我国对个体农业实行社会主义改造必须遵循的原则和采取的方法有自愿互利、 典型示范、 逐步推广。<br>7、我国对资本主义工商业进行社会主义改造所采取的初级形式国家资本主义有加工订货、统购包销、<br>经销代销、公私联营。<br>8、在社会主义改造过程中，我国实行的高级形式的国家资本主义是个别企业的公私合营、全行业公私<br>合营。<br>9、在资本主义工商业改造中，企业的利润分配实行“四马分肥”的办法，除了国家所得税外，还包括<br>企业公积金、工人福利费、股金红利。<br>10、 “一五”期间中国着重建设的三大钢铁基地有鞍山、包头、武汉。<br>11、由新民主主义向社会主义转变的必要条件是<br>（1）中国共产党的政治领导<br>（2）社会主义国营经济的领导地位<br>（3）马克思主义思想文化领域中的指导地位<br>12、中国共产党开展农业合作化运动的基本原则和方针。<br>答：中国共产党关于农业合作化运动的基本原则和方针是：<br>（1）在中国的条件下，可以走先合作化、后机械化的道路。在土地改革基本完成后，及时将“组织起<br>来”作为农村工作的一件大事来抓。<br>（2）充分利用和发挥土改后农民的两种生产积极性，通过互助组、初级农业生产合作社、高级农业生<br>产合作社这种由低到高的互助合作的组织形式，实行积极发展、稳步前进、逐步过渡的方针。<br>（3）农业互助合作的发展，要坚持自愿和互利的原则，采取典型示范、逐步推广的方法，发展一批，<br>巩固一批。<br>（4）要始终把是否增产作为衡量合作社是否办好的标准。<br>（5）要把社会改造同技术改造相结合。在实现农业合作化以后，国家应努力用先进的技术的装备发展<br>农业经济。</p><h1 id="第九章-社会主义建设在探索中曲折发展"><a href="#第九章-社会主义建设在探索中曲折发展" class="headerlink" title="第九章 社会主义建设在探索中曲折发展"></a>第九章 社会主义建设在探索中曲折发展</h1><h2 id="第一节-良好的开局"><a href="#第一节-良好的开局" class="headerlink" title="第一节 良好的开局"></a>第一节 良好的开局</h2><p>1、1956 年 1 月，中共中央召开关于知识分子问题会议，动员全党和全国人民“向科学进军” 。<br>2、毛泽东在《论十大关系》中提出的中国社会主义建设的基本方针是调动一切积极因素为社会主义事<br>业服务。<br>3、毛泽东《论十大关系》的重要讲话最先发表于 1956 年 4 月 25 日中央政治局扩大会议。<br>4、毛泽东在《论十大关系》中提出社会主义文化建设的新方针是“百花齐放，百家争鸣” ，共产党和其<br>他民主党派要“长期共存，互相监督” 。<br>5、在中共八大上陈支提出探索适合中国特点的经济体制的“三个主体、三个补充”思想。<br>6、毛泽东指出，在社会主义改造完成后，我国政治生活的主题是正确处理人民内部矛盾。<br>7、中国八大坚持的我国经济方针是既反保守，又反冒进，在综合平衡中稳步前进的方针。<br>8、中共八大提出的党和全国人民当前的主要任务是把我国尽快地从落后的农业国变为先进的工业国。<br>9、1957 年春夏一蔬菜 的整风运动的主题是正确处理人民内部矛盾。<br>10、1964 年中国第一颗原子弹爆炸成功。<br>11、八届九中全会上，中共中央正式通过对国民经济实行“调整、巩固、充实、提高”的方针。<br>12、 毛泽东在国共八届九中全会上号召全党大兴调查研究之风， 搞一个实事求是年， 这一年是 1961 年。<br>13、中国同印度、缅甸等国共同倡导的处理国与国关系公认的国际准则是和平共处五项原则。<br>14、毛泽东提出要正确处理人民内部矛盾，主要是为了团结一切力量建设社会主义新国家。<br>15、社会主义改造基本完成后，我国国内的主要矛盾是<br>（1）人民对于建立先进的工业国的要求同落后的农业国的现实之间的矛盾。<br>（2）人民对于经济文化迅速民菜的需要同当前经济文化不能满足人民需要的状况之间的矛盾<br>16、中共八大提出的政治建设方针有<br>（1）继续加强我国的人民民主专政（ 2）加强国内各民族的团结<br>（3）继续巩固人民民主统一战线 （4）建立健全法制<br>17、毛泽东提出社会主义的基本矛盾是<br>（1）生产关系和生产力之间的矛盾（ 2）上层建筑和经济基础之间的矛盾<br>18、毛泽东在《关于正确处理人民内部矛盾的问题》的讲话中提出，解决人民内部矛盾的方法有民主的<br>方法、说服教育的方法、 “团结——批评——团结”的方法。<br>19、1957 年的整风运动反对的主要是主观主义、宗派主义、官僚主义。<br>20、 《论十大关系》的基本内容及其意义。<br>答： （1） 《论十大关系》的报告，总结经济建设的初步经验，借鉴苏联建设的经验教训，系统地阐述了<br>十大关系。 它围绕一个基本方针， 即： “一定要努力把党内党外、 国内国外的一切积极的因素， 直接的、<br>间接的积极因素，全部调动起来，把我国建设成为一个强大的社会主义国家” 。<br>（2）初步提出了中国社会主义经济建设的若干新方针。其基本精神是要在着重发展重工业和国防工业<br>的同时，大力发展同国计民生密切相关的轻工业、农业，并且充分发挥中央和地方、沿海与内地两方面<br>的建设积极性。 这实际上涉及了经济体制的改革。 在社会主义政治建设方面，提出共产党和其他民主党<br>派要实行“长期共存，互相监督”的方针，在肃反中坚持“一个不杀、大部不捉”的方针。<br>在讨论报告的过程中， 还提出了社会主义文化建设的新方针—— “双百” （百花齐放、 百家争鸣） 方针。<br>（3）意义： 《论十大关系》 是以毛泽东为主要代表的中国共产党人开始探索中国自己的社会主义建设道<br>路的标志。它在新的历史条件下从经济方面（这是主要的）和政治方面提出了新的指导方针，为中共八<br>大的召开作了理论准备。</p><h2 id="第二节-探索中的严重曲折"><a href="#第二节-探索中的严重曲折" class="headerlink" title="第二节 探索中的严重曲折"></a>第二节 探索中的严重曲折</h2><p>1、人民公社化的基本特点是“一大二公” 。<br>2、1971 年林彪反革命集团策动反革命武装政变终至失败。<br>3、发动和领导“文化大革命”的主要论点，被概括为无产阶级专政下继续革命的理论。<br>4、发动“文化大革命”的导火线是姚文元在《文汇报》上发表《评新编历史剧〈海瑞罢官〉 》 。<br>5、1975 年邓小平开始着手对各方面工作进行整顿。<br>6、毛泽东探索中国社会主义建设道路出现严重失误的原因主要是<br>（1）缺乏社会主义建设的经验（ 2）把本不属于阶级斗争的问题看作是阶级斗争<br>（3）民主集中制和集体领导原则遭到破坏（ 4）对什么是社会主义，如何建设社会主义没有完全搞清楚<br>7、1959 年到 1961 年中国国民经济发生严重困难的主要原因是<br>（1）自然灾害的影响（ 2） “大跃进”和“反右倾”斗争的错误（ 3）苏联政府撕毁合同、撤走专家<br>8、集中体现毛泽东探索中国社会主义建设道路所取得的理论成果的著作有《论十大关系》 、 《关于正确<br>处理人民内部矛盾的问题》 。<br>9、从“一五”时期到 1976 年，涌现出大量英雄模范人物，主要代表有焦裕禄、王进喜、雷锋等。<br>10、毛泽东提出的我国对待古今中外一切文化成果的方针是古为今用、洋为中用。<br>11、 “大跃进”运动中所犯的“左”倾错误的主要示志是高指标、瞎指挥、浮夸风、 “共产风”。<br>12、20 世纪 50 年代被称为“三面红旗”的是总路线、 “大跃进”、人民公社。<br>13、 在粉碎江青反革命集团， 结束“文化大革命” 的斗争中作出了重要贡献的党和国家领导人有华国锋、<br>叶剑英、李先念。<br>14、以毛泽东为主要代表的中国共产党人的在探索中国社会主义建设道路中有哪些失误？<br>答： （1）以毛泽东为主要代表的中国共产党人在探索中国社会主义建设道路中出现的失误主要是：<br>“大跃进”和人民公社化运动的发动： 1957 年开始的“大跃进”运动的开展，使以高指标、瞎指挥、<br>浮夸风和“共产风”为主要标志的“左”倾错误严重地泛滥开来，严重地破坏了国民经济各部门的综合<br>平衡。同时开展的以“一大二公”为特点的农村人民公社化运动，严重地脱离农村的生产力水平，致使<br>“一平二调”之风泛滥，损害了广大的社员和小集体的利益。<br>1959 年 8 月，错误地开展了“反右倾”斗争，使纪“左”进程中断。主要由于“大跃进”和“反右倾”<br>斗争的错误，加上当时的自然灾害和苏联政府背信弃义地撕毁合同、撤走全部专家，中国国民经济在<br>1959 年到 1961 年发生严重困难。<br>1963 年至 1965 年，在多数城乡发起了社会主义教育运动。这场运动，虽然对于解决干部作风和经济管<br>理等方面的问题起了一定作用， 但由于把这此问题都作为阶级斗争或者是阶级斗争在党内的反映来处理，<br>曾使不少基层干部受到不应有的打击。<br>1966 年 5 月至 1976 年 10 月的“文化大革命” ，是一场由领导者错误发动，被反革命集团利用，给党、<br>国家和各族人民带来严重灾难的内乱，是全局性的、长时间的“左”倾严重错误。它使中国共产党、国<br>家和人民遭到新中国成立以来最严重的挫折和损失。</p><h2 id="第三节-建设的成就，探索的结果"><a href="#第三节-建设的成就，探索的结果" class="headerlink" title="第三节 建设的成就，探索的结果"></a>第三节 建设的成就，探索的结果</h2><p>1、1971 年中国在外交领域的重大成就是恢复在联合国的合法席位。<br>2、1972 年，先后同中国建立大使级外交关系的国家有英国、荷兰、希腊、联邦德国。<br>3、20 世纪六、七十年代，我国在核技术、人造卫星和运载火箭等尖端科学技术领域取得的重要成就包<br>括爆炸了第一颗原子弹、 中近程地地导弹发射成功、 爆炸了第一颗氢弹、 第一颗人造地球卫星发射成功。<br>4、同中国共同倡导的和平共处五项原则的国家是印度、缅甸。<br>5、新中国的社会主义建设取得了哪些成就？<br>答： （ 1）基本建立了独立的、比较完整的工业体系和国民经济体系，从根本上解决了工业化中“从无到<br>有”的问题。从“一五”计划开始，国家建成了一批门类比较齐全的基础工业项目，为国民经济的进一<br>步发展打下了坚实的基础，使中国在赢得了政治上的独立之后赢得了经济上的独立。<br>（2）人民生活水平得到提高，文化、医疗、科技事业不断发展。初步满足了占世界 1/4 人口的基本生<br>活需求。文化、教育、医疗、科技事业得到长足的发展。在核技术、人造卫星和运载火箭等尖端科学技<br>术领域，取得了一系列重要的成就， 1964 年 10 月，中国爆炸了第一颗原子弹。 1966 年 10 月，装有核<br>弹头的中近程地导弹发射成功。 1967 年 6 月，爆炸了第一颗氢弹。 1970 年 4 月，第一颗人造地球卫星<br>发射成功。<br>（3）国际地位得到提高，国际环境得到改善。 1950 年至 1953 年的抗美援朝战争，以及随后召开的日<br>内瓦国际会议和万隆会议，极大提高了新中国的国际地位；中国同印度、缅甸等国倡导的平共处五项原<br>则，成为处理国与国关系的公认的国际准则。 1971 年 10 月，中国恢复了在联合国的合法席位。 20 世纪<br>70 年代，中美、中日关系正常化。 1972 年出现了西方国家对华建交热潮，同中国建交的国家，从 1965<br>年的 49 个增加到 1976 年的 111 个。</p><h1 id="第十章-改革开放和现代化建设新时期"><a href="#第十章-改革开放和现代化建设新时期" class="headerlink" title="第十章 改革开放和现代化建设新时期"></a>第十章 改革开放和现代化建设新时期</h1><h2 id="第一节-历史性伟大转折和改革开放的起步"><a href="#第一节-历史性伟大转折和改革开放的起步" class="headerlink" title="第一节 历史性伟大转折和改革开放的起步"></a>第一节 历史性伟大转折和改革开放的起步</h2><p>1、中共十届三中全会作出了《关于恢复邓小平同志职务的决议》 。<br>2、1978 年 5 月 11 日，开始了关于趔标准问题的讨论。<br>3、中共十一届六中全会对毛泽东和毛泽东思想的历史地位作出了科学的评价。<br>4、1978 年 12 月 13 日，邓小平在中央工作会议闭幕会作了《解放思想，实事求是，团结一致向前看》<br>的重要讲话。<br>5、党的十一届六中全会通过的《关于建国以来党的若干历史问题的决议》中国如何对毛泽东和毛泽东<br>思想进行评价的？<br>答： （1）1981 年 6 月，中共十一届六中全会通过了《关于建国以来党的若干历史问题的决议》 。<br>（2）决议科学地评价了毛泽东和毛泽东思想的历史地位，指出：毛泽东同志是伟大的马克思主义者，<br>是伟大的无产阶级革命家、战略家和理论家。他的功绩是第一位的，错误是第二位的。他为中国共产党<br>和中国人民解放军的创立和发展， 为中国各族人民解放事业的胜利， 为中华人民共和国的缔造和中国社<br>会主义事业的发展，建立了永远不可磨灭的功勋。<br>（3）决议对毛泽东思想的科学体系和活的灵魂 （即实事求是、 群众路线、 独立自主） 作了概括， 指出：<br>毛泽东思想是马克思列宁主义在中国的运用和发展， 是被实践证明了的关于中国革命和建设的正确的理<br>论原则和经验总结，是中国共产党集体智慧的结晶。决议强调： “毛泽东思想是我们党的宝贵的精神财<br>富，它将长期指导我们的行动。 ”</p><h2 id="第二节-改革开放和现代化建设新局面的展开"><a href="#第二节-改革开放和现代化建设新局面的展开" class="headerlink" title="第二节 改革开放和现代化建设新局面的展开"></a>第二节 改革开放和现代化建设新局面的展开</h2><p>1、统分结合的农村家庭联产承包责任制的普遍实行促进人民公社体制解体。<br>2、2001 年 12 月中国正式加入世界贸易组织。<br>3、中共十一届三中全会的主要内容有<br>（1）否定了“以阶级斗争为纲”的“左”的错误方针<br>（2）确定了把工作重点转移到社会主义现代化建设上来和实行改革开放的战略决策<br>4、1983 年 10 月，中共中央就农村体制改革问题作出的重大决定是废除人民公社；建立乡（镇）政府<br>作为基层政权；成立村民委员会作为村民自治组织。<br>5、邓小平提出的政治体制改革的基本思路是什么？<br>答： （ 1）1980 年 8 月，邓小平在中共中央政治局扩大会议上发表 《党和国家领导制度的改革》 的讲话，<br>分析了党和国家领导体制中存在的问题和弊端，提出了政治体制改革的基本任务。 1986 年，他又在多<br>次讲话中阐明了政治体制改革的基本思路。<br>（2）政治体制改革要认真解决官僚主义、权力过分集中、党政不分、事实上存在的领导职务终身制等<br>问题， 认真肃清封建主义残余影响和资产阶级思想影响， 发展社会主义民主，调动广大人民群众的积极<br>性。<br>（3）政治体制改革是社会主义制度的自我完善，必须以四荐基本原则为指导，遵循统一领导、循序渐<br>进的原则，在中国共产党的领导下有步骤、有秩序地推进；必须坚持从本国国情出发，总结本国的实践<br>经验，同时借鉴人类政治文明的有益成果。 绝不应照搬西方政治制度的模式， 绝不能搞资产阶级自由化。<br>（4）根据邓小平提出的上述基本思路， 1987 年 10 月，中共十二届七中全会讨论并原则通过中央制定<br>的《政治体制改革总体设想》 。</p><h2 id="第三节-改革开放和现代化建设发展的新阶段"><a href="#第三节-改革开放和现代化建设发展的新阶段" class="headerlink" title="第三节 改革开放和现代化建设发展的新阶段"></a>第三节 改革开放和现代化建设发展的新阶段</h2><p>1、邓小平在《目前的形势和任务》的讲话中提出中国人民长期奋斗的三件大事是维护世界和平、实现<br>祖国统一、加紧现代建设。<br>2、1980 年 5 月，中央决定开辟的沿海经济特区深圳、珠海、汕头、厦门。<br>3、1985 年 2 月，中央决定开辟的沿海经济开放区为珠江三角洲、闽南厦门泉州漳州三角地区、长江三<br>角洲。<br>4、邓小平南方谈话的主要内容和意义是什么？<br>答： （1）1992 年 1 月 18 日至 2 月 21 日，邓小平先后视察武昌、深圳、珠海、上海等地，发表重要谈<br>话，其主要内容是：<br>强调革命是解放生产力，改革也是解放生产力。基本路线要管一百年，动摇不得。判断改革开放程度的<br>标准，应该主要看是否有利于发展社会主义社会的生产力，是否有利于增强社会主义国家的综合国力，<br>是否有利于提高人民的生活水平。<br>强调计划和市场都是经济手段。 计划多一点还是市场多一点， 不是社会主义与资本主义的本质区别。 社<br>会主义的本质，是解放生产力，发展生产力，消灭剥削，消除两极分化，最终达到共同富裕。<br>强调发展才是硬道理。抓住时机，发展自己，关键是发展经济。他指出，科学技术是第一生产力。高科<br>技领域，中国也要在世界占有一席之地。<br>强调要坚持两手抓，一手抓改革开放，一手抓打击各种犯罪活动。这两只手都要硬。在整个改革开放过<br>程中都要反对腐败。<br>强调我国的社会主义还处在初级阶段。巩固和发展社会主义制度 ，还需要一个很长的历史阶段。我们<br>要在建设有中国特色的社会主义道路上继续前进。从现在起到下世纪中叶，将是很要紧的时期 ，我们<br>要埋头苦干。<br>(2)邓小平南方谈话，在重大历史关头，科学地总结了十一届三中全会以来党的基本实践和基本经验，<br>明确回答了长期困扰和束缚人们思想的许多重大认识问题， 对整个社会主义现代化建设事业产生了重大<br>而深远的影响。</p><h2 id="第四节-全面建设小康社会"><a href="#第四节-全面建设小康社会" class="headerlink" title="第四节 全面建设小康社会"></a>第四节 全面建设小康社会</h2><p>1、1997 年 7 月 1 日香港回归祖国。<br>2、中共十二大提出把我国建设成为高度文明、高度民主的社会主义国家的目标。<br>3、 中共十二届三中全会通过 《关于经济体制改革的决定》 ， 标志着经济体制改革以城市为重点全面展开。<br>4、1988 年 4 月海南省正式建立。<br>5、邓小平提出中国社会主义农业的改革和发展会有两个飞跃。<br>6、江泽民在庆祝中国共产党成立 80 周年大会上系统阐述了“三个代表”重要思想。<br>7、试述走和平发展的道路思想的基本内涵和重大意义。<br>答： （1）2004 年 8 月，胡锦涛在纪念邓小平同志诞辰一百周年大会上的讲话中提出，要高举和平、发<br>展、合作的旗帜，坚持走和平发展的道路。 2005 年 11 月，他在英国伦敦金融城发表演讲，系统地阐述<br>了走和平发展道路的基本内涵和重大意义。<br>（2）坚持走和平发展的道路，就是中国既通过争取和平的国际环境来发展自己，又通过自己的发展来<br>促进世界和平， 永远做维护世界和平、促进共同发展的坚定力量。 主要依靠自身力量和改革创新来实现<br>发展， 同时坚持对外开放的基本国策，在平等互利的基础上同世界各国开展交流合作， 努力实现互利共<br>赢。中国同国际社会其他成员携手努力，为实现各国和谐相处、全球经济和谐发展、不同文明和谐进步<br>的美好前景发挥积极作用，共同致力于建设一个持久和平、共同繁荣的和谐世界。</p><h2 id="第五节-改革开放和社会主义现代化建设的成就"><a href="#第五节-改革开放和社会主义现代化建设的成就" class="headerlink" title="第五节 改革开放和社会主义现代化建设的成就"></a>第五节 改革开放和社会主义现代化建设的成就</h2><p>1、科学发展观的核心是以人为本。<br>2、全国范围内取消农业税始自 2006 年。<br>3、胡锦涛在英国伦敦金融城发表演讲，系统地阐述走和平发展道路的基本内涵和重大意义。<br>4、社会主义荣辱观的主要内容是“八荣八耻” 。<br>5、中国共产党正式提出科学发展观的会议是十六届三中全会。<br>6、科学发展观的基本要求是全面协调可持续发展。<br>7、1978 年 12 月中共十一届三中全会以来改革开放新时期的最突出的标志是与时俱进。<br>8、改革开放以来，中国共产党领导中国人民取得一切成绩和进步的根本原因是<br>（1）开辟了中国特色社会主义道路（ 2）形成了中国特色社会主义理论体系<br>9、试述科学发展观的主要内容。<br>答： （1）2007 年 6 月 25 日，胡锦涛在中央党校发表重要讲话，系统阐述了科学发展观的丰富内涵和根<br>本要求。科学发展观，第一要义是发展，核心是以人为本，基本要求是全面协调可持续，根本方法是统<br>筹兼顾。<br>（2）科学发展观是以胡锦涛为总书记的中共中央坚持以邓小平理论和“三个代表”重要思想为指<br>导，从新世纪新阶段党和国家事业发展全局出发提出的重大战略思想。科学发展观同马克思列宁主义、<br>毛泽东思想、邓小平理论、 “三个代表”重要思想关于发展的思想一脉相承，是对经济社会发展一般规<br>律的认识的进一步深化， 是指导发展的世界观和方法论的集中体现，是推进社会主义经济建设、 政治建<br>设、文化建设、社会建设全面发展的指导方针。</p><h1 id="中国近现代史大事年表"><a href="#中国近现代史大事年表" class="headerlink" title="中国近现代史大事年表"></a>中国近现代史大事年表</h1><p>1839 年 林则徐虎门销烟<br>1840 年 -1842 年 鸦片战争<br>1841 年 5 月 广州三元里人民痛击英国侵略者<br>1842 年 《中英南京条约》签订，鸦片战争结束<br>19 世纪 40-50 年代 中国无产阶级产生<br>1844 年 《中美望厦条约》 、 《中法黄埔条约》签订<br>1851 年 金田起义 太平天国建立<br>1853 年 太平天国定都天京《天朝田亩制度》颁布<br>1856 年 太平天国领导集团内部互相残杀<br>1856-1860 第二次鸦片战争<br>1858 年 清政府分别与英、法、美、俄签定《天津条约》<br>1859 年 洪仁玕向洪秀全进呈《资政新篇》<br>1860 年 清政府分别与英、法、俄签订《北京条约》<br>1861 年 北京政变<br>1861 年 总理衙门成立<br>1862 年 京师同文馆成立<br>1864 年 天京陷落，太平天国运动失败<br>19 世纪 60-70 年代 中国民族资产阶级产生<br>19 世纪 60-90 年代 洋务运动<br>1883-1885 年 中法战争<br>1894-1895 年 甲午中日战争<br>1895 年 中日《马关条约》签定<br>19 世纪 90 年代 帝国主义国家掀起瓜分中国的狂潮<br>1898 年 戊戌变法<br>1900 年 义和团运动高潮<br>1900 年 八国联军侵华战争<br>1901 年《辛丑条约》签定<br>1905 年 中国同盟会成立<br>1911 年 黄花岗起义<br>1911 年 保路运动<br>1911 年 10 月 10 日 武昌起义<br>1912 年（民国元年） 中华民国成立<br>1912 年 清帝退位<br>1913 年 二次革命<br>1915 年 护国运动开始<br>1915 年 新文化运动开始<br>1916 年 袁世凯恢复帝制失败<br>1917 年 张勋复辟失败<br>1917 年 护法运动开始<br>1919 年 5 月 4 日 五四爱国运动爆发<br>1921 年 7 月中国共产党成立<br>1922 年初 香港中国海员大罢工<br>1922 年 7 月 中国共产党第二次全国代表大会召开<br>1923 年 京汉铁路工人大罢工<br>1924 年 中国国民党第一次全国代表大会<br>1924 年 国共两党第一次合作实现<br>1925 年 孙中山逝世<br>1925 年 五卅惨案、五卅反帝爱国运动爆发<br>1926 年 国民革命军出师北伐<br>1927 年 3 月 上海工人第三次武装起义胜利<br>1927 年 4 月 12 日 蒋介石发动“四一二”反革命政变<br>1927 年 7 月 15 日 汪精卫发动“七一五”反革命政变<br>1927 年 7 月 国民革命失败<br>1927 年 4 月 蒋介石在南京建立国民政府<br>1927 年 8 月 1 日 南昌起义<br>1927 年 8 月 7 日 八七会议<br>1927 年 8 月 湘赣边秋收起义<br>1927 年 8 月 秋收起义部队到达井冈山<br>1927 年底 广州起义<br>1928 年 4 月 井冈山会师<br>1928 年 张学良宣布东北易帜<br>1931 年 九一八事变<br>1931 年 中华苏维埃共和国临时中央政府成立<br>1932 年 一. 二八事变、十九陆军抗战<br>1932 年 伪满洲国成立<br>1934 年 10 月 中央红军开始长征<br>1935 年 1 月 遵义会议<br>1935 年 中共中央发表八一宣言<br>1935 年 10 月 红军第一方面军长征到达陕北<br>1935 年 一二 . 九运动<br>1936 年 10 月 红军第二、四方面军长征到达甘肃会宁等地，长征结束<br>1936 年 12 月 12 日 西安事变<br>1937 年 7 月 7 日 卢沟桥事变<br>1937 年 八一三事变<br>1937 年 9 月 凇沪会战<br>1937 年 平型关大捷<br>1937 年秋 中国共产党陕北洛川会议<br>1937 年 12 月 南京大屠杀<br>1938 年春 台儿庄战役<br>1938 年 毛泽东发表《论持久战》<br>1940 年 3 月 汪精卫伪国民政府在南京成立<br>1940 年 百团大战<br>1941 年 皖南事变<br>1942 年 中国共产党开始整风<br>1945 年 中国共产党第七次全国代表大会召开<br>1945 年 8 月 15 日 日本宣布投降<br>1945 年 中共和谈代表毛泽东等飞抵重庆，重庆谈判开始<br>1945 年 双十协定签字<br>1946 年 政治协商会议召开<br>1946 年 6 月 国民党发动全面内战，人民解放战争开始<br>1947 年 6 月 人民解放军开始全国规模的反攻<br>1948 年 9 月 辽沈战役开始<br>1948 年 11 月 淮海战役开始<br>1948 年 11 月 平津战役开始<br>1949 年春 中国共产党七届二中全会召开<br>1949 年 4 月 21 日 毛泽东、朱德发布向全国进军的命令<br>1949 年 4 月 23 日 人民解放军解放南京，国民政府覆亡<br>1949 年 9 月 中国人民政治协商会议第一次全体会议开展<br>1949 年 10 月 1 日 中华人民共和国成立<br>1950 年 10 月 中国人民志愿军赴朝作战<br>1950 年 中苏签定 &lt;&lt;中苏友好同盟互助条约 &gt;&gt;<br>1950 年 中央人民政府颁布 &lt;&lt;中华人民共和国土地改革法 &gt;&gt;<br>1951 年 西藏和平解放<br>1952 年 土地改革基本结束 , 彻底废除我国两千多年的封建剥削制度<br>1953 年 第一个五年计划开始实行<br>1953 年 朝鲜战争结束 , 抗美援朝胜利<br>1954 年 4 月至 7 月 日内瓦会议<br>1955 年 万隆会议<br>1954 年 9 月 第一届全国人民代表大会召开 ,&lt;&lt; 中华人民共和国宪法 &gt;&gt;颁布<br>1956 年 我国对生产资料私有制的社会主义改造基本完成 ( 三大改造完成 )<br>中国共产党第八次全国代表大会召开<br>中国第一个生产载重的工厂——长春第一汽车制造厂生产出第一辆汽车<br>中国第一个飞机制造厂试制成功第一架喷气式飞机<br>中国第一个制造机床的工厂——沈阳第一机床厂建成投产<br>1957 年 武汉长江大桥建成<br>1958 年 党中央提出 “鼓足干劲 , 力争上游 , 多快好省地建设社会主义 “ 的总路线<br>1961 年春 党和政府全面调整国民经济  , 恢复发展生产<br>1964 年 10 月 16 日 我国第一颗原子弹爆炸成功<br>1966 年  “ 文化大革命 “ 开始<br>1967 年 1 月 全国各地掀起夺取党政各级领导权 “ 一月风暴 “<br>1967 年 我国第一颗氢弹爆炸成功<br>1969 年 11 月 12 日 刘少奇逝世<br>1970 年 我国成功发射第一颗人造地球卫星 ——— 东方红 1 号<br>1971 年 粉碎林彪反革命集团<br>1971 年 10 月 25 日 我国在联合国合法席位得到恢复<br>1971 年 7 月 基辛格访华<br>1972 年 田中角荣访华 , 中日建交<br>1972 年  &lt;&lt; 中美联合公报 &gt;&gt;发表<br>1976 年 10 月 粉碎江青反革命集团 ,” 文化大革命 “ 结束<br>1978 年 中国共产党第十一届三中全会召开<br>1979 年 中美建交<br>1980 年 中共中央为刘少奇恢复名誉 , 我国在广东的深圳 , 珠海 , 汕头和福建的厦门建立经济特区<br>1980 年 8 月 12 日 刘少奇追悼会在首都人民大会堂召开<br>1982 年 颁布第四部 &lt;&lt;中华人民共和国宪法 &gt;&gt;<br>颁布 &lt;&lt;中华人民共和国民法通则 &gt;&gt;和&lt;&lt;中华人民共和国刑法 &gt;&gt;<br>1982 年底 大规模平反冤假错案工作基本结束<br>1990 年 中国首次成功举办亚洲运动会</p><h1 id="易班题库错题记录"><a href="#易班题库错题记录" class="headerlink" title="易班题库错题记录"></a>易班题库错题记录</h1><h2 id="第一二章"><a href="#第一二章" class="headerlink" title="第一二章"></a>第一二章</h2><p>——“三国干涉还辽”中的“三国”指的是：“俄、德、法”三国。<br>——控制中国海关时间最长的外国人是：赫德。<br>——资本一帝国主义列强在中国设立的最早的租界是在：上海。<br>——基督教在中国设立的最大出版机构广学会发行的报刊是：《万国公报》<br>——郑观应在《盛世危言》中提出大力发展民族工商业，同西方国家进行“商战”，设立议院，实行“君民共主”制度等主张<br>——外国教会在中国创办较早的外文期刊是：《中国丛报》<br>——认识中国近代一切社会问题和革命问题的最基本的依据是认识：中国近代社会半殖民地半封建的性质<br>——近代中国面临的两大历史任务是：争取民族独立、人民解放和实现国家繁荣富强、人民富裕<br>——太平天国后期担任军事指挥的青年将领：陈玉成﹑李秀成<br>——太平军破清军江北，江南大营表明太平天国在军事上达到全盛时期<br>——洋务派兴办洋务事业的指导思想是：中学为体，西学为用(中体西用)<br>——认为太平天国﹑捻军等农民起义是“心腹之害”的人的是：奕䜣<br>——19世纪60年代，清朝统治集团中倡导洋务的首领人物是：奕诉<br>——由李鸿章管辖的清政府海军主力是：北洋水师<br>——洋务派兴办的军用工业中，当时国内最大的兵工厂是：上海江南制造总局<br>——近代中国派遣第一批留学生是在：洋务运动时期<br>——张之洞发表的对抗维新变法、反复强调封建的纲常伦理不可变的代表作是：《劝学篇》<br>——谭嗣同在戊戌维新时期撰写的宣传变法维新主张的著作是：《仁学》<br>——戊戌维新时期，梁启超的主要著述是：《变法通议》<br>——在近代中国掀起第一次思想解放的潮流是：戊戌变法运动<br>——康有为创立的宣传维新思想的新式学堂是：万木草堂<br>——洋务运动期间经营洋务事业最多的是：李鸿章<br>——在清政府实行的“清末新政”中，科举制度被最终废除</p><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><p>——章炳麟发表了《驳康有为论革命书》，反对康有为的保皇观点。<br>——邹容写了《革命军》，号召推翻清朝封建专制统治，建立中华共和国。<br>——舆论阵地：革命派-《民报》、改良派-《新民丛报》<br>——资产阶级革命派在辛亥革命前发动了多次武装起义。其中影响最大的是1911年4月的：黄花岗起义<br>——发起武昌起义的两个革命团体：共进会、文学社。<br>——武昌起义的主要力量是：新军<br>——兴中会立誓：驱除鞑虏，恢复中国，创立合众政府。<br>——同盟会的政治纲领：驱除鞑虏，恢复中华，创立民国、平均地权。<br>——“民国元年”是指：1912年（南京国民政府成立）<br>——中国历史上第一部具有资产阶级共和国宪法性质的法典：《中华民国临时约法》<br>——1914年，孙中山在日本组织的政党是：中华革命党<br>——在云南组织“护国军”，发起护国运动的是：蔡锷<br>——1915年5月，袁世凯和日本签订了丧权辱国的：二十一条<br>——中国资产阶级领导的旧民主主义革命终结的标志：护法运动的失败</p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】作业中的一些琐碎知识</title>
      <link href="/2019/12/22/%E3%80%90C-%E3%80%91%E4%BD%9C%E4%B8%9A%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%90%E7%A2%8E%E7%9F%A5%E8%AF%86/"/>
      <url>/2019/12/22/%E3%80%90C-%E3%80%91%E4%BD%9C%E4%B8%9A%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%90%E7%A2%8E%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="函数：判断是否为素数"><a href="#函数：判断是否为素数" class="headerlink" title="函数：判断是否为素数"></a>函数：判断是否为素数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="built_in">sqrt</span>(num);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=s;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数：计算num的因子和"><a href="#函数：计算num的因子和" class="headerlink" title="函数：计算num的因子和"></a>函数：计算num的因子和</h3><p>因子概念：假如整数n除以m，结果是无余数的整数，那么我们称m就是n的因子。反过来说，我们称n为m的倍数</p><p>其中因子和为包括1但不包括n本身的所有因子之和</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fac_sum</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;num;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num%i==<span class="number">0</span>) ans+=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数：判断回文数的两种写法"><a href="#函数：判断回文数的两种写法" class="headerlink" title="函数：判断回文数的两种写法"></a>函数：判断回文数的两种写法</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将回文数看作整形数据（在这里010就是10,10不是回文数）</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_palindromic</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,copy=num;</span><br><span class="line"><span class="keyword">while</span>(copy)</span><br><span class="line">&#123;</span><br><span class="line">ans*=<span class="number">10</span>;</span><br><span class="line">ans+=copy%<span class="number">10</span>;</span><br><span class="line">copy/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans==num?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将回文数看作字符串（这样的话010也是回文数）</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_palindromic</span><span class="params">(<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">0</span>,r=s.length()<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[l++]==s[r--]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="过程设计：数组的去重复制"><a href="#过程设计：数组的去重复制" class="headerlink" title="过程设计：数组的去重复制"></a>过程设计：数组的去重复制</h3><p>将含有nx个元素的数组x中的数据复制到数组y中，重复的数据只存储一次，最后输出y中的数据。（两种思路）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思路一：比较笨的，挨个遍历查重</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x[<span class="number">50</span>],y[<span class="number">50</span>],ny=<span class="number">0</span>,nx;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; nx;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nx;i++) <span class="built_in">cin</span> &gt;&gt; x[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nx;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;ny;j++) <span class="keyword">if</span>(x[i]==y[j]) flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(flag) y[ny++]=x[i];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ny;i++) <span class="built_in">cout</span> &lt;&lt; y[i]&lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//思路二：用桶来存储数据的存在性，效率高，但是范围比较小。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXSIZE = <span class="number">300000</span>;</span><br><span class="line"><span class="keyword">int</span> x[<span class="number">50</span>],y[<span class="number">50</span>],ny=<span class="number">0</span>,nx;</span><br><span class="line"><span class="keyword">bool</span> flag[MAXSIZE] = &#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; nx;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nx;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; x[i];</span><br><span class="line">flag[x[i]]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nx;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(flag[x[i]]==<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">y[ny++] = x[i];</span><br><span class="line">flag[x[i]]=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ny;i++) <span class="built_in">cout</span> &lt;&lt; y[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数：利用二维的指针遍历二维数组"><a href="#函数：利用二维的指针遍历二维数组" class="headerlink" title="函数：利用二维的指针遍历二维数组"></a>函数：利用二维的指针遍历二维数组</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">int</span> (*p)[<span class="number">4</span>],<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;,&#123;<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;&#125;;</span><br><span class="line">fun2(a,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验课结课考试题解</title>
      <link href="/2019/12/21/C-%E5%AE%9E%E9%AA%8C%E7%BB%93%E8%AF%BE%E8%80%83%E8%AF%95/"/>
      <url>/2019/12/21/C-%E5%AE%9E%E9%AA%8C%E7%BB%93%E8%AF%BE%E8%80%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>只记得一道面向过程的题，面向对象的那个忘了。</p></blockquote><a id="more"></a><p>【题目大概描述】输入一串非数字的字符串，将其“解压”。比如说”3a”解压后为”aaa”,”4d”解压后为”dddd”，如果是一串数字后面加一个空格，比如”2 “，那么就输出两个空格。</p><p>【样例输入】</p><p>abcd3e4 se11z</p><p>【样例输出】</p><p>abcdeee　　　　sezzzzzzzzzzz</p><p>【样例输出说明】</p><p>中间的空格字符有４个</p><p>【可能的题解】</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//判断字符c是否为数字 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_num</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将字符c打印num遍 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">char</span> c,<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++) <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">501</span>];</span><br><span class="line"><span class="built_in">cin</span>.getline(s,<span class="number">501</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i]!=<span class="string">'\0'</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_num(s[i]))<span class="comment">//如果遇到数字，就将数字保存到temp内 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;is_num(s[i]);i++)</span><br><span class="line">&#123;</span><br><span class="line">temp*=<span class="number">10</span>;<span class="comment">//将temp乘10，留出个位数来存数 </span></span><br><span class="line">temp+=s[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line">print(s[i],temp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【MOOC】易错题汇总</title>
      <link href="/2019/12/19/%E3%80%90mooc%E3%80%91%E6%98%93%E9%94%99%E9%A2%98%E6%B1%87%E6%80%BB/"/>
      <url>/2019/12/19/%E3%80%90mooc%E3%80%91%E6%98%93%E9%94%99%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>还有哪些错题，欢迎在评论区补充，或者QQ私我。</p></blockquote><a id="more"></a><h1 id="派生类构造函数的成员初始化列表中，不能包含的初始化项是（）。"><a href="#派生类构造函数的成员初始化列表中，不能包含的初始化项是（）。" class="headerlink" title="派生类构造函数的成员初始化列表中，不能包含的初始化项是（）。"></a>派生类构造函数的成员初始化列表中，不能包含的初始化项是（）。</h1><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217103144.png" alt=""></p><blockquote><p>这里所说的“基类的子对象”即基类的数据成员</p></blockquote><p>在C＋＋中，<strong>构造函数不能被继承</strong>，因此，派生类的构造函数必须通过调用基类的构造函数来初始化基类子对象。<br>在派生类初始化列表直接初始化基类的成员，被称为“<strong>越级初始化</strong>”，是会报错的。</p><p>举个栗子：<br>我们先创建一个基类，里面有一个int型子对象</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">//基类的子对象</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">A();</span><br><span class="line">A(<span class="keyword">int</span> temp):n(temp)&#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>然后创建一个派生类，并用派生类构造函数的初始化列表来进行“越级初始化”</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">public</span> A&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">B(<span class="keyword">int</span> temp):n(temp)&#123;&#125;<span class="comment">//对基类子对象n进行初始化</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在主函数中调用</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">B(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果报错：[Error] class ‘B’ does not have any field named ‘n’</p><p>所以越级初始化是不可以的，但是可以“越级赋值”（自造名词哈哈）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">public</span> A&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">///B(int temp):n(temp)&#123;&#125;</span></span><br><span class="line"><span class="comment">///改为</span></span><br><span class="line">B(<span class="keyword">int</span> temp)&#123;n=temp&#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这样就可以完美运行了。</p><p><strong>因此，派生类的构造函数必须通过调用基类的构造函数初始化基类成员，不能够在派生类初始化列表直接初始化基类的成员</strong></p><h1 id="类模板与模板类的区别"><a href="#类模板与模板类的区别" class="headerlink" title="类模板与模板类的区别"></a>类模板与模板类的区别</h1><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219095637.png" alt=""></p><p>回顾一下基本概念</p><p>——<strong>类模板</strong>是指：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line">...........</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>——<strong>类模板实例化</strong>:从通用的类模板定义中生成类的过程称为模板实例化，如：<br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219100943.png" alt=""><br>所以说题目中D选项就是错误的，类模板实例化出来的是类的实例，而不是对象。</p><p>——<strong>模板类</strong>是啥？？ 参考一下《C++ Primer Plus》解释：</p><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/asdasdasx.png" alt=""></p><p>也就是说：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stack&lt;<span class="keyword">int</span>&gt; obj;</span><br><span class="line"><span class="comment">//Stack&lt;int&gt;是模板类</span></span><br><span class="line"><span class="comment">//而obj是由这个模板类所声明的一个对象</span></span><br></pre></td></tr></table></figure><p>所以说A.C选项是错误的，产生的模板类应该是tanytemp&lt;int&gt;</p><p>我认为此答案可能错误，欢迎在评论区批评指正！</p><h1 id="关于this指针的描述"><a href="#关于this指针的描述" class="headerlink" title="关于this指针的描述"></a>关于this指针的描述</h1><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219101637.png" alt=""><br><del>这个题看走眼了啊啊啊啊啊啊啊</del></p><p>——C选项：形参(obj)到实参(this)的拷贝过程中才创建this指针(实参)，由系统自动生成</p><p>——D选项：this指针的显示使用：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        A(<span class="keyword">int</span> num=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;num = num;<span class="comment">//显示使用了this指针</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚刚在敲上述代码的时候发现了一个问题，如果构造函数这样写：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A(<span class="keyword">int</span> num=<span class="number">0</span>):<span class="keyword">this</span>-&gt;num(num)&#123;&#125;</span><br></pre></td></tr></table></figure><p>就会爆出两个错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Error] expected &#39;&#123;&#39; before &#39;this&#39;</span><br><span class="line">[Error] expected identifier before &#39;this&#39;</span><br></pre></td></tr></table></figure><p>产生了一个新的问题，“能不能在构造函数的初始化列表使用this指针？”</p><p>带着疑问，搜了一下<a href="https://blog.csdn.net/wangningyu/article/details/4594297" target="_blank" rel="noopener">网上的解释</a>：</p><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219103633.png" alt=""><br>但是通过刚刚的例子，可以明显的看出，<strong>在构造函数的初始化列表中是不能用this指针的</strong>。具体原因，等以后重新翻看文档寻找答案（貌似涉及到底层的东西？）</p><h1 id="类在什么时候产生对象？"><a href="#类在什么时候产生对象？" class="headerlink" title="类在什么时候产生对象？"></a>类在什么时候产生对象？</h1><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219104247.png" alt=""></p><p>产生对象的几种情况：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">example <span class="title">x</span><span class="params">(<span class="number">5</span>)</span></span>;<span class="comment">//类名 对象名;</span></span><br><span class="line">example arr[<span class="number">2</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>&#125;;<span class="comment">//数组的方式，产生两个</span></span><br><span class="line">x=example(<span class="number">15</span>);<span class="comment">//用example(15)生成一个临时对象，再将对象赋给同类对象x</span></span><br></pre></td></tr></table></figure><p>不禁让我想起了另一个题</p><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219105035.png" alt=""></p><p>这里只是定义了三个PAT型的指针，并没有产生任何对象，调用构造函数也就无从谈起了。</p>]]></content>
      
      
      <categories>
          
          <category> 踩过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】期末考备忘录</title>
      <link href="/2019/12/18/%E3%80%90C-%E3%80%91%E6%9C%9F%E6%9C%AB%E8%80%83%E5%A4%87%E5%BF%98%E5%BD%95/"/>
      <url>/2019/12/18/%E3%80%90C-%E3%80%91%E6%9C%9F%E6%9C%AB%E8%80%83%E5%A4%87%E5%BF%98%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有什么补充或质疑欢迎在评论区指出来。 </p></blockquote><a id="more"></a><h1 id="类-I"><a href="#类-I" class="headerlink" title="类 I"></a>类 I</h1><p>——若在类体内没有指明访问权限，默认的访问权限为private。<br>——类是一种数据类型，系统并不会为其分配内存空间。<br>——构造函数重载：同名不同参<br>——带有子对象的构造函数的执行顺序：<a href="https://blog.csdn.net/qq_15989473/article/details/103215333" target="_blank" rel="noopener">https://blog.csdn.net/qq_15989473/article/details/103215333</a></p><h2 id="拷贝构造函数"><a href="#拷贝构造函数" class="headerlink" title="拷贝构造函数"></a>拷贝构造函数</h2><p>——拷贝构造函数的定义</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sample(Sample &amp;S)</span><br><span class="line"><span class="comment">//名称与类名相同，形参为本类的引用对象。</span></span><br></pre></td></tr></table></figure><p>——拷贝构造函数的三种调用情况：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1&amp;2.同类对象的初始化</span></span><br><span class="line"><span class="function">Sample <span class="title">S2</span><span class="params">(S1)</span></span>;</span><br><span class="line">Sample S2 = S1;</span><br><span class="line"><span class="comment">// 3.对象作为函数的参数进行传递</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(A a)</span></span>&#123;a.x = <span class="number">1</span>;&#125;;</span><br><span class="line">A obj; f(obj);<span class="comment">//相当于A a = obj;</span></span><br><span class="line"><span class="comment">// × 赋值不是初始化，未调用拷贝构造函数</span></span><br><span class="line">S2 = S1;</span><br></pre></td></tr></table></figure><h2 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h2><p>——析构函数不能重载</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~A();  <span class="comment">//析构函数声明</span></span><br><span class="line">A::~A()&#123;&#125;  <span class="comment">//析构函数定义</span></span><br></pre></td></tr></table></figure><p>——析构函数和构造函数的调用顺序相反</p><h2 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h2><p>——静态数据成员只能在类体内声明，类体外初始化（假如有一个类Sample）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> num; <span class="comment">//类体内声明，需要static关键词</span></span><br><span class="line"><span class="keyword">int</span> Sample::num = <span class="number">1</span>; <span class="comment">//类体外初始化，不需要static关键词</span></span><br></pre></td></tr></table></figure><p>——静态成员的访问有两种方式：类名::函数名(); 或者 对象名.函数名()；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sample::function();</span><br><span class="line">obj.function();</span><br></pre></td></tr></table></figure><blockquote><p>推荐用第一种，因为指明了静态成员是属于整个类的。</p></blockquote><p>——非静态成员函数可以任意访问静态和非静态成员 ，静态成员函数只能访问静态成员(数据成员或成员函数)</p><h1 id="类-II"><a href="#类-II" class="headerlink" title="类 II"></a>类 II</h1><p>——系统给对象分配的内存只是用来存储数据成员的。成员函数的代码统一放在程序的代码区</p><h2 id="this指针"><a href="#this指针" class="headerlink" title="this指针"></a>this指针</h2><p>——this指针是指向本类对象的指针。<br>——this指针是在用对象引用成员函数时系统自动创建的。<br>——this指针是被隐式定义在非静态成员函数的形参中。<br>——类的静态成员函数没有this指针。因为静态成员函数为类的所有对象所共有，不专属于某一个对象。所以在静态成员函数中不能直接访问非静态数据成员（因为没有this指针）</p><h2 id="各种“常”"><a href="#各种“常”" class="headerlink" title="各种“常”"></a>各种“常”</h2><p>——常数据成员的初始化必须要用构造函数的初始化列表完成。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sample(<span class="keyword">int</span> temp)&#123;const_num = temp;&#125; <span class="comment">// ×</span></span><br><span class="line">Sample(<span class="keyword">int</span> temp):const_num(temp)&#123;&#125; <span class="comment">// √</span></span><br></pre></td></tr></table></figure><h3 id="常成员函数"><a href="#常成员函数" class="headerlink" title="常成员函数"></a>常成员函数</h3><p>——只能调用const成员函数。<br>——可以使用const与非const数据成员，但不能修改。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">function</span><span class="params">()</span> <span class="keyword">const</span></span>; <span class="comment">//声明</span></span><br><span class="line"><span class="keyword">int</span> Sample::function() <span class="keyword">const</span> <span class="comment">//类体外的定义</span></span><br><span class="line">&#123;</span><br><span class="line">num = <span class="number">0</span>; <span class="comment">//错误，不可修改数据成员。</span></span><br><span class="line">unconst_function();<span class="comment">//错误，不可调用非const成员函数</span></span><br><span class="line">const_function();<span class="comment">//只能调用const成员函数</span></span><br><span class="line"><span class="keyword">return</span> num;<span class="comment">//正确，可以使用数据成员（const非const都可）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常对象"><a href="#常对象" class="headerlink" title="常对象"></a>常对象</h3><p>——常对象是指对象的数据成员的值在对象被调用时不能被改变。常对象必须进行初始化，且不能被更新。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义格式（必须进行初始化）</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> Sample <span class="title">obj1</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line"><span class="function">Sample <span class="keyword">const</span> <span class="title">obj2</span><span class="params">(<span class="number">0</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line">obj1.unconst_set(<span class="number">2</span>,<span class="number">2</span>);<span class="comment">//错误，常对象不能调用非const成员函数</span></span><br><span class="line">obj1.const_print();<span class="comment">//只能调用const成员函数</span></span><br></pre></td></tr></table></figure><h3 id="指向对象的常指针"><a href="#指向对象的常指针" class="headerlink" title="指向对象的常指针"></a>指向对象的常指针</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指向对象的常指针</span></span><br><span class="line">Sample *<span class="keyword">const</span> pr = &amp;obj1;</span><br><span class="line"><span class="comment">//pr只能指向对象obj1</span></span><br><span class="line">pr = &amp;obj2;<span class="comment">//错误,指针值不可改变</span></span><br><span class="line"><span class="comment">//但是可以改变对象obj的值,如:</span></span><br><span class="line">pr-&gt;function(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h3 id="指向常对象的指针变量-指针值可以改变"><a href="#指向常对象的指针变量-指针值可以改变" class="headerlink" title="指向常对象的指针变量(指针值可以改变)"></a>指向常对象的指针变量(指针值可以改变)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指向常对象的指针变量</span></span><br><span class="line"><span class="keyword">const</span> Sample *pr = &amp;obj1;</span><br><span class="line"><span class="comment">//不能通过pr去修改obj1的空间</span></span><br></pre></td></tr></table></figure><blockquote><p>注意与常指针相区分</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><table><thead><tr><th>各种“常”</th><th>含义</th><th>成员函数</th><th>数据成员</th></tr></thead><tbody><tr><td>void Sample::function() const</td><td>function为<strong>常成员函数</strong></td><td>只能调用const成员函数</td><td>常变量都可以使用(包括private)，但不能改变其值</td></tr><tr><td>const Sample&amp; s=obj;</td><td>s是<strong>常引用</strong>，可以认为把对象obj的属性变成了const</td><td>与常对象权限相同</td><td>与常对象权限相同</td></tr><tr><td>const Sample *pr</td><td>pr是指向<strong>常对象的指针</strong></td><td>与常对象权限相同</td><td>与常对象权限相同</td></tr><tr><td>Sample const obj</td><td>obj为<strong>常对象</strong></td><td>只能调用const成员函数</td><td>常&amp;变量都可以使用(前提public)，但不能改变其值</td></tr><tr><td>Sample *const pr=&obj;</td><td>pr为<strong>常指针</strong>(指针值不可以改变)</td><td>const &amp; 非const 都可调用，形式:pr-&gt;function();</td><td>const &amp; 非const 都可调用，形式:pr-&gt;number;</td></tr></tbody></table><h2 id="友元"><a href="#友元" class="headerlink" title="友元"></a>友元</h2><h2 id="友元函数"><a href="#友元函数" class="headerlink" title="友元函数"></a>友元函数</h2><p>（此处源代码来自菜鸟教程 <a href="https://www.runoob.com/cplusplus/cpp-friend-functions.html" target="_blank" rel="noopener">原链接</a>）<br>——友元函数并不是成员函数，但有权访问私有、保护和公有成员（所有成员）。<br>——友元函数在类内声明，在类外定义<br>——友元函数不能直接访问类的成员，只能访问对象成员。<br>——调用友元函数时，在实际参数中需要指出要访问的对象。如下述printWidth函数中的形参Box box<br>——类与类之间的友元关系不能继承。（也就是说基类的友元函数继承不到派生类中）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Box</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">double</span> width;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">   <span class="keyword">double</span> length;</span><br><span class="line">   <span class="comment">//在类内用friend关键词声明友元函数。</span></span><br><span class="line">   <span class="comment">//此处只能声明，不能定义，因为Box类还未定义。</span></span><br><span class="line">   <span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">printWidth</span><span class="params">( Box box )</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">setWidth</span><span class="params">( <span class="keyword">double</span> wid )</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//在类外像定义普通函数一样定义友元函数</span></span><br><span class="line"><span class="comment">//不需要使用 类名:: 作用域符号（只有成员函数采用作用域符号）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printWidth</span><span class="params">( Box box )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="comment">/* 因为 printWidth() 是 Box 的友元，它可以直接访问该类的任何成员 */</span></span><br><span class="line">   <span class="built_in">cout</span> &lt;&lt; <span class="string">"Width of box : "</span> &lt;&lt; box.width &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Box b;</span><br><span class="line"><span class="comment">// 使用成员函数设置宽度</span></span><br><span class="line">b.setWidth(<span class="number">10.0</span>);</span><br><span class="line"><span class="comment">// 使用友元函数输出宽度</span></span><br><span class="line"><span class="comment">// 可以直接调用友元函数，不需要借助对象。</span></span><br><span class="line">printWidth(b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>——<strong>特别注意</strong>下面这种写法是错误的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b.printWidth(b); <span class="comment">//错误</span></span><br></pre></td></tr></table></figure><p>因为友元函数不属于类对象b的成员函数。</p><h3 id="友元类"><a href="#友元类" class="headerlink" title="友元类"></a>友元类</h3><p>——如果A 是 B的友元类 -&gt; A的成员函数可以访问 B的私有成员<br>——友元类之间的关系不能传递，不能继承(<a href="https://www.jianshu.com/p/d714b795d54a" target="_blank" rel="noopener">此处来源</a>)如：<br>B 是 A 的友元，C 是 B 的友元，C 不是 A 的友元。<br>A 是 B 的友元，不代表 B 是 A 的友元。</p><h2 id="类模板"><a href="#类模板" class="headerlink" title="类模板"></a>类模板</h2><p>——类模板，可以定义相同的操作，拥有不同数据类型的成员属性。<br>——通常使用template来声明。告诉编译器，碰到T不要报错，表示一种<strong>泛型</strong>.</p><p>如下，一个普通的类模板：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">T x,y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">A(T xx,T yy)</span><br><span class="line">&#123;x=xx;y=yy;&#125;</span><br><span class="line"><span class="comment">//在类内定义的函数 </span></span><br><span class="line"><span class="function">T <span class="title">fun_in</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">return</span> (x+y);&#125;</span><br><span class="line"><span class="comment">//在类内声明，在类外定义的函数 </span></span><br><span class="line"><span class="function">T <span class="title">fun_out</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//fun_out函数在类外定义的格式 </span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">T</span> <span class="title">A</span>&lt;T&gt;:</span>:fun_out()</span><br><span class="line">&#123;<span class="keyword">return</span> (x+y);&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">A&lt;<span class="keyword">int</span>&gt; int_obj(<span class="number">6</span>,<span class="number">8</span>);</span><br><span class="line">int_obj.fun_in(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>——<strong>模板的实例化</strong>指函数模板（类模板）生成模板函数（模板类）的过程。对于函数模板而言，模板实例化之后，会生成一个真正的函数。而类模板经过实例化之后，只是完成了类的定义，模板类的成员函数需要到调用时才会被初始化。模板的实例化分为隐式实例化和显示实例化。（<a href="https://blog.csdn.net/K346K346/article/details/49490185" target="_blank" rel="noopener">原文出处</a>）</p><p>——<a href="https://blog.csdn.net/qq_30835655/article/details/76850894" target="_blank" rel="noopener">隐式实例化和显式实例化和显式具体化统称为具体化</a></p><p>——类模板的参数也可以是非类型参数，普通值也可以作为模板参数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>,<span class="title">int</span> <span class="title">NUM</span>&gt;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">Sample</span>&#123;</span></span><br><span class="line">........</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;Sample&lt;<span class="keyword">int</span>,<span class="number">20</span>&gt; obj;&#125;</span><br></pre></td></tr></table></figure><h1 id="继承与派生"><a href="#继承与派生" class="headerlink" title="继承与派生"></a>继承与派生</h1><h2 id="三种继承方式的特点图解"><a href="#三种继承方式的特点图解" class="headerlink" title="三种继承方式的特点图解"></a>三种继承方式的特点图解</h2><h3 id="公有继承"><a href="#公有继承" class="headerlink" title="公有继承"></a>公有继承</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219151249.png" alt=""></p><h3 id="私有继承"><a href="#私有继承" class="headerlink" title="私有继承"></a>私有继承</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219151335.png" alt=""></p><h3 id="保护继承"><a href="#保护继承" class="headerlink" title="保护继承"></a>保护继承</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219151408.png" alt=""></p><h2 id="不同位置的访问权限"><a href="#不同位置的访问权限" class="headerlink" title="不同位置的访问权限"></a>不同位置的访问权限</h2><table><thead><tr><th>派生类成员</th><th>派生类中</th><th>派生类外部</th><th>下层派生类</th></tr></thead><tbody><tr><td>公用成员</td><td>可以</td><td>可以</td><td>可以</td></tr><tr><td>保护成员</td><td>可以</td><td>不可以</td><td>可以</td></tr><tr><td>私有成员</td><td>可以</td><td>不可以</td><td>不可以</td></tr><tr><td>不可访问成员</td><td>不可以</td><td>不可以</td><td>不可以</td></tr></tbody></table><h2 id="直接间接-基类或派生类"><a href="#直接间接-基类或派生类" class="headerlink" title="直接间接 基类或派生类"></a>直接间接 基类或派生类</h2><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219151142.png" alt=""></p><h2 id="构造函数与析构函数的调用顺序"><a href="#构造函数与析构函数的调用顺序" class="headerlink" title="构造函数与析构函数的调用顺序"></a>构造函数与析构函数的调用顺序</h2><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p><a href="https://cnatom.github.io/2019/11/23/%E3%80%90C-%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F%E3%80%91%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/">传送门：构造函数的调用顺序</a></p><h3 id="析构函数-1"><a href="#析构函数-1" class="headerlink" title="析构函数"></a>析构函数</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219144321.png" alt=""></p><blockquote><p>析构函数与构造函数的调用顺序刚好相反</p></blockquote><h2 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219143550.png" alt=""></p><h3 id="声明方法"><a href="#声明方法" class="headerlink" title="声明方法"></a>声明方法</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219144815.png" alt=""></p><h2 id="有关二义性"><a href="#有关二义性" class="headerlink" title="有关二义性"></a>有关二义性</h2><h3 id="二义性的两种情况"><a href="#二义性的两种情况" class="headerlink" title="二义性的两种情况"></a>二义性的两种情况</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219144948.png" alt=""></p><h3 id="消除二义性的两种方法"><a href="#消除二义性的两种方法" class="headerlink" title="消除二义性的两种方法"></a>消除二义性的两种方法</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191219145410.png" alt=""></p><h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>——我们先定义两个基类A与B，里面包含最简单的公有成员show：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"基类A的show"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"基类B的show"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>——然后再用一个类C继承A与B：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">public</span> A,<span class="keyword">public</span> B&#123;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>——在主函数中调用公有成员show</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C c;</span><br><span class="line">c.show();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>——结果意料之中的报错了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Error] request for member &#39;show&#39; is ambiguous</span><br></pre></td></tr></table></figure><p>——<strong>因为编译器不知道c.show()中的show到底是A的show还是B的show</strong></p><h4 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h4><p>√——<strong>用相应的类名来标识（消除二义性的方法一）</strong>，在主函数中修改：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C c;</span><br><span class="line">c.B::show();<span class="comment">//添加B::表示调用B中的show</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h4><p>√——<strong>由派生类提供统一的接口</strong></p><p>——那么我们重新定义一下C中的show成员函数，<strong>在派生类成员函数中用类名标识符调用基类同名成员函数</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">public</span> A,<span class="keyword">public</span> B&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">A::show();<span class="comment">//用类名标识来实现调用A的show函数。</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"与"</span>;</span><br><span class="line">B::show();</span><br><span class="line">&#125; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>——这样的话就可以在主函数中直接用c.show()来实现用派生类的show函数间接调用A和B的show函数了：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C c;</span><br><span class="line">c.show();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决方案3"><a href="#解决方案3" class="headerlink" title="解决方案3"></a>解决方案3</h4><p>√——<strong>利用同名隐藏</strong></p><blockquote><p>同名隐藏：当基类与派生类有同名成员时，派生类的成员会将基类成员屏蔽。<br>如果在定义派生类对象的模块中通过对象名访问同名的成员，则访问的是派生类的成员。</p></blockquote><p>这里我们可以在派生类C中重载show成员函数，那么调用c.show()的时候就会优先用派生类的show函数，基类的show被屏蔽掉了。</p><p>比如给C添加一个同名成员show：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span><span class="keyword">public</span> A,<span class="keyword">public</span> B&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"派生类C的show"</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这样的话就可以在主函数中直接调用，而不需要 类名:: </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">C c;</span><br><span class="line">c.show();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="虚基类"><a href="#虚基类" class="headerlink" title="虚基类"></a>虚基类</h2><h3 id="提出一个问题"><a href="#提出一个问题" class="headerlink" title="提出一个问题"></a>提出一个问题</h3><p>——假设我们有这样组成结构的几个类：<br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191222121710.png" alt=""></p><p>——具体实现：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span><span class="keyword">public</span> C&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> num1;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">public</span> C&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> num2;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">N</span>:</span><span class="keyword">public</span> A,<span class="keyword">public</span> B&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> num3;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>——分析：这里C类被A类与B类继承，在A类与B类中分别有两个“不同”的数据成员num(来自C类)。也就是说，<strong>C类中的num变成了两份，一份在A中，一份在B中。</strong></p><p>——验证一下分析：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">N n;</span><br><span class="line">n.A::num = <span class="number">1</span>;</span><br><span class="line">n.B::num = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; n.A::num &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; n.B::num;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">================输出结果===================</span><br><span class="line"><span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>——问题：但是num是C类里面的，他不应该有两份，这该怎么解决呢？</p><h3 id="权宜之计"><a href="#权宜之计" class="headerlink" title="权宜之计"></a>权宜之计</h3><p>——使用虚继承的方式=&gt;虚基类</p><p>——只需要让A和B虚继承C类，这样的话C就会只保留一份，比如我们改写一下A与B：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注意虚继承的格式：virtual 继承方式 基类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> C&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> num1;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">virtual</span> <span class="keyword">public</span> C&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">int</span> num2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>——再在主函数中验证一下，A中的num与B中的num是否为同一份：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">N n;</span><br><span class="line">n.A::num = <span class="number">1</span>;<span class="comment">//我们先改写了A中的num</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; n.B::num;<span class="comment">//看看B中的num是不是与A中的是同一个。</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">=============输出结果===============</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>——可以看出，我们改变了A中的num，B中的num也改变了，说明C在继承过程中只保留了一份</p><p>——同时，因为A与B中的num是同一份，我们还可以用对象名加点的方式直接访问,而不会产生二义性。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">N n;</span><br><span class="line">n.A::num = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; n.num;<span class="comment">//直接访问</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="虚继承的问题"><a href="#虚继承的问题" class="headerlink" title="虚继承的问题"></a>虚继承的问题</h3><p>——虚继承的构造函数是很麻烦的。</p><p>——清华大学郑莉老师的解释，传送门(自行跳转8:50)：<a href="https://www.bilibili.com/video/av41347930?p=32" target="_blank" rel="noopener">https://www.bilibili.com/video/av41347930?p=32</a></p><h1 id="多态性"><a href="#多态性" class="headerlink" title="多态性"></a>多态性</h1><h2 id="多态性概述"><a href="#多态性概述" class="headerlink" title="多态性概述"></a>多态性概述</h2><p>——多态是指操作系统接口具有表现多种形态的能力，即能根据操作环境的不同采取不同的处理方式。多态性是面向对象系统的主要特征之一，在这样的系统中，一组具有相同基本语义的方法能在同一接口下为不同的对象服务。</p><p>——多态的类型：重载多态、强制多态、包含多态、参数多态。<br>——多态的种类：C++语言支持的多态性可以按其实现时机分为<strong>编译时多态</strong>和<strong>运行时多态</strong>两类。<br>——绑定：是指把一个标识符名和一个存储地址联系在一起的过程。<br>——编译时的多态：绑定工作在编译连接阶段完成的情况称为<strong>静态绑定</strong>。<br>——运行时的多态：绑定工作在程序运行阶段完成的情况称为<strong>动态绑定</strong>。</p><h2 id="运算符的重载"><a href="#运算符的重载" class="headerlink" title="运算符的重载"></a>运算符的重载</h2><h3 id="复数类为例"><a href="#复数类为例" class="headerlink" title="复数类为例"></a>复数类为例</h3><blockquote><p>说明都在注释中给出</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Complex(<span class="keyword">int</span> aa=<span class="number">0</span>,<span class="keyword">int</span> bb=<span class="number">0</span>):a(aa),b(bb)&#123;&#125;<span class="comment">//构造函数 </span></span><br><span class="line">Complex <span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;obj) <span class="keyword">const</span>;<span class="comment">//重载+运算符</span></span><br><span class="line">Complex&amp; <span class="keyword">operator</span>++();<span class="comment">//前置++运算符 ++obj</span></span><br><span class="line">Complex <span class="keyword">operator</span>++(<span class="keyword">int</span>);<span class="comment">//后置++运算符 obj++</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">"+"</span> &lt;&lt; b &lt;&lt; <span class="string">"i"</span>;&#125;<span class="comment">//显示</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//+运算符重载的定义（重载为成员函数）</span></span><br><span class="line"><span class="comment">//obj1 + obj2</span></span><br><span class="line"><span class="comment">//相当于obj1.operator+(obj2);</span></span><br><span class="line">Complex Complex::<span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;obj) <span class="keyword">const</span>&#123;</span><br><span class="line">    <span class="comment">//使用Complex()构造函数创建一个临时对象</span></span><br><span class="line"><span class="keyword">return</span> Complex(a+obj.a,b+obj.b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//前置++运算符重载的定义</span></span><br><span class="line"><span class="comment">//这里返回引用,是因为++obj，使用的是自增后对象的本身</span></span><br><span class="line"><span class="comment">//++obj相当于obj.operator++();</span></span><br><span class="line">Complex&amp; Complex::<span class="keyword">operator</span>++()&#123;</span><br><span class="line">a++;b++;<span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置++运算符重载的定义</span></span><br><span class="line"><span class="comment">//这里返回临时对象，这个临时对象保存的是自增之前的对象。</span></span><br><span class="line"><span class="comment">//obj++相当于obj.operator(0);</span></span><br><span class="line"><span class="comment">//自动传一个0进去，只是为了跟前置区分而已。</span></span><br><span class="line">Complex Complex::<span class="keyword">operator</span>++(<span class="keyword">int</span>)&#123;</span><br><span class="line"><span class="function">Complex <span class="title">old</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line">++(*<span class="keyword">this</span>);<span class="comment">//这里调用已经写好的前置运算符</span></span><br><span class="line"><span class="keyword">return</span> old;<span class="comment">//返回自增前的对象。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最好重载为友元"><a href="#最好重载为友元" class="headerlink" title="最好重载为友元"></a>最好重载为友元</h3><p>比如：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//+运算符重载的定义（重载为成员函数）</span></span><br><span class="line"><span class="comment">//obj1 + obj2</span></span><br><span class="line"><span class="comment">//相当于obj1.operator+(obj2);</span></span><br><span class="line">Complex Complex::<span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;obj) <span class="keyword">const</span>&#123;</span><br><span class="line">    <span class="comment">//使用Complex()构造函数创建一个临时对象</span></span><br><span class="line"><span class="keyword">return</span> Complex(a+obj.a,b+obj.b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的obj1+obj2相当于obj1.operator(obj2);<br>也就是说<strong>第一个操作数必须为这个类的对象</strong><br>因此，如果我用10+obj，显然是不行的。<br>为了解决这个问题，我们要把运算符重载为友元函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Complex(<span class="keyword">int</span> aa=<span class="number">0</span>,<span class="keyword">int</span> bb=<span class="number">0</span>):a(aa),b(bb)&#123;&#125;<span class="comment">//构造函数不变</span></span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;obj1,<span class="keyword">const</span> Complex &amp;obj2);<span class="comment">//+运算符重载</span></span><br><span class="line"><span class="keyword">friend</span> Complex&amp; <span class="keyword">operator</span>++(Complex &amp;obj);<span class="comment">//前置++运算符重载</span></span><br><span class="line"><span class="keyword">friend</span> Complex <span class="keyword">operator</span>++(Complex &amp;obj,<span class="keyword">int</span>);<span class="comment">//后置++运算符重载</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;<span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">"+"</span> &lt;&lt; b &lt;&lt; <span class="string">"i"</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//这里将const限定符去掉了</span></span><br><span class="line"><span class="comment">//因为非成员函数不能用CV限定（在C++中CV限定符指const和volatile）</span></span><br><span class="line"><span class="comment">//否则会报错：cannot have cv-qualifier</span></span><br><span class="line"><span class="comment">//同时Complex::也去掉了，因为友元函数是非成员函数</span></span><br><span class="line">Complex <span class="keyword">operator</span>+(<span class="keyword">const</span> Complex &amp;obj1,<span class="keyword">const</span> Complex &amp;obj2)&#123;</span><br><span class="line"><span class="keyword">return</span> Complex(obj1.a+obj2.a,obj1.b+obj2.b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//前置++运算符的重载</span></span><br><span class="line"><span class="comment">//++obj</span></span><br><span class="line">Complex&amp; <span class="keyword">operator</span>++(Complex &amp;obj)&#123;</span><br><span class="line">obj.a++;obj.b++;<span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后置++运算符的重载</span></span><br><span class="line"><span class="comment">//obj++</span></span><br><span class="line"><span class="comment">//要用int来与前置区分</span></span><br><span class="line">Complex <span class="keyword">operator</span>++(Complex &amp;obj,<span class="keyword">int</span>)&#123;</span><br><span class="line"><span class="function">Complex <span class="title">old</span><span class="params">(obj)</span></span>;</span><br><span class="line">++(obj);</span><br><span class="line"><span class="keyword">return</span> old;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用cout的方式输出复数"><a href="#用cout的方式输出复数" class="headerlink" title="用cout的方式输出复数"></a>用cout的方式输出复数</h3><p>普通的数甚至字符串都可以用cout直接输出，那么我们自己定义的类呢？当然可以！<br>先说明一下，通过查阅文档可知</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; b;</span><br></pre></td></tr></table></figure><p>相当于：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">operator</span>&lt;&lt;(<span class="keyword">operator</span>&lt;&lt;(<span class="built_in">cout</span>,a),b);</span><br></pre></td></tr></table></figure><p>那么我们就可以自己重载一个了。<br>方法如下<br>在Complex类的public内声明一个友元函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里返回引用是为了下一次嵌套调用。</span></span><br><span class="line"><span class="comment">//比如operator&lt;&lt;(operator&lt;&lt;(cout,a),b);</span></span><br><span class="line"><span class="comment">//调用里层之后返回一个cout</span></span><br><span class="line"><span class="comment">//变成了operator&lt;&lt;(cout,b);</span></span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream &amp;out,Complex &amp;obj);</span><br></pre></td></tr></table></figure><p>在类外定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream &amp;out,Complex &amp;obj)&#123;</span><br><span class="line">out &lt;&lt; <span class="string">"("</span> &lt;&lt; obj.a &lt;&lt; <span class="string">"+"</span> &lt;&lt; obj.b &lt;&lt; <span class="string">"i)"</span>;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以愉快的调用啦！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Complex a(1,2),b(2,3);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; a &lt;&lt; b;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">============输出结果=============</span><br><span class="line">(<span class="number">1</span>+<span class="number">2</span>i)(<span class="number">2</span>+<span class="number">3</span>i)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>P1036 选数——类似全排列递归回溯法</title>
      <link href="/2019/12/06/P1036-%E9%80%89%E6%95%B0%E2%80%94%E2%80%94%E7%B1%BB%E4%BC%BC%E5%85%A8%E6%8E%92%E5%88%97%E9%80%92%E5%BD%92%E5%9B%9E%E6%BA%AF%E6%B3%95/"/>
      <url>/2019/12/06/P1036-%E9%80%89%E6%95%B0%E2%80%94%E2%80%94%E7%B1%BB%E4%BC%BC%E5%85%A8%E6%8E%92%E5%88%97%E9%80%92%E5%BD%92%E5%9B%9E%E6%BA%AF%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>题目链接：<a href="https://www.luogu.com.cn/problem/P1036" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P1036</a></p><hr><p>这个题用到了搜索与回溯的算法，所以先复习一下最简单的搜索与回溯：</p><p><strong>搜索与回溯算法的框架：</strong><br>第一种写法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Search</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function">　</span>&#123;</span><br><span class="line">　<span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=算符种数;i++)</span><br><span class="line">　　<span class="keyword">if</span> (满足条件)</span><br><span class="line">　　   &#123;</span><br><span class="line">　　　　保存结果</span><br><span class="line">　　　　<span class="keyword">if</span> (到目的地) 输出解;</span><br><span class="line">　　　           <span class="keyword">else</span> Search(k+<span class="number">1</span>);</span><br><span class="line">　　　　恢复：保存结果之前的状态&#123;回溯一步&#125;</span><br><span class="line">　 　  &#125;</span><br><span class="line">　&#125;</span><br></pre></td></tr></table></figure><p>第二种写法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Search</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function">　</span>&#123;</span><br><span class="line">　  <span class="keyword">if</span>  (到目的地) 输出解;</span><br><span class="line">　　　<span class="keyword">else</span></span><br><span class="line">　　　　<span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=算符种数;i++)</span><br><span class="line">　　　　　<span class="keyword">if</span>  (满足条件) </span><br><span class="line">　　　　　　　&#123;</span><br><span class="line">　　　　　　　　保存结果;</span><br><span class="line">　　　                  Search(k+<span class="number">1</span>);</span><br><span class="line">　　　　　　　　恢复：保存结果之前的状态&#123;回溯一步&#125;</span><br><span class="line">　　　　　　　&#125;</span><br><span class="line">　&#125;</span><br></pre></td></tr></table></figure><hr><p>以一个最简单的搜索回溯题来练一下手：</p><p>【题目描述】设有n个整数的集合｛1,2,…,n｝，从中取出任意r个数进行排列（r&lt;n），试列出所有的排列。</p><p>解法：<br>主函数外定义全局变量（静态区变量自动初始化为0）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n,r;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10001</span>]; <span class="comment">//存储排列结果</span></span><br><span class="line"><span class="keyword">bool</span> rec[<span class="number">10001</span>];<span class="comment">//记录数值是否使用过，rec[num]==1代表数num已经使用过了</span></span><br></pre></td></tr></table></figure><p>再写一个函数用来输出正确的排列</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=r;i++)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;setw(<span class="number">3</span>)&lt;&lt;a[i];</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后是重头戏，此题的核心代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> step)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">     <span class="keyword">if</span>  (rec[i]==<span class="number">0</span>)      <span class="comment">//判断i是否可用</span></span><br><span class="line">      &#123;</span><br><span class="line">         a[step]=i;          <span class="comment">//保存结果</span></span><br><span class="line">         rec[i]=<span class="number">1</span>;</span><br><span class="line">         <span class="keyword">if</span> (step==r) print();</span><br><span class="line">            <span class="keyword">else</span> search(step+<span class="number">1</span>);</span><br><span class="line">         rec[i]=<span class="number">0</span>; </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后在主函数内调用</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class="line">  search(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>P1036选数这个题跟全排列非常类似，不同的是此题<strong>全排列的不是1…n，而是所给的每一个整数</strong>。<br>而且在<strong>排列完成后还要判断排列结果的和是否为素数</strong>。</p><p>所以先上一个判断素数的函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=<span class="built_in">sqrt</span>(num);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num%i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后在全局定义变量，免去了赋0的时间</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> g[<span class="number">21</span>],sum;<span class="comment">//g存储所给的整数，sum用来保存全排列的和</span></span><br><span class="line"><span class="keyword">int</span> rec[<span class="number">21</span>];<span class="comment">//记录元素是否被使用</span></span><br><span class="line"><span class="keyword">int</span> k,n,ans;<span class="comment">//ans用来记录符合条件的全排列</span></span><br></pre></td></tr></table></figure><p>接下来是最关键的函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> step,<span class="keyword">int</span> temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="comment">//在这里i从temp开始，而不是从0开始，因为1+2+3与1+3+2是一样的（举个栗子而已）</span></span><br><span class="line"><span class="keyword">for</span>(i=temp;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(rec[i]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">rec[i]=<span class="number">1</span>; </span><br><span class="line">sum+=g[i]; <span class="comment">//保存当前结果</span></span><br><span class="line"><span class="keyword">if</span>(step==k) <span class="comment">//如果已经排了k个数,就判断sum是否为素数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(is_prime(sum)) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> search(step+<span class="number">1</span>,i+<span class="number">1</span>); <span class="comment">//否则就排下一个数</span></span><br><span class="line"><span class="comment">//回溯后记录要归0，sum要减去当前元素</span></span><br><span class="line">rec[i]=<span class="number">0</span>;</span><br><span class="line">sum-=g[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>综上所述，最终题解为</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> g[<span class="number">21</span>],sum;</span><br><span class="line"><span class="keyword">int</span> rec[<span class="number">21</span>];</span><br><span class="line"><span class="keyword">int</span> k,n,ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=<span class="built_in">sqrt</span>(num);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num%i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> step,<span class="keyword">int</span> temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=temp;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(rec[i]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">rec[i]=<span class="number">1</span>;</span><br><span class="line">sum+=g[i];</span><br><span class="line"><span class="keyword">if</span>(step==k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(is_prime(sum)) ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> search(step+<span class="number">1</span>,i+<span class="number">1</span>);</span><br><span class="line">rec[i]=<span class="number">0</span>;</span><br><span class="line">sum-=g[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;g[i]);</span><br><span class="line">search(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 萌新自强之路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>P1028 数的计算——萌新的递推公式</title>
      <link href="/2019/12/04/P1028-%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97%E2%80%94%E2%80%94%E8%90%8C%E6%96%B0%E7%9A%84%E9%80%92%E6%8E%A8%E5%85%AC%E5%BC%8F/"/>
      <url>/2019/12/04/P1028-%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97%E2%80%94%E2%80%94%E8%90%8C%E6%96%B0%E7%9A%84%E9%80%92%E6%8E%A8%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>我们要求找出具有下列性质数的个数(包含输入的自然数n):<br>先输入一个自然数n(n≤1000),然后对此自然数按照如下方法进行处理:<br>1.不作任何处理;<br>2.在它的左边加上一个自然数,但该自然数不能超过原数的一半;<br>3.加上数后,继续按此规则进行处理,直到不能再加自然数为止.</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>1个自然数n(n≤1000)</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>1个整数，表示具有该性质数的个数。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h3><p>满足条件的数为</p><p>6，16，26，126，36，136</p><hr><p>这个题找规律<br>$a_1=1$<br>$a_n=a_{n-1}+a_{n/2}(n为偶数,奇数a_{n+1}=a_n)$<br>根据递推公式创建一个数组，答案就是$a_n$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,i;</span><br><span class="line"><span class="keyword">int</span> g[<span class="number">1001</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">4</span>;i&lt;=<span class="number">1001</span>;i+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">g[i] = g[i<span class="number">-1</span>]+g[i/<span class="number">2</span>];</span><br><span class="line">g[i+<span class="number">1</span>]=g[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; g[n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 萌新自强之路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>P1914 小书童——密码</title>
      <link href="/2019/12/04/P1914-%E5%B0%8F%E4%B9%A6%E7%AB%A5%E2%80%94%E2%80%94%E5%AF%86%E7%A0%81/"/>
      <url>/2019/12/04/P1914-%E5%B0%8F%E4%B9%A6%E7%AB%A5%E2%80%94%E2%80%94%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h3><p>某蒟蒻迷上了“小书童”，有一天登陆时忘记密码了（他没绑定邮箱or手机），于是便把问题抛给了神犇你。</p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>蒟蒻虽然忘记密码，但他还记得密码是由一个字符串组成。密码是由原文字符串（由不超过 50 个小写字母组成）中每个字母向后移动 nn 位形成的。z 的下一个字母是 a，如此循环。他现在找到了移动前的原文字符串及 nn，请你求出密码。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行：n。第二行：未移动前的一串字母</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行，是此蒟蒻的密码</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">qwe</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rxf</span><br></pre></td></tr></table></figure><hr><p>这个题很简单，但是<strong>需要注意一点，ascll码值的范围是0-255或-128-+127</strong>。在我本人的电脑（devc++）上面的范围是-128-+127，出现了溢出的问题，所以<strong>用一个int型的变量temp来存储字符的ASCLL码值</strong>，防止溢出。<br>此外，<strong>用n%26来缩小n的数值</strong>，防止连int也给溢出了。。。。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">char</span> *p,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//将字符串p的每一个字母都移动n个单位</span></span><br><span class="line"><span class="keyword">int</span> i,temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;p[i];i++)</span><br><span class="line">&#123;</span><br><span class="line">temp = (<span class="keyword">int</span>)p[i];<span class="comment">//temp存储ascll码值</span></span><br><span class="line">temp+=n%<span class="number">26</span>;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;<span class="string">'z'</span>)</span><br><span class="line">&#123;<span class="comment">//溢出的判断</span></span><br><span class="line">temp-=<span class="number">26</span>;</span><br><span class="line">p[i]=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> p[i] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">51</span>];</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">move(s,n);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; s;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 萌新自强之路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>P1598 垂直柱状图</title>
      <link href="/2019/12/04/P1598-%E5%9E%82%E7%9B%B4%E6%9F%B1%E7%8A%B6%E5%9B%BE/"/>
      <url>/2019/12/04/P1598-%E5%9E%82%E7%9B%B4%E6%9F%B1%E7%8A%B6%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>写一个程序从输入文件中去读取四行大写字母（全都是大写的，每行不超过100个字符），然后用柱状图输出每个字符在输入文件中出现的次数。严格地按照输出样例来安排你的输出格式。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>四行字符，由大写字母组成，每行不超过100个字符</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>由若干行组成，前几行由空格和星号组成，最后一行则是由空格和字母组成的。在任何一行末尾不要打印不需要的多余空格。不要打印任何空行。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.</span><br><span class="line">THIS IS AN EXAMPLE TO TEST FOR YOUR</span><br><span class="line">HISTOGRAM PROGRAM.</span><br><span class="line">HELLO!</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">                            *</span><br><span class="line">                            *</span><br><span class="line">        *                   *</span><br><span class="line">        *                   *     *   *</span><br><span class="line">        *                   *     *   *</span><br><span class="line">*       *     *             *     *   *</span><br><span class="line">*       *     * *     * *   *     * * *</span><br><span class="line">*       *   * * *     * *   * *   * * * *</span><br><span class="line">*     * * * * * *     * * * * *   * * * *     * *</span><br><span class="line">* * * * * * * * * * * * * * * * * * * * * * * * * *</span><br><span class="line">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</span><br></pre></td></tr></table></figure><hr><p>用桶的思想来解决这个问题<br>写一个函数，用下标表示每一个字母出现的次数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="string">'Z'</span>+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> maxx;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;p[i];i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p[i]&gt;=<span class="string">'A'</span> &amp;&amp; p[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[p[i]]++;</span><br><span class="line"><span class="keyword">if</span>(a[p[i]]&gt;maxx) maxx=a[p[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">101</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">gets(s);</span><br><span class="line">fun(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(;maxx;maxx--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="string">'A'</span>;j&lt;=<span class="string">'Z'</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==maxx)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"* "</span>);</span><br><span class="line">a[j]--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"  "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="string">'A'</span>;i&lt;=<span class="string">'Z'</span>;i++) <span class="built_in">printf</span>(<span class="string">"%c "</span>,(<span class="keyword">char</span>)i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 萌新自强之路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】文件输入输出</title>
      <link href="/2019/12/04/C-%E6%96%87%E4%BB%B6%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
      <url>/2019/12/04/C-%E6%96%87%E4%BB%B6%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="大佬的教程"><a href="#大佬的教程" class="headerlink" title="大佬的教程"></a>大佬的教程</h2><p><a href="https://blog.csdn.net/kingstar158/article/details/6859379" target="_blank" rel="noopener">C++文件读写详解（ofstream,ifstream,fstream）</a><br><a href="https://blog.csdn.net/qwezhaohaihong/article/details/51559455" target="_blank" rel="noopener">各种ios::xxx组合在C++文件输入输出中的区别</a></p><h2 id="注意的点"><a href="#注意的点" class="headerlink" title="注意的点"></a>注意的点</h2><h4 id="1-fstream对象中seek与tell方法的问题"><a href="#1-fstream对象中seek与tell方法的问题" class="headerlink" title="1.fstream对象中seek与tell方法的问题"></a>1.fstream对象中seek与tell方法的问题</h4><p>因为fstream是ofstream与ifstream的派生类，继承了seekg、seekp、tellg、tellp方法。但是<strong>在fstream对象中，seekg&amp;seekp tellg&amp;tellp起到的效果是相同的。</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">fstream <span class="title">fio</span><span class="params">(<span class="string">"file.txt"</span>)</span></span>;</span><br><span class="line">fio.seekg(<span class="number">1</span>);</span><br><span class="line">fio.seekp(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fio.tellg() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fio.tellp() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************************</span></span><br><span class="line"><span class="comment">输出结果：</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">*********************************/</span></span><br></pre></td></tr></table></figure><h4 id="2-关于ios-app与“seek”方法"><a href="#2-关于ios-app与“seek”方法" class="headerlink" title="2.关于ios::app与“seek”方法"></a>2.关于ios::app与“seek”方法</h4><p>ios::app方式使<strong>所有的输出</strong>附加在文件的结尾，<strong>seekg或者是seekp方法是无法改变输出位置的</strong><br>比如说我们有个txt文件（file.txt）的内容是000456，我们想先用ios::app方式指向文件结尾，然后再用seekp方法修改指针位置为开头，将000替换为123，文本最终变成123456，我们来实现一下：</p><p>修改前的文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">000456</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">fstream <span class="title">fio</span><span class="params">(<span class="string">"file.txt"</span>,ios::app|ios::out)</span></span>;<span class="comment">//ios::app方式打开</span></span><br><span class="line">fio.seekp(<span class="number">0</span>,ios::beg);<span class="comment">//似乎指向了文件开头</span></span><br><span class="line">fio &lt;&lt; <span class="string">"123"</span>;<span class="comment">//用123替换000</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后的文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">000456123</span><br></pre></td></tr></table></figure><p>可以看到，所有的输出都始终附加在文件的结尾<br>要用正确的方式输出我们想要的结果，全面的教程↓<br><a href="https://blog.csdn.net/qwezhaohaihong/article/details/51559455" target="_blank" rel="noopener">各种ios::xxx组合在C++文件输入输出中的区别</a></p><h4 id="3-fstream对象使用open方法自动创建文件的问题"><a href="#3-fstream对象使用open方法自动创建文件的问题" class="headerlink" title="3.fstream对象使用open方法自动创建文件的问题"></a>3.fstream对象使用open方法自动创建文件的问题</h4><p>在这里用构造的方式来调用open方法<br>注意fstream默认的方式是ios::in|ios::out，所以第一串与第二串代码等同。<br>源代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">fstream <span class="title">fio0</span><span class="params">(<span class="string">"file0.txt"</span>)</span></span>;<span class="comment">//一</span></span><br><span class="line"><span class="function">fstream <span class="title">fio1</span><span class="params">(<span class="string">"file1.txt"</span>,ios::in|ios::out)</span></span>;<span class="comment">//二</span></span><br><span class="line"><span class="function">fstream <span class="title">fio2</span><span class="params">(<span class="string">"file2.txt"</span>,ios::out)</span></span>;<span class="comment">//三</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行之前当前文件夹的状态：<br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217101039.png" alt="在这里插入图片描述"><br>运行之后：<br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217101105.png" alt="在这里插入图片描述"></p><blockquote><p>若包含ios::in，则不会自动创建文件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 踩过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>P1553 数字反转（升级版）——被自己蠢哭了系列</title>
      <link href="/2019/12/03/P1553-%E6%95%B0%E5%AD%97%E5%8F%8D%E8%BD%AC%EF%BC%88%E5%8D%87%E7%BA%A7%E7%89%88%EF%BC%89%E2%80%94%E2%80%94%E8%A2%AB%E8%87%AA%E5%B7%B1%E8%A0%A2%E5%93%AD%E4%BA%86%E7%B3%BB%E5%88%97/"/>
      <url>/2019/12/03/P1553-%E6%95%B0%E5%AD%97%E5%8F%8D%E8%BD%AC%EF%BC%88%E5%8D%87%E7%BA%A7%E7%89%88%EF%BC%89%E2%80%94%E2%80%94%E8%A2%AB%E8%87%AA%E5%B7%B1%E8%A0%A2%E5%93%AD%E4%BA%86%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<hr><p><strong>题目描述</strong><br>给定一个数，请将该数各个位上数字反转得到一个新数。</p><p>这次与NOIp2011普及组第一题不同的是：这个数可以是小数，分数，百分数，整数。整数反转是将所有数位对调；小数反转是把整数部分的数反转，再将小数部分的数反转，不交换整数部分与小数部分；分数反转是把分母的数反转，再把分子的数反转，不交换分子与分母；百分数的分子一定是整数，百分数只改变数字部分。整数新数也应满足整数的常见形式，即除非给定的原数为零，否则反转后得到的新数的最高位数字不应为零；小数新数的末尾不为0（除非小数部分除了0没有别的数，那么只保留1个0）；分数不约分，分子和分母都不是小数（约分滴童鞋抱歉了，不能过哦。输入数据保证分母不为0），本次没有负数。<br><strong>输入格式</strong><br>一个数s<br><strong>输出格式</strong><br>一个数，即s的反转数</p><p>输入样例1：5087462<br>输出样例1：2647805</p><p>输入样例2：600.084<br>输出样例2：6.48</p><p>输入样例3：700/27<br>输出样例3：7/72</p><p>输入样例4：8670%<br>输出样例4：768%</p><hr><p>萌新上路，俺不知道啥叫STL，所以就自己动手，丰衣足食，嘿嘿。<br>打算用字符串来收数字，所以先写了一个char数字字符串转int的函数（用了指针的方法，转换从start到end之间的数字）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">trans</span><span class="params">(<span class="keyword">char</span>* start,<span class="keyword">char</span>* end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* p=end;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ans=<span class="number">0</span>,i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> len = end-start;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=start)</span><br><span class="line">&#123;</span><br><span class="line">ans += ((*p)-<span class="string">'0'</span>)*i;</span><br><span class="line">i*=<span class="number">10</span>;</span><br><span class="line">p--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（<em>其实这个题从一开始就做错了，题目要求数值的最大长度20位，然而long long int最大约19位，unsigned long long虽然可以到20位，但是最大是18446744073709551615，很明显不行，不过最后只wa了一个测试点，就当涨经验了吧哈哈，不要在意这些细节，不对，是巨节</em>）</p><p>然后再写反转的函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  ans=<span class="number">0</span>,i=<span class="number">1</span>,temp;</span><br><span class="line"><span class="keyword">while</span>(num)</span><br><span class="line">&#123;<span class="comment">//每次都将ans的位数提高，再存入num的个位数部分</span></span><br><span class="line">temp = num%<span class="number">10</span>;</span><br><span class="line">ans = ans*<span class="number">10</span> + temp;</span><br><span class="line">num/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入数据（现在还是觉得当时有点憨）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> num[<span class="number">40</span>];</span><br><span class="line">gets(num);</span><br></pre></td></tr></table></figure><p>之后遍历查找是否有符号，根据结果输出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;num[i];i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num[i]&lt;<span class="string">'0'</span>||num[i]&gt;<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num[i]==<span class="string">'.'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld.%lld"</span>,reverse(trans(num,num+i<span class="number">-1</span>)),reverse(trans(num+i+<span class="number">1</span>,num+<span class="built_in">strlen</span>(num)<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num[i]==<span class="string">'/'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld/%lld"</span>,reverse(trans(num,num+i<span class="number">-1</span>)),reverse(trans(num+i+<span class="number">1</span>,num+<span class="built_in">strlen</span>(num)<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num[i]==<span class="string">'%'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld%%"</span>,reverse(trans(num,num+i<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//全都是数字的情况</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld%"</span>,reverse(trans(num,num+<span class="built_in">strlen</span>(num)<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>解释一下printf后面那一串奇怪的嵌套：<br>假如num为123.456<br>那翻转前三位123就可以写成</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reverse(trans(num,num+<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p><del>萌新觉得这很可</del> </p><p>最后把上面那一堆串到一起</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">trans</span><span class="params">(<span class="keyword">char</span>* start,<span class="keyword">char</span>* end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* p=end;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> ans=<span class="number">0</span>,i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> len = end-start;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=start)</span><br><span class="line">&#123;</span><br><span class="line">ans += ((*p)-<span class="string">'0'</span>)*i;</span><br><span class="line">i*=<span class="number">10</span>;</span><br><span class="line">p--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span>  ans=<span class="number">0</span>,i=<span class="number">1</span>,temp;</span><br><span class="line"><span class="keyword">while</span>(num)</span><br><span class="line">&#123;</span><br><span class="line">temp = num%<span class="number">10</span>;</span><br><span class="line">ans = ans*<span class="number">10</span> + temp;</span><br><span class="line">num/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> num[<span class="number">40</span>];</span><br><span class="line">gets(num);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;num[i];i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num[i]&lt;<span class="string">'0'</span>||num[i]&gt;<span class="string">'9'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num[i]==<span class="string">'.'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld.%lld"</span>,reverse(trans(num,num+i<span class="number">-1</span>)),reverse(trans(num+i+<span class="number">1</span>,num+<span class="built_in">strlen</span>(num)<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num[i]==<span class="string">'/'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld/%lld"</span>,reverse(trans(num,num+i<span class="number">-1</span>)),reverse(trans(num+i+<span class="number">1</span>,num+<span class="built_in">strlen</span>(num)<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num[i]==<span class="string">'%'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld%%"</span>,reverse(trans(num,num+i<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld%"</span>,reverse(trans(num,num+<span class="built_in">strlen</span>(num)<span class="number">-1</span>)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后系统判定95分<br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217101655.png" alt="在这里插入图片描述"><br>第14个测试点数据是：12345678910111213140<br>20位的数据，我太难了（枯了）</p><hr><p>偷瞄一下大佬的思路<br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217101632.png" alt="在这里插入图片描述"><br><del>看到这个，要被自己蠢哭了好吗</del> </p><p>未完待续。。。。</p>]]></content>
      
      
      <categories>
          
          <category> 萌新自强之路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>P1308 统计单词数——字符串处理</title>
      <link href="/2019/12/03/P1308-%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D%E6%95%B0%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
      <url>/2019/12/03/P1308-%E7%BB%9F%E8%AE%A1%E5%8D%95%E8%AF%8D%E6%95%B0%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>一般的文本编辑器都有查找单词的功能，该功能可以快速定位特定单词在文章中的位置，有的还能统计出特定单词在文章中出现的次数。<br>现在，请你编程实现这一功能，具体要求是：给定一个单词，请你输出它在给定的文章中出现的次数和第一次出现的位置。注意：匹配单词时，不区分大小写，但要求完全匹配，即给定单词必须与文章中的某一独立单词在不区分大小写的情况下完全相同（参见样例1 ），如果给定单词仅是文章中某一单词的一部分则不算匹配（参见样例2 ）。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>共2行。</p><p>第1行为一个字符串，其中只含字母，表示给定单词；</p><p>第2行为一个字符串，其中只可能包含字母和空格，表示给定的文章。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>一行，如果在文章中找到给定单词则输出两个整数，两个整数之间用一个空格隔开，分别是单词在文章中出现的次数和第一次出现的位置（即在文章中第一次出现时，单词首字母在文章中的位置，位置从0 开始）；如果单词在文章中没有出现，则直接输出一个整数-1。</p><h3 id="输入样例1"><a href="#输入样例1" class="headerlink" title="输入样例1"></a>输入样例1</h3><pre><code>Toto be or not to be is a question</code></pre><h3 id="输出样例1"><a href="#输出样例1" class="headerlink" title="输出样例1"></a>输出样例1</h3><pre><code>2 0</code></pre><h3 id="输入样例2"><a href="#输入样例2" class="headerlink" title="输入样例2"></a>输入样例2</h3><pre><code>toDid the Ottoman Empire lose its power at that time</code></pre><h3 id="输出样例2"><a href="#输出样例2" class="headerlink" title="输出样例2"></a>输出样例2</h3><pre><code>toDid the Ottoman Empire lose its power at that time</code></pre><hr><h4 id="我的解法"><a href="#我的解法" class="headerlink" title="我的解法"></a>我的解法</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strlower</span><span class="params">(<span class="keyword">char</span>* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//将字符串转换为小写 </span></span><br><span class="line"><span class="comment">//头文件cstring:判断大小写isupper 临时转换为小写tolower </span></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; a[i]; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isupper</span>(a[i])) a[i] = <span class="built_in">tolower</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span>* aa, <span class="keyword">char</span>* bb,<span class="keyword">int</span>* ii)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(aa);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(aa[i]!=bb[i])</span><br><span class="line">&#123;<span class="comment">//中间有不匹配的</span></span><br><span class="line">*ii += i; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bb[len]==<span class="string">' '</span>||bb[len]==<span class="string">'\0'</span>)</span><br><span class="line">&#123;<span class="comment">//匹配到a的结尾，且b[i+1]空格</span></span><br><span class="line">*ii+=i;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;<span class="comment">//匹配到单词的结尾，但是文章b[i+1]不是空格</span></span><br><span class="line">(*ii)++;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">11</span>];</span><br><span class="line"><span class="keyword">char</span> g[<span class="number">1000001</span>];</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>, location = <span class="number">-1</span>;</span><br><span class="line"><span class="comment">//用gets函数读取整行 </span></span><br><span class="line">gets(a);</span><br><span class="line">gets(g);</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(g);</span><br><span class="line"><span class="comment">//将大写转换为小写 </span></span><br><span class="line">strlower(a);</span><br><span class="line">strlower(g);</span><br><span class="line"><span class="keyword">while</span>(i&lt;=len)</span><br><span class="line">&#123;<span class="comment">//从i=0开始向后遍历文章 </span></span><br><span class="line"><span class="keyword">if</span> (g[i] == a[<span class="number">0</span>]&amp;&amp;g[i<span class="number">-1</span>]==<span class="string">' '</span> || g[i]==a[<span class="number">0</span>]&amp;&amp;i==<span class="number">0</span>)  </span><br><span class="line">&#123;<span class="comment">//当 文章空格后的第一个单词 与 给定单词首字母 相同时</span></span><br><span class="line"> <span class="comment">//或者 文章的第一个单词 与 给定单词首字母 相同时</span></span><br><span class="line"><span class="keyword">if</span> (match(a, g + i,&amp;i))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(location==<span class="number">-1</span>)location = i-<span class="built_in">strlen</span>(a);</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(location==<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d %d"</span>,num,location);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="用string的做法（作者-Aimyhtixela来自洛谷）"><a href="#用string的做法（作者-Aimyhtixela来自洛谷）" class="headerlink" title="用string的做法（作者: Aimyhtixela来自洛谷）"></a>用string的做法（作者: Aimyhtixela来自洛谷）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">//命名空间</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义两个字符串</span></span><br><span class="line">    <span class="built_in">string</span> a;</span><br><span class="line">    <span class="built_in">string</span> b;</span><br><span class="line">    <span class="comment">//用string库，调用getline, 直接读入一整行</span></span><br><span class="line">    getline(<span class="built_in">cin</span>,a);</span><br><span class="line">    getline(<span class="built_in">cin</span>,b);</span><br><span class="line">    <span class="comment">//转换大小写，可以都转换为大写，或者小写</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length();++i)&#123;</span><br><span class="line">        a[i]=<span class="built_in">tolower</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;b.length();++i)&#123;</span><br><span class="line">        b[i]=<span class="built_in">tolower</span>(b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//因为连起来的不算，所以要在前后加几个空格，一定要是同样多的，同量减同量，等于同量</span></span><br><span class="line">    a=<span class="string">' '</span>+a+<span class="string">' '</span>;</span><br><span class="line">    b=<span class="string">' '</span>+b+<span class="string">' '</span>;</span><br><span class="line">    <span class="comment">//先看看会不会找不到，用a.find()和string::npos</span></span><br><span class="line">    <span class="keyword">if</span> (b.find(a)==<span class="built_in">string</span>::npos)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果找得到</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> alpha=b.find(a);</span><br><span class="line">        <span class="keyword">int</span> beta=b.find(a),s=<span class="number">0</span>;<span class="comment">//计数器初始化为0</span></span><br><span class="line">        <span class="keyword">while</span> (beta!=<span class="built_in">string</span>::npos)&#123;</span><br><span class="line">            ++s;<span class="comment">//计数器</span></span><br><span class="line">            beta=b.find(a,beta+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="string">" "</span>&lt;&lt;alpha&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//输出第一个和总共有几个</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//函数返回值为0，结束整个程序</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h3><p><em>i++与(</em>i)++的区别，要注意++的优先级要高于取值运算符</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span>* ii)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">(*ii)++; <span class="comment">//实参i也+1</span></span><br><span class="line">*ii++; <span class="comment">//等同于先ii++，将指针后移，然后再取值，实参i不变</span></span><br><span class="line">&#125;</span><br><span class="line">.....</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">fun(i);</span><br><span class="line">.....</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 萌新自强之路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】第13章作业</title>
      <link href="/2019/11/30/%E3%80%90C-%E3%80%91%E7%AC%AC13%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/11/30/%E3%80%90C-%E3%80%91%E7%AC%AC13%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="写数据在txt文件中，并计算数据的和"><a href="#写数据在txt文件中，并计算数据的和" class="headerlink" title="写数据在txt文件中，并计算数据的和"></a>写数据在txt文件中，并计算数据的和</h1><p>【问题描述】</p><p>在当前目录文件“data.txt”中读取整数数据，并计算总和保存在当前目录的“result.txt”文件中。</p><p>【输入形式】</p><p>文件中的若干数据，格式为按行存储。</p><p>【输出形式】</p><p>输出保存的文件，和计算之和</p><p>【样例输入】</p><p><img src="https://img-blog.csdnimg.cn/20191130164308962.png" alt="在这里插入图片描述"><br>【样例输出】<br><img src="https://img-blog.csdnimg.cn/20191130164323786.png" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ifstream <span class="title">fin</span><span class="params">(<span class="string">"data.txt"</span>)</span></span>;</span><br><span class="line">    <span class="function">ofstream <span class="title">fout</span><span class="params">(<span class="string">"result.txt"</span>)</span></span>;</span><br><span class="line">    <span class="keyword">int</span> n,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(fin &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += n;</span><br><span class="line">    &#125;</span><br><span class="line">    fout &lt;&lt; ans;</span><br><span class="line">    fin.close();</span><br><span class="line">    fout.close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++理论作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验七 继承与派生</title>
      <link href="/2019/11/30/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%B8%83-%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F/"/>
      <url>/2019/11/30/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%B8%83-%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="实验七（第八章）实践题一"><a href="#实验七（第八章）实践题一" class="headerlink" title="实验七（第八章）实践题一"></a>实验七（第八章）实践题一</h1><p>对本章示范题的用于管理商店商品的实现程序进行完善:完成Wardrobe立柜类的具体定义与使用，并添加“帽子仓库类”以及“立柜仓库类”的定义及使用，以使程序能够对商店的这三种商品（衬衣、帽子、立柜）进行简单的管理与应用。</p><p>要对商品实现的操作有:商品的进库（增加某类商品及其库存量），商品的出库（减少某类商品及其库存量），以及某类商品总价格的计算。</p><p>【输入形式】</p><p>根据提示输入<br>【输出形式】</p><p>把处理后的数据输出</p><p>【样例】注意：红色为输入部分，黑色为输出部分。</p><p>5 * shirt data in: price/place/material =&gt;60 Tianjin Cotton</p><p>3 * shirt data in: price/place/material =&gt;80 Beijing Wool</p><p>60 Tianjin Cotton</p><p>60 Tianjin Cotton</p><p>60 Tianjin Cotton</p><p>60 Tianjin Cotton</p><p>60 Tianjin Cotton</p><p>80 Beijing Wool</p><p>80 Beijing Wool</p><p>80 Beijing Wool</p><p>shiSto.TotalPrice()=540</p><p>60 Tianjin Cotton</p><p>60 Tianjin Cotton</p><p>60 Tianjin Cotton</p><p>60 Tianjin Cotton</p><p>shiSto.TotalPrice()=240</p><p>5 * Cap data in: price/place/material/style =&gt;40 Suzhou Cotton M</p><p>3 * Cap data in: price/place/material/style =&gt;30 Wuxi Wool S</p><p>40 Suzhou Cotton M</p><p>40 Suzhou Cotton M</p><p>40 Suzhou Cotton M</p><p>40 Suzhou Cotton M</p><p>40 Suzhou Cotton M</p><p>30 Wuxi Wool S</p><p>30 Wuxi Wool S</p><p>30 Wuxi Wool S</p><p>capSto.TotalPrice()=290</p><p>40 Suzhou Cotton M</p><p>40 Suzhou Cotton M</p><p>40 Suzhou Cotton M</p><p>40 Suzhou Cotton M</p><p>capSto.TotalPrice()=160</p><p>5 * Wardrobe data in: price/place/material/color =&gt;160 Guangzhou Pine Yellow</p><p>3 * Wardrobe data in: price/place/material/color =&gt;200 Suzhou Oak Brown</p><p>160 Guangzhou Pine Yellow</p><p>160 Guangzhou Pine Yellow</p><p>160 Guangzhou Pine Yellow</p><p>160 Guangzhou Pine Yellow</p><p>160 Guangzhou Pine Yellow</p><p>200 Suzhou Oak Brown</p><p>200 Suzhou Oak Brown</p><p>200 Suzhou Oak Brown</p><p>WarSto.TotalPrice()=1400</p><p>160 Guangzhou Pine Yellow</p><p>160 Guangzhou Pine Yellow</p><p>160 Guangzhou Pine Yellow</p><p>160 Guangzhou Pine Yellow</p><p>WarSto.TotalPrice()=640</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span>&#123;</span></span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">double</span> price;</span><br><span class="line">        <span class="keyword">char</span> place[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Base(<span class="keyword">double</span> pr,<span class="keyword">char</span> *pl,<span class="keyword">int</span> cnt)</span><br><span class="line">        &#123;</span><br><span class="line">            price = pr;</span><br><span class="line">            <span class="built_in">strcpy</span>(place,pl);</span><br><span class="line">            count = cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; price &lt;&lt; <span class="string">" "</span> &lt;&lt; place&lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">InSomething</span><span class="params">(<span class="keyword">int</span> add_cnt)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            count +=add_cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">OutSomething</span><span class="params">(<span class="keyword">int</span> del_cnt)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            count -= del_cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">double</span> <span class="title">TotalPrice</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> price;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shirt</span>:</span><span class="keyword">public</span> Base&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">char</span> material[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Shirt(<span class="keyword">double</span> pr,<span class="keyword">char</span> *pl,<span class="keyword">int</span> cnt,<span class="keyword">char</span> *mat):Base(pr,pl,cnt)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(material,mat);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Base::display();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt;material&lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cap</span>:</span><span class="keyword">public</span> Shirt&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">char</span> style;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Cap(<span class="keyword">double</span> pr,<span class="keyword">char</span> *pl,<span class="keyword">int</span> cnt,<span class="keyword">char</span> *mat,<span class="keyword">char</span> sty):Shirt(pr,pl,cnt,mat)</span><br><span class="line">        &#123;</span><br><span class="line">            style = sty;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">display</span> <span class="params">()</span></span>&#123;</span><br><span class="line">            Shirt::display();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt;style;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wardrobe</span>:</span><span class="keyword">public</span> Base&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">        <span class="keyword">char</span> material[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">char</span> color[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Wardrobe(<span class="keyword">double</span> pr,<span class="keyword">char</span> *pl,<span class="keyword">int</span> cnt,<span class="keyword">char</span> *mat,<span class="keyword">char</span> *col):Base(pr,pl,cnt)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(material,mat);</span><br><span class="line">            <span class="built_in">strcpy</span>(color,col);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Base::display();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; material &lt;&lt; <span class="string">" "</span> &lt;&lt; color;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> price;</span><br><span class="line">    <span class="keyword">char</span> place[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> material[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> style;</span><br><span class="line">    <span class="keyword">char</span> color[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"5 * shirt data in: price/place/material =&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; price &gt;&gt; place &gt;&gt; material;</span><br><span class="line">    <span class="function">Shirt <span class="title">s1</span><span class="params">(price,place,<span class="number">5</span>,material)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"3 * shirt data in: price/place/material =&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; price &gt;&gt; place &gt;&gt; material;</span><br><span class="line">    <span class="function">Shirt <span class="title">s2</span><span class="params">(price,place,<span class="number">3</span>,material)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        s1.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s2.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"shiSto.TotalPrice()="</span> &lt;&lt; (s1.TotalPrice())*<span class="number">5</span>+(s2.TotalPrice())*<span class="number">3</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s1.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"shiSto.TotalPrice()="</span> &lt;&lt; (s1.TotalPrice())*<span class="number">4</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"5 * Cap data in: price/place/material/style =&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; price &gt;&gt; place &gt;&gt; material &gt;&gt; style;</span><br><span class="line">    <span class="function">Cap <span class="title">c1</span><span class="params">(price,place,<span class="number">5</span>,material,style)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"3 * Cap data in: price/place/material/style =&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; price &gt;&gt; place &gt;&gt; material &gt;&gt; style;</span><br><span class="line">    <span class="function">Cap <span class="title">c2</span><span class="params">(price,place,<span class="number">3</span>,material,style)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c1.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c2.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"capSto.TotalPrice()="</span> &lt;&lt;(c1.TotalPrice())*<span class="number">5</span>+(c2.TotalPrice())*<span class="number">3</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c1.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"capSto.TotalPrice()="</span> &lt;&lt;(c1.TotalPrice())*<span class="number">4</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"5 * Wardrobe data in: price/place/material/color =&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; price &gt;&gt; place &gt;&gt; material&gt;&gt;color;</span><br><span class="line">    <span class="function">Wardrobe <span class="title">w1</span><span class="params">(price,place,<span class="number">5</span>,material,color)</span></span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"3 * Wardrobe data in: price/place/material/color =&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; price &gt;&gt; place &gt;&gt; material&gt;&gt;color;</span><br><span class="line">    <span class="function">Wardrobe <span class="title">w2</span><span class="params">(price,place,<span class="number">3</span>,material,color)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        w1.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        w2.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"WarSto.TotalPrice()="</span>&lt;&lt; (w1.TotalPrice())*<span class="number">5</span>+(w2.TotalPrice())*<span class="number">3</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        w1.display();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;<span class="string">"WarSto.TotalPrice()="</span> &lt;&lt; (w1.TotalPrice())*<span class="number">4</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实验七（第八章）-实践题二"><a href="#实验七（第八章）-实践题二" class="headerlink" title="实验七（第八章） 实践题二"></a>实验七（第八章） 实践题二</h1><p>【问题描述】</p><p>利用继承性与派生类来管理学生教师档案:由Person（人员）类出发（作为基类），派生出Student（学生）及Teacher（教师）类；而后又由Student（学生）类出发（作为基类），派生出GraduateStudent（研究生）类。可假定这几个类各自具有的数据成员为:</p><p>Person（人员）类: 姓名、性别、年龄；</p><p>Student（学生）类: 姓名、性别、年龄、学号、系别；</p><p>Teacher（教师）类: 姓名、性别、年龄、职称、担任课程；</p><p>GraduateStudent（研究生）类: 姓名、性别、年龄、学号、系别、导师。</p><p>为简化起见，每个类可只设立构造函数以及显示类对象数据的成员函数Print。而后编制简单的主函数，说明上述有关的类对象，并对其类成员函数进行简单使用（调用）。</p><p>【输入形式】<br>【输出形式】<br>【样例输入】</p><p>  无<br>【样例输出】</p><p>== per1.Display() =&gt; name,age,sex</p><p>sun 42 M</p><p>== stu1.Display() =&gt; name,age,sex,Reg_Number,department</p><p>guo 22 F 1001 comp</p><p>== teach1.Display() =&gt; name,age,sex,course,post</p><p>fang 38 M english professor</p><p>== gStu.Display() =&gt; name,age,sex,Reg_Number,department,advisor</p><p>wu 25 M 1021 comp wei</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>&#123;</span></span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">int</span> age;</span><br><span class="line">        <span class="built_in">string</span> sex;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Person()&#123;&#125;</span><br><span class="line">        Person(<span class="built_in">string</span> n,<span class="keyword">int</span> a,<span class="built_in">string</span> s):name(n),age(a),sex(s)&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; name &lt;&lt; <span class="string">" "</span> &lt;&lt; age &lt;&lt; <span class="string">" "</span> &lt;&lt; sex;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span><span class="keyword">public</span> Person&#123;</span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        <span class="keyword">int</span> regnum;</span><br><span class="line">        <span class="built_in">string</span> department;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Student()&#123;&#125;</span><br><span class="line">        Student(<span class="built_in">string</span> n,<span class="keyword">int</span> a,<span class="built_in">string</span> s,<span class="keyword">int</span> r,<span class="built_in">string</span> d)</span><br><span class="line">        &#123;</span><br><span class="line">            name=n;age=a;sex=s;regnum=r;department=d;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Person::Display();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; regnum &lt;&lt; <span class="string">" "</span> &lt;&lt; department;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraduateStudent</span>:</span><span class="keyword">public</span> Student&#123;</span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        <span class="built_in">string</span> advisor;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        GraduateStudent()&#123;&#125;;</span><br><span class="line">        GraduateStudent(<span class="built_in">string</span> n,<span class="keyword">int</span> a,<span class="built_in">string</span> s,<span class="keyword">int</span> r,<span class="built_in">string</span> d,<span class="built_in">string</span> ad):Student(n,a,s,r,d),advisor(ad)&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Student::Display();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; advisor;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span>:</span><span class="keyword">public</span> Person&#123;</span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        <span class="built_in">string</span> course;</span><br><span class="line">        <span class="built_in">string</span> post;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Teacher(<span class="built_in">string</span> n,<span class="keyword">int</span> a,<span class="built_in">string</span> s,<span class="built_in">string</span> c,<span class="built_in">string</span> p):Person(n,a,s),course(c),post(p)&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            Person::Display();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; course &lt;&lt; <span class="string">" "</span> &lt;&lt; post;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"== per1.Display() =&gt; name,age,sex"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">Person <span class="title">per1</span><span class="params">(<span class="string">"sun"</span>,<span class="number">42</span>,<span class="string">"M"</span>)</span></span>;</span><br><span class="line">    per1.Display();<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"== stu1.Display() =&gt; name,age,sex,Reg_Number,department"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">Student <span class="title">stu1</span><span class="params">(<span class="string">"guo"</span>,<span class="number">22</span>,<span class="string">"F"</span>,<span class="number">1001</span>,<span class="string">"comp"</span>)</span></span>;</span><br><span class="line">    stu1.Display();<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"== teach1.Display() =&gt; name,age,sex,course,post"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">Teacher <span class="title">teach1</span><span class="params">(<span class="string">"fang"</span>,<span class="number">38</span>,<span class="string">"M"</span>,<span class="string">"english"</span>,<span class="string">"professor"</span>)</span></span>;</span><br><span class="line">    teach1.Display();<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"== gStu.Display() =&gt; name,age,sex,Reg_Number,department,advisor"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="function">GraduateStudent <span class="title">gStu</span><span class="params">(<span class="string">"wu"</span>,<span class="number">25</span>,<span class="string">"M"</span>,<span class="number">1021</span>,<span class="string">"comp"</span>,<span class="string">"wei"</span>)</span></span>;</span><br><span class="line">    gStu.Display();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实验七（第八章）-实践题三"><a href="#实验七（第八章）-实践题三" class="headerlink" title="实验七（第八章） 实践题三"></a>实验七（第八章） 实践题三</h1><p>自定义一个日期时间类DateTimeType，它含有类DateType与类TimeType的类对象作为其数据成员，并具有所列的其他几个成员函数。而后编制主函数，说明DateTimeType的类对象，并对其成员函数以及二对象成员所属类的公有成员函数进行使用。</p><p>class DateTimeType {  //自定义的日期时间类 DateTimeType</p><p>DateType date; //类 DateType 的类对象 date 作为其数据成员</p><p>TimeType time; //类 TimeType 的类对象 time 作为其另一个数据成员</p><p>public:</p><p>DateTimeType(int y0=1, int m0=1, int d0=1, int hr0=0, int mi0=0, int se0=0);</p><p>//构造函数，设定 DateTimeType 类对象的日期时间，并为各参数设置了默认值</p><p>DateType&amp; GetDate(){ return date; } //返回本类的私有数据对象 data</p><p>TimeType&amp; GetTime(){ return time; } //返回本类的私有数据对象 time</p><p>void IncrementSecond(int s);  //增加若干秒，注意“进位”问题</p><p>void PrintDateTime(); //屏幕输出日期时间对象的有关数据</p><p>};</p><p>注意，每一个DateTimeType类对象中总包含有一个DateType类对象（对象成员）以及一个TimeType类对象（对象成员），编制与实现本程序时，也必须包含DateType与TimeType自定义类（类型）。</p><p>之所以设置了公有的类成员函数GetDate与GetTime，是为类外如主函数处使用该类的私有数据成员date与time提供方便（否则的话，类外无法直接访问该类的私有数据成员）。另外，两成员函数返回的都为引用，为的是可将返回对象当作一个独立变量来使用（如可以继续作左值等）。例如，假设编制了如下形式的主函数:</p><p>void main() {</p><p>DateTimeType dttm1(1999,12,31,23,59,59), dttm2;</p><p>(dttm1.GetDate()).PrintDate(); //调用对象成员所属类的公有成员函数</p><p>cout&lt;&lt;endl;</p><p>dttm1.PrintDateTime(); //调用本派生类的成员函数 PrintDateTime</p><p>dttm2.PrintDateTime();</p><p>dttm1.IncrementSecond(30) ; //调用本派生类成员函数</p><p>dttm1.PrintDateTime();</p><p>}<br>【样例输出】</p><p>1999-12-31</p><p>1999-12-31 23:59:59</p><p>1-1-1 0:0:0</p><p>2000-1-1 0:0:29</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateType</span>&#123;</span></span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        <span class="keyword">int</span> y;</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        <span class="keyword">int</span> d;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        DateType(<span class="keyword">int</span> yy=<span class="number">0</span>,<span class="keyword">int</span> mm=<span class="number">0</span>,<span class="keyword">int</span> dd=<span class="number">0</span>):y(yy),m(mm),d(dd)&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">PrintDate</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; y &lt;&lt; <span class="string">"-"</span> &lt;&lt; m &lt;&lt; <span class="string">"-"</span> &lt;&lt; d;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> g[<span class="number">13</span>] = &#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">            <span class="keyword">if</span>(y%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;y%<span class="number">100</span>!=<span class="number">0</span>||y%<span class="number">400</span>==<span class="number">0</span>) g[<span class="number">2</span>] = <span class="number">29</span>;</span><br><span class="line">            d++;</span><br><span class="line">            <span class="keyword">if</span>(d&gt;g[m])</span><br><span class="line">            &#123;</span><br><span class="line">                d-=g[m];</span><br><span class="line">                m++;</span><br><span class="line">                <span class="keyword">if</span>(m&gt;<span class="number">12</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    m-=<span class="number">12</span>;</span><br><span class="line">                    y++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TimeType</span>&#123;</span></span><br><span class="line">    <span class="keyword">protected</span>:</span><br><span class="line">        <span class="keyword">int</span> h;</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        <span class="keyword">int</span> s;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        TimeType(<span class="keyword">int</span> hh=<span class="number">0</span>,<span class="keyword">int</span> mm=<span class="number">0</span>,<span class="keyword">int</span> ss=<span class="number">0</span>):h(hh),m(mm),s(ss)&#123;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">PrintTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; h &lt;&lt; <span class="string">":"</span> &lt;&lt; m &lt;&lt; <span class="string">":"</span> &lt;&lt; s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> ss)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            s+=ss;</span><br><span class="line">            <span class="keyword">int</span> temp = s/<span class="number">60</span>;</span><br><span class="line">            <span class="keyword">if</span>(temp)</span><br><span class="line">            &#123;</span><br><span class="line">                m+=temp;</span><br><span class="line">                s-=<span class="number">60</span>*temp;</span><br><span class="line">                temp=m/<span class="number">60</span>;</span><br><span class="line">                <span class="keyword">if</span>(temp)</span><br><span class="line">                &#123;</span><br><span class="line">                    h+=temp;</span><br><span class="line">                    m-=<span class="number">60</span>*temp;</span><br><span class="line">                    temp=h/<span class="number">24</span>;</span><br><span class="line">                    <span class="keyword">if</span>(temp)</span><br><span class="line">                    &#123;</span><br><span class="line">                        h-=<span class="number">24</span>*temp;</span><br><span class="line">                        <span class="keyword">return</span> temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DateTimeType</span> &#123;</span>  </span><br><span class="line">    DateType date;</span><br><span class="line">    TimeType time;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        DateTimeType(<span class="keyword">int</span> y0=<span class="number">1</span>, <span class="keyword">int</span> m0=<span class="number">1</span>, <span class="keyword">int</span> d0=<span class="number">1</span>, <span class="keyword">int</span> hr0=<span class="number">0</span>, <span class="keyword">int</span> mi0=<span class="number">0</span>, <span class="keyword">int</span> se0=<span class="number">0</span>):date(y0,m0,d0),time(hr0,mi0,se0)&#123;&#125;</span><br><span class="line">        <span class="function">DateType&amp; <span class="title">GetDate</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> date; &#125; </span><br><span class="line">        <span class="function">TimeType&amp; <span class="title">GetTime</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> time; &#125; </span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">IncrementSecond</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="comment">//如果大于24小时 </span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(time.up(s))</span><br><span class="line">            &#123;</span><br><span class="line">                date.up();<span class="comment">//日期增加一天 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">PrintDateTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            date.PrintDate();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            time.PrintTime();</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    DateTimeType dttm1(1999,12,31,23,59,59), dttm2;</span><br><span class="line">    (dttm1.GetDate()).PrintDate(); </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    dttm1.PrintDateTime(); </span><br><span class="line">    dttm2.PrintDateTime();</span><br><span class="line">    dttm1.IncrementSecond(<span class="number">30</span>); </span><br><span class="line">    dttm1.PrintDateTime();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验八 输入输出流</title>
      <link href="/2019/11/30/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E5%85%AB-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81/"/>
      <url>/2019/11/30/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E5%85%AB-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h1 id="实验八（第十一章）实践题一"><a href="#实验八（第十一章）实践题一" class="headerlink" title="实验八（第十一章）实践题一"></a>实验八（第十一章）实践题一</h1><p>【问题描述】</p><p>编程序，对 k=1，2，3，…，14，15，按下式分别计算出 15 组（i，d，c）：整数 i=2<em>k-1；实数 d=k</em>k+k-9.8；字符 c=’H’+k。并通过使用运算符“&lt;&lt;”将这15组数据保存到当前目录下自定义的text型磁盘文件ft.txt之中。<br>【输入形式】<br>   无<br>【输出形式】<br>   文件内容要求：每组占一行，每行中的输出项用一个空格进行分割。<br>【样例输入】<br>   无<br>【样例输出】</p><p>文件内容格式如下：</p><p>1 -7.8 I</p><p>3 -3.8 J</p><p>5 2.2 K</p><p>7 10.2 L</p><p>….以下省略….</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ofstream fout;</span><br><span class="line">    fout.open(<span class="string">"ft.txt"</span>);</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=<span class="number">15</span>;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        fout &lt;&lt; <span class="number">2</span>*k<span class="number">-1</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; k*k+k<span class="number">-9.8</span> &lt;&lt; <span class="string">" "</span> &lt;&lt; (<span class="keyword">char</span>)(<span class="string">'H'</span>+k) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fout.close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实验八（第十一章）-实践题二"><a href="#实验八（第十一章）-实践题二" class="headerlink" title="实验八（第十一章） 实践题二"></a>实验八（第十一章） 实践题二</h1><p>【问题描述】</p><p>通过使用运算符“&gt;&gt;”和“&lt;&lt;”，对自定义的text型磁盘文件进行如下的指定操作。</p><p>（1）对i=1，2，3，…，15，计算d=i*i+0.5，并将15个结果写出到自定义的text型磁盘文件f1.txt中（注意，f1文件中的数据从小到大有序）；</p><p>（2）对i=1，2，3，…，10，计算d=10*i+0.5，并将10个结果写出到自定义的text型磁盘文件f2.txt中，而后再写出第11个数：357.9（注意，f2文件中的数据也从小到大有序）；</p><p>（3）读出文件f1.txt以及f2.txt中的数据，用来形成text型磁盘文件f3.txt，但要求存放于f3.txt中的数据仍然是有序的（按照从小到大的顺序）；<br>【输入形式】<br>   无<br>【输出形式】<br> 输出到f3.txt文件中（一行，数据间间隔为一个空格）<br>【样例输入】<br>   无<br>【样例输出】<br>   1.5 4.5 9.5 10.5 16.5…（以下略）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ofstream <span class="title">fout</span><span class="params">(<span class="string">"f1.txt"</span>)</span></span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">15</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fout &lt;&lt; i*i+<span class="number">0.5</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fout.close();</span><br><span class="line">    fout.open(<span class="string">"f2.txt"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fout &lt;&lt; <span class="number">10</span>*i+<span class="number">0.5</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fout &lt;&lt; <span class="number">357.9</span>;</span><br><span class="line">    fout.close();</span><br><span class="line">    <span class="function">ifstream <span class="title">fin1</span><span class="params">(<span class="string">"f1.txt"</span>)</span></span>;</span><br><span class="line">    <span class="function">ifstream <span class="title">fin2</span><span class="params">(<span class="string">"f2.txt"</span>)</span></span>;</span><br><span class="line">    <span class="keyword">float</span> g[<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">15</span>;i++) fin1 &gt;&gt; g[i];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">15</span>;i&lt;<span class="number">26</span>;i++) fin2 &gt;&gt; g[i];</span><br><span class="line">    sort(g,g+<span class="number">26</span>);</span><br><span class="line">    fout.open(<span class="string">"f3.txt"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fout &lt;&lt; g[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fout.close();</span><br><span class="line">    fin1.close();</span><br><span class="line">    fin2.close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实验八（第十一章）-实践题三"><a href="#实验八（第十一章）-实践题三" class="headerlink" title="实验八（第十一章） 实践题三"></a>实验八（第十一章） 实践题三</h1><p>【问题描述】</p><p>使用 getline 成员函数读入某个text文件（f5.txt）中的“一篇文章”（如可以是一个C++源程序，文件名由用户从键盘输入），而后将该文件的各空行以及各程序行中的注解均删除掉（认为该行中从第一个双撇符号“//”开始直至行末的所有符号为注解），并将删除注解后的结果行写出到另一个文件（f6.txt）中。</p><p>【输入形式】</p><p>逐行读入文件f5.txt的内容。</p><p>【输出形式】<br>【样例输入】</p><p>文件f5.txt的内容如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//This is test</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello World"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【样例输出】</p><p>文件f6.txt的内容如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello World"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题解：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ifstream <span class="title">fin</span><span class="params">(<span class="string">"f5.txt"</span>)</span></span>;</span><br><span class="line">    <span class="function">ofstream <span class="title">fout</span><span class="params">(<span class="string">"f6.txt"</span>)</span></span>;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">100</span>];<span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">while</span>(fin.getline(s,<span class="number">100</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">0</span>]==<span class="string">'\0'</span>||s[<span class="number">0</span>]==<span class="string">'/'</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;s[i]!=<span class="string">'\0'</span>;i++) <span class="keyword">if</span>(s[i]==<span class="string">'/'</span>) s[i]=<span class="string">'\0'</span>;</span><br><span class="line">        fout &lt;&lt; s;</span><br><span class="line">        fout &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fin.close();</span><br><span class="line">    fout.close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验六 类与对象</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E5%85%AD-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E5%85%AD-%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="复数类"><a href="#复数类" class="headerlink" title="复数类"></a>复数类</h1><p>【问题描述】自定义一个复数类型Complex，其中含有若干成员函数，使用该类可以完成复数的加法以及对复数的输出。请完成类定义，并编制主函数，说明Complex类对象，对定义的各成员函数进行调用。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> real; <span class="comment">//复数实部</span></span><br><span class="line">    <span class="keyword">double</span> imag; <span class="comment">//复数虚部</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Complex (); <span class="comment">//无参构造函数，将复数对象的实部和虚部均置为0</span></span><br><span class="line">    Complex (<span class="keyword">double</span> r, <span class="keyword">double</span> i); <span class="comment">//有参构造函数，设置对象的实部和虚部</span></span><br><span class="line">    <span class="function">Complex <span class="title">AddCom</span><span class="params">(Complex c2)</span></span>; <span class="comment">//调用者对象与对象c2相加，返回Complex类对象</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OutCom</span> <span class="params">()</span> </span>; <span class="comment">//输出调用者对象的有关数据（各分量）</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>具体 要求如下：</p><p>1、实现有参构造函数 Complex (double r, double i); </p><p>2、实现 Complex AddCom(Complex c2); 调用者对象与对象c2相加，返回Complex类对象</p><p>3、实现void OutCom () ;实现输出调用者对象的有关数据分量（一定要输出虚部的符号i），如果该数为纯虚数时,不需要输出实部，当虚部为0时，不需要输出实部。</p><p>4．编制主函数main，作用有参函数说明类对象cx,cy，使用 Complex 调用AddCom实现复数加法，并将相加的结果调用 OutCom方法以复数的形式输出。</p><p>【输入形式】输入包括a,b,c,d四个整数，第一个复数为a+bi，第二个复数为c+di</p><p>【输出形式】</p><p>【样例输入】1 2 3 4</p><p>【样例输出】4+6i</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Complex</span>&#123;</span></span><br><span class="line">    <span class="keyword">double</span> real;</span><br><span class="line">    <span class="keyword">double</span> imag;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Complex():real(<span class="number">0</span>),imag(<span class="number">0</span>)&#123;&#125;</span><br><span class="line">    Complex(<span class="keyword">double</span> r,<span class="keyword">double</span> i):real(r),imag(i)&#123;&#125;</span><br><span class="line">    <span class="function">Complex <span class="title">AddCom</span><span class="params">(Complex c2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OutCom</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line">Complex Complex::AddCom(Complex c2)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Complex <span class="title">temp</span><span class="params">(<span class="keyword">this</span>-&gt;real+c2.real,<span class="keyword">this</span>-&gt;imag+c2.imag)</span></span>;</span><br><span class="line">    <span class="keyword">return</span> temp; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Complex::OutCom()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(real==<span class="number">0</span>&amp;&amp;imag!=<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; imag &lt;&lt; <span class="string">"i"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(imag==<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; real;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; real &lt;&lt; <span class="string">"+"</span> &lt;&lt; imag &lt;&lt; <span class="string">"i"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c,d;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line">    Complex x(a,b),y(c,d);</span><br><span class="line">    x=x.AddCom(y);</span><br><span class="line">    x.OutCom();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="学生类"><a href="#学生类" class="headerlink" title="学生类"></a>学生类</h1><p>【问题描述】<br>设计一个学生类（CStudent），其私有数据成员：注册号、姓名、数学、外语、计算机课程的成绩。公有成员函数是：求三门课总成绩的函数 Sum；求三门课平均成绩的函数 Average；显示学生数据信息的函数 Display；设置学生数据信息的函数 SetData。</p><p>1．可按如下样式设计 CStudent类的各数据成员以及成员函数<br>class CStudent { //学生类 CStudent<br>       unsigned long reg_num; //数据成员：注册号<br>       char name[30]; //数据成员：姓名<br>       float math, eng, comp; //数据成员：数学、英语、计算机成绩<br>public: //公有成员函数<br>       float Sum(); //求三门课总成绩的函数 Sum<br>       float Average(); //求三门课平均成绩的函数 Average<br>       Display(); //显示学生数据信息的函数 Display<br>       SetData (unsigned long r, char* n, float m, float e, float c) ;<br>       //设置学生数据信息的函数 SetData<br>};</p><p>在主函数，通过使用“CStudent stu[150];”的语句，来说明一个CStudent类对象的数组stu，而后通过各对象stu[i]来处理并求取每一学生的总成绩、平均成绩等。</p><p>（1）输入本次欲处理的学生人数 TOTAL（小于等于 150 的正整数）；<br>（2）输入全班 TOTAL 个学生的有关信息，依次放入对象数组的各元素 stu[i]中（通过使用“stu[i].SetData(…);”形式的语句来实现）；<br>（3）对全班TOTAL个学生，依次通过对象stu[i]来求出其总成绩、平均成绩等（其中要使用形如“stu[i].Sum()”以及“stu[i].Average()”式样的对成员函数进行调用的语句），并同时求出全班学生总成绩最高者处于 stu 数组的下标位置idx_max，而后通过使用“stu[idx_max].Display();”来输出该学生有关的全部数据信息。</p><p>3．程序执行后的输入输出界面样式可设计为：<br>TOTAL=3<br>CStudent 1 : 100001 ma 78 86 90（注意空格）<br>CStudent 2 : 100002 li 85 91 88<br>CStudent 3 : 100003 hu 82 89 88<br>CStudent1.Sum=254,CStudent1.average=84.6667<br>CStudent2.Sum=264,CStudent2.average=88<br>CStudent3.Sum=259,CStudent3.average=86.3333<br>class_Sum_max=264<br>The infomation of the CStudent with class_Sum_max : 100002 li 85 91 88<br>【输入形式】<br>TOTAL=3<br>CStudent 1 : 100001 ma 78 86 90（注意空格）<br>CStudent 2 : 100002 li 85 91 88<br>CStudent 3 : 100003 hu 82 89 88<br>【输出形式】<br>CStudent1.Sum=254,CStudent1.average=84.6667<br>CStudent2.Sum=264,CStudent2.average=88<br>CStudent3.Sum=259,CStudent3.average=86.3333<br>class_Sum_max=264<br>The infomation of the CStudent with class_Sum_max : 100002 li 85 91 88</p><p>【样例输入】<br>3<br>100001 ma 78 86 90<br>100002 li 85 91 88<br>100003 hu 82 89 88<br>【样例输出】<br>TOTAL=3<br>CStudent 1 : 100001 ma 78 86 90（注意空格）<br>CStudent 2 : 100002 li 85 91 88<br>CStudent 3 : 100003 hu 82 89 88<br>CStudent1.Sum=254,CStudent1.average=84.6667<br>CStudent2.Sum=264,CStudent2.average=88<br>CStudent3.Sum=259,CStudent3.average=86.3333<br>class_Sum_max=264<br>The infomation of the CStudent with class_Sum_max : 100002 li 85 91 88</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cstudent</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> reg_num;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">float</span> math,eng,comp;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="function"><span class="keyword">float</span> <span class="title">Sum</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">float</span> <span class="title">Average</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">setData</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> r, <span class="keyword">char</span>* n, <span class="keyword">float</span> m, <span class="keyword">float</span> e, <span class="keyword">float</span> c)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">void</span> Cstudent::Display()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;reg_num&lt;&lt;<span class="string">" "</span>&lt;&lt;name&lt;&lt;<span class="string">" "</span>&lt;&lt;math&lt;&lt;<span class="string">" "</span>&lt;&lt;eng&lt;&lt;<span class="string">" "</span>&lt;&lt;comp&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> Cstudent::Sum()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (math+eng+comp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">float</span> Cstudent::Average()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (math+eng+comp)/<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Cstudent::setData(<span class="keyword">unsigned</span> <span class="keyword">long</span> r,<span class="keyword">char</span>* n,<span class="keyword">float</span> m,<span class="keyword">float</span> e,<span class="keyword">float</span> c)</span><br><span class="line">&#123;</span><br><span class="line">    reg_num=r;<span class="built_in">strcpy</span>(name,n);math=m;eng=e,comp=c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> num;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">float</span> math,eng,comp;</span><br><span class="line">    <span class="keyword">float</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> max_stu=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    Cstudent *cp=<span class="keyword">new</span> Cstudent[n];</span><br><span class="line">            <span class="keyword">int</span> i,temp;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; num &gt;&gt; name &gt;&gt; math &gt;&gt; eng &gt;&gt; comp;</span><br><span class="line">                cp[i].setData(num,name,math,eng,comp);</span><br><span class="line">                temp=cp[i].Sum();</span><br><span class="line">                <span class="keyword">if</span>(temp &gt; max)</span><br><span class="line">                &#123;</span><br><span class="line">                    max=temp;</span><br><span class="line">                    max_stu=i;</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"TOTAL="</span>&lt;&lt;n&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"CStudent "</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">" : "</span>;</span><br><span class="line">        cp[i].Display();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"CStudent"</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">".Sum="</span>&lt;&lt;cp[i].Sum();</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">",CStudent"</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">".average="</span>&lt;&lt;cp[i].Average()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"class_Sum_max="</span>&lt;&lt;max&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"The infomation of the CStudent with class_Sum_max : "</span>;</span><br><span class="line">        cp[max_stu].Display();</span><br><span class="line"><span class="keyword">delete</span> [] cp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验五 指针</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%BA%94-%E6%8C%87%E9%92%88/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%BA%94-%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串统计"><a href="#字符串统计" class="headerlink" title="字符串统计"></a>字符串统计</h1><p>【问题描述】</p><p>在进行文章重复度检查时，经常需要统计一段英文中的单词数量，并找出长度最长的单词。</p><p>设有如下定义：char str[500];</p><p>编写程序，通过利用cin.getline(str,500);实现从键盘输入一小段英文（其中可以包含空格，但在同一行），利用函数统计该段英文中包含几个单词，输出统计出的单词数量、最长单词的长度以及长度最长的单词，空格隔开。</p><p>注意：函数声明使用void split(char *str);如果有最长的单词不只一个，输出最先找到的那个。</p><p>【输入形式】一小段英文，不要超过500个字符</p><p>【输出形式】单词数量、最长单词的长度以及长度最长的单词，空格隔开。</p><p>【样例输入】welcome to china university of mining and technology</p><p>【样例输出】8 10 university</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">split</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num_word=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>,maxlen=<span class="number">0</span>,maxwhere=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;str[i]!=<span class="string">'\0'</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i+<span class="number">1</span>]==<span class="string">'\0'</span>&amp;&amp;str[i]&gt;=<span class="string">'a'</span>&amp;&amp;str[i]&lt;=<span class="string">'z'</span>) str[i+<span class="number">1</span>]=<span class="string">' '</span>;</span><br><span class="line">        <span class="keyword">if</span>(str[i]==<span class="string">' '</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            num_word++;</span><br><span class="line">            <span class="keyword">if</span>(temp&gt;maxlen)</span><br><span class="line">            &#123;</span><br><span class="line">                maxlen=temp;</span><br><span class="line">                maxwhere=i-temp;</span><br><span class="line">                temp=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> temp=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            temp++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; num_word &lt;&lt; <span class="string">" "</span> &lt;&lt; maxlen &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">while</span>(str[maxwhere]!=<span class="string">' '</span>) <span class="built_in">cout</span> &lt;&lt; str[maxwhere++];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">500</span>];</span><br><span class="line">    <span class="built_in">cin</span>.getline(str,<span class="number">500</span>);</span><br><span class="line">    split(str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="复数提取"><a href="#复数提取" class="headerlink" title="复数提取"></a>复数提取</h1><p>【问题描述】</p><p>编写如下原型的函数：</p><p>void split(double x,int<em>iPart,double</em>fPart);</p><p>提取出数据x的整数部分与小数部分，分别放于<em>iPart与</em>fPart处，由于形参iPart与fPart都是指针，从而可实现将这两个结果“带回”到主函数中。</p><p>在主函数中</p><p>输入一个数</p><p>输出它的整数部分和小数部分，用空格隔开。</p><p>提示：一个double类型数，强制类型转换后就是int，也就是整数部分，差为小数部分。这两个值用指针iPart和指针fPart带回（通过修改指针的目标变量值。）</p><p>【输入形式】一个数</p><p>【输出形式】整数部分 小数部分，用空格隔开</p><p>【样例输入】12.3<br>【样例输出】12 0.3</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">split</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> *iPart,<span class="keyword">double</span> *fPart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *fPart = x-(<span class="keyword">int</span>)x;</span><br><span class="line">    *iPart=(<span class="keyword">int</span>)x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> zhengshu;</span><br><span class="line">    <span class="keyword">double</span> xiaoshu,x;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">    split(x,&amp;zhengshu,&amp;xiaoshu);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; zhengshu &lt;&lt; <span class="string">" "</span> &lt;&lt; xiaoshu;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="找子串最后一次出现的头字符位置"><a href="#找子串最后一次出现的头字符位置" class="headerlink" title="找子串最后一次出现的头字符位置"></a>找子串最后一次出现的头字符位置</h1><p>【问题描述】</p><p>编制具有如下原型的函数findLast：</p><p>char<em>findLast(char</em>sourceStr,char*subStr);</p><p>findLast函数则要返回源串sourceStr中最后一次出现subStr子字符串的头字符位置。</p><p>而后编制主函数，输入两个字符串，将它们用作实参来调用这两个函数，如果返回NULL输出-1，否则输出子字符串出现时头字符在原字符串的下标，每个结果占一行。</p><p>要求实现程序中不可使用“string.h”头文件内有关寻找子串的标准库函数。</p><p>【输入形式】输入源串sourceStr，子字符串subStr。</p><p>【输出形式】子字符串subStr最后一次在源串sourceStr中出现的位置</p><p>【样例输入】</p><p> welcometochinauniversityofminingandtechnology</p><p> in</p><p>【样例输出】29</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span>*<span class="title">findLast</span><span class="params">(<span class="keyword">char</span>*sourcestr,<span class="keyword">char</span>*substr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ans=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> *temp1,*temp2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;sourcestr[i]!=<span class="string">'\0'</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sourcestr[i]==*substr)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">            temp1=sourcestr+i;</span><br><span class="line">            temp2=substr;</span><br><span class="line">            <span class="keyword">while</span>(*temp2!=<span class="string">'\0'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(*temp1!=*temp2) flag=<span class="number">0</span>;</span><br><span class="line">                temp1++;temp2++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag) ans=sourcestr+i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> sourcestr[<span class="number">500</span>],substr[<span class="number">500</span>];</span><br><span class="line">    <span class="keyword">char</span> *ans;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; sourcestr &gt;&gt; substr;</span><br><span class="line">    ans=findLast(sourcestr,substr);</span><br><span class="line">    <span class="keyword">if</span>(ans) <span class="built_in">cout</span> &lt;&lt; ans-sourcestr;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验四 数组</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E5%9B%9B-%E6%95%B0%E7%BB%84/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E5%9B%9B-%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<blockquote><p>数组的复制 | 围圈报数问题 | 求日期间隔(考虑闰年) | 统计单词的个数</p></blockquote><a id="more"></a><h1 id="实践题1"><a href="#实践题1" class="headerlink" title="实践题1"></a>实践题1</h1><p>【问题描述】编程序，实现如下功能：</p><p>（1）定义两个一维数组x，y，不超过50个元素。</p><p>（2）从键盘输入k个整数到数组x中。</p><p>（3）计算x中数据的平均值ave及大于平均值的元素个数n并输出。</p><p>（4）将数组x中数据复制到数组y中，重复的数据只存储一次，最后输出y中的数据。</p><p>【输入形式】输入两行，第一行为输入的数据个数，第二行若干整数，每个整数后面有一个空格用于分隔；<br>【输出形式】第一行若干整数，每个整数后面有一个空格，最后一个空格后换行；第二行若干整数，每个整数后面有一个空格，最后一个空格后不需要换行；</p><p>【样例输入】<br>   6<br> 6 3 4 3 2 9</p><p>【样例输出】<br> 4.5 2<br>6 3 4 2 9 </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> x[<span class="number">51</span>];</span><br><span class="line">    x[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> k,i,j,cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> ave;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; x[i];</span><br><span class="line">        x[<span class="number">0</span>]+=x[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ave=(<span class="keyword">float</span>)x[<span class="number">0</span>]/k;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ave &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++) <span class="keyword">if</span>(x[i]&gt;ave)cnt++;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;i;j++) <span class="keyword">if</span>(x[j]==x[i]) flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(flag) <span class="built_in">cout</span> &lt;&lt; x[i] &lt;&lt; <span class="string">" "</span>; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题2"><a href="#实践题2" class="headerlink" title="实践题2"></a>实践题2</h1><p>【问题描述】有 12 人围坐成一圈玩报数游戏，从1号人员开始顺时针报数，报到k的人员被淘汰出局；接着仍沿顺时针方向从被淘汰出局者的下一人员又重新从 1 开始报数，报到 k的人被淘汰；如此继续，直到最后只剩下一个人时停止。请编写程序输出最后所剩那个人的编号。</p><p>注意：<br>（1）假设参加游戏的人的编号沿顺时针方向依次为 1 到 12，可以使用数组来存放各数据；</p><p>   （2）k&gt;1，由用户通过 cin 输入指定。</p><p>【输入形式】输入一个整数，代表报数值；<br>【输出形式】输出一个整数，即最后剩下的人的编号；<br>【样例输入】3<br>【样例输出】10</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">12</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> k,a[MAX+<span class="number">1</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAX<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(now&gt;MAX) now-=MAX;</span><br><span class="line">            <span class="keyword">if</span>(j==k&amp;&amp;a[now]!=<span class="number">1</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(j==k&amp;&amp;a[now]==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                now++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[now]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                j++;</span><br><span class="line">                now++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[now]==<span class="number">1</span>)now++;</span><br><span class="line">        &#125;</span><br><span class="line">        a[now]=<span class="number">1</span>;</span><br><span class="line">        now++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=MAX;i++) cout &lt;&lt; a[i] &lt;&lt; " ";</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; endl;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAX;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题3"><a href="#实践题3" class="headerlink" title="实践题3"></a>实践题3</h1><p>【问题描述】小宗想知道两个日期之间所间隔的天数，他希望有一个日期计算器，输入两个日期后能够自动计算之间的天数。要求：设计相应的函数完成天数的计算，在主函数中验证正确性。</p><p>【输入形式】按照年月日的顺序输入两个日期，年月日之间用一个空格分隔；<br>【输出形式】输出两个日期之间的天数，即一个整数，整数后不需要换行；<br>【样例输入】</p><p>  2016 3 6<br>  2017 1 1</p><p>【样例输出】301<br>【样例说明】输入输出中不要有中文提示，最后的输出不需要换行。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_run</span><span class="params">(<span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(year%<span class="number">100</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">400</span>==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> g[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> nian1,yue1,ri1;</span><br><span class="line">    <span class="keyword">int</span> nian2,yue2,ri2;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; nian1 &gt;&gt; yue1 &gt;&gt; ri1;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; nian2 &gt;&gt; yue2 &gt;&gt; ri2;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=nian1;i&lt;nian2;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_run(i)) ans+=<span class="number">366</span>;</span><br><span class="line">        <span class="keyword">else</span> ans+=<span class="number">365</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算后一个年份的天数 </span></span><br><span class="line">    <span class="keyword">if</span>(is_run(nian2))g[<span class="number">2</span>]=<span class="number">29</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;yue2;i++) ans+=g[i];</span><br><span class="line">    ans+=ri2;</span><br><span class="line">    g[<span class="number">2</span>]=<span class="number">28</span>;</span><br><span class="line">    <span class="comment">//减去最初年份的天数</span></span><br><span class="line">    <span class="keyword">if</span>(is_run(nian1))g[<span class="number">2</span>]=<span class="number">29</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;yue1;i++) ans-=g[i];</span><br><span class="line">    ans-=ri1;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题4"><a href="#实践题4" class="headerlink" title="实践题4"></a>实践题4</h1><p>【问题描述】对于整型数组a[10]和b[10]，编制程序完成下列任务:</p><p>（1）由用户从键盘为两个数组输入值；</p><p>（2）求出两个数组的最大值和最小值；</p><p>（3）把数组a和b中的整数分别从小到大和从大到小排序；</p><p>（4）把两个有序的数组a和b组成一个长度为20的有序数组c[20]，使数组c的顺序为从小到大。</p><p>【输入形式】输入两行整数，每行10个，第一行是数组a里的数组，第二行是数组b里的数值；<br>【输出形式】输出五行，第一行有两个整数，分别是数组a的最大值和最小值，两个整数之间用一个空格分隔；第二行有两个整数，分别是数组b的最大值和最小值，两个整数之间用一个空格分隔；第三行按照从小到大的顺序输出数组a里的数值，每个数字后面有一个空格，最后一个数字后面也有空格；第四行按照从大到小的顺序输出数组b里的数值，每个数字后面有一个空格，最后一个数字后面也有空格；第五行按照从小到大的顺序输出合并后数组c里的数值，每个数字后面有一个空格，最后一个数字后面也有空格。</p><p>【样例输入】</p><p>2 5 9 1 3 4 0 6 7 8</p><p>10 5 25 9 6 3 7 1 2 13<br>【样例输出】</p><p>9 0 </p><p>25 1 </p><p>0 1 2 3 4 5 6 7 8 9 </p><p>25 13 10 9 7 6 5 3 2 1</p><p>0 1 1 2 2 3 3 4 5 5 6 6 7 7 8 9 9 10 13 25<br>【样例说明】请严格按照输入输出形式的规定。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span> g[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> min=g[i];</span><br><span class="line">        <span class="keyword">int</span> min_where=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(min&gt;g[j])</span><br><span class="line">            &#123;</span><br><span class="line">                min=g[j];</span><br><span class="line">                min_where=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        temp = g[i];</span><br><span class="line">        g[i] = g[min_where];</span><br><span class="line">        g[min_where]=temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">11</span>],b[<span class="number">11</span>],c[<span class="number">21</span>];</span><br><span class="line">    <span class="keyword">int</span> amax=<span class="number">0</span>,amin=<span class="number">0x7fffffff</span>,bmax=<span class="number">0</span>,bmin=<span class="number">0x7fffffff</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;amax)amax=a[i];</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;amin)amin=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; b[i];</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;bmax)bmax=b[i];</span><br><span class="line">        <span class="keyword">if</span>(b[i]&lt;bmin)bmin=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; amax &lt;&lt; <span class="string">" "</span> &lt;&lt; amin &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; bmax &lt;&lt; <span class="string">" "</span> &lt;&lt; bmin &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    sort(a,<span class="number">10</span>);</span><br><span class="line">    sort(b,<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) <span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">" "</span>;<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">10</span>;i&gt;=<span class="number">1</span>;i--) <span class="built_in">cout</span> &lt;&lt; b[i] &lt;&lt; <span class="string">" "</span>;<span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) c[i]=a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">11</span>;i&lt;=<span class="number">20</span>;i++) c[i]=b[i<span class="number">-10</span>];</span><br><span class="line">    sort(c,<span class="number">20</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;i++) <span class="built_in">cout</span> &lt;&lt; c[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题5"><a href="#实践题5" class="headerlink" title="实践题5"></a>实践题5</h1><p>【问题描述】利用cin.getline()函数从键盘录入一句英文，其中每个单词之间用一个空格隔开，最后用’.’结束。统计该句话中单词的个数，并依次输出每个单词。输出个数后换行，输出每个单词后也换行。注意：在本平台下，cin.getline()函数的使用方式如下：</p><p>char s[50];</p><p>cin.getline(s,50); //最多存储49个字符</p><p>【输入形式】输入一句英文，其中每个单词之间用一个空格隔开，最后一个单词后面用英文的’.’作为结束；<br>【输出形式】输出每个单词后换行，最后一行输出单词的数量。<br>【样例输入】I like juice.<br>【样例输出】</p><p> I</p><p>like</p><p> juice</p><p>  3<br>【样例说明】请严格按照规定的格式输入和输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">50</span>];</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>.getline(s,<span class="number">50</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i]!=<span class="string">'\0'</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">' '</span>||s[i]==<span class="string">'.'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; cnt;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验三 函数</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%B8%89-%E5%87%BD%E6%95%B0/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%B8%89-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="实践题1"><a href="#实践题1" class="headerlink" title="实践题1"></a>实践题1</h1><p>【问题描述】编写具有如下原型的函数：bool f(long x);其功能为：若整数 x 仅由偶数字（0、2、4、6、8）组成时（如 x=26480），函数返回 true，否则返回 false（如当 x=22034 时）。并编制主函数对它进行调用。</p><p>【输入形式】只能是一个整数数字，中间不能有空格等其他字符；<br>【输出形式】只输出true或者false，后面不要换行。<br>【样例输入】26480<br>【样例输出】true<br>【样例说明】输入输出时不要带有其他说明文字或符号</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">f</span><span class="params">(<span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x%<span class="number">10</span>%<span class="number">2</span>!=<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">x/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> a;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">    <span class="keyword">if</span>(f(a)) <span class="built_in">cout</span> &lt;&lt; <span class="string">"true"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"false"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题2"><a href="#实践题2" class="headerlink" title="实践题2"></a>实践题2</h1><p>【问题描述】编写具有如下原型的函数：void find(int i, int n); 实现从 i 开始找起，连续找出 n 个素数并显示在屏幕上。如：实参为10 和 8 后，输出的 8 个素数应为：11，13，17，19，23，29，31，37。</p><p>【输入形式】输入两个整数，前一个是查找的起始数字，后一个是指定查找几个素数；<br>【输出形式】输出指定数量的素数，每个素数后面加一个空格作为分隔符，最后一个数字后面可以有一个空格，但不需要换行。<br>【样例输入】13 4<br>【样例输出】13 17 19 23<br>【样例说明】输出结果中除了题目中说明的空格，不要加其他文字和符号。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">2</span>; j &lt;=<span class="built_in">sqrt</span> (n); j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n%j == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(is_prime(i))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            n--;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    find(a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题3"><a href="#实践题3" class="headerlink" title="实践题3"></a>实践题3</h1><p>【问题描述】输入正整数start和end，找出从start到end这一区间段内哪一个数n的因子和最大，并将该n及其因子和maxSum作为结果输出。例如，当start=10，end=15时，所求的n应该为12，而maxSum应该为16。</p><p>要求：设计函数计算n的因子和，其中因子和为包括1但不包括n本身的所有因子之和。</p><p>【输入形式】两个整数，用来指定查找的起始数字和结束数字；<br>【输出形式】两个整数，中间用一个空格隔开，前一个是因子和最大的数字，后一个是因子和，最后一个数字后面不要有空格和换行。<br>【样例输入】10 15<br>【样例输出】12 16<br>【样例说明】输出不要有多余的空格和换行。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">yin_sum</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">            sum+=i;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> start,end,maxsum=<span class="number">-1</span>,temp,aim=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; start &gt;&gt; end;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=start;i&lt;=end;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp=yin_sum(i);</span><br><span class="line">        <span class="keyword">if</span>(temp &gt; maxsum) </span><br><span class="line">        &#123;</span><br><span class="line">            maxsum=temp;</span><br><span class="line">            aim=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; aim &lt;&lt; <span class="string">" "</span> &lt;&lt; maxsum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题4"><a href="#实践题4" class="headerlink" title="实践题4"></a>实践题4</h1><p><img src="https://img-blog.csdnimg.cn/20191124220926193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE1OTg5NDcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_hui</span><span class="params">(<span class="keyword">long</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> copy=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> num=n;</span><br><span class="line">    <span class="keyword">while</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        copy=copy*<span class="number">10</span>+num%<span class="number">10</span>;</span><br><span class="line">        num/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (n==copy?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(is_hui(i)&amp;&amp;is_hui(i*<span class="number">7</span>)&amp;&amp;is_hui(i*i*<span class="number">3</span>))<span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题5"><a href="#实践题5" class="headerlink" title="实践题5"></a>实践题5</h1><p>【问题描述】键盘输入正整数 n，求出n与其反序数x之和并输出。例如，输入2038，n+x = 2038 +8302 =10340，输出应为10340。要求：编写函数实现数据转换成反序数值。</p><p>【输入形式】输入一个整数；<br>【输出形式】输出一个整数；<br>【样例输入】2038<br>【样例输出】10340<br>【样例说明】不要任何输入输出的文字提示。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=ans*<span class="number">10</span>+n%<span class="number">10</span>;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; fun(n)+n;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验二 程序控制</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%BA%8C-%E7%A8%8B%E5%BA%8F%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="实践题1"><a href="#实践题1" class="headerlink" title="实践题1"></a>实践题1</h1><p>【问题描述】</p><p>利用循环结构，编制程序显示出如下“图形”。</p><p>1</p><p>131</p><p>13531</p><p>1357531</p><p>135797531</p><p>【输入形式】打印图形的行数</p><p>【输出形式】打印图形</p><p>【样例输入】3</p><p>【样例输出】</p><p>1</p><p>131</p><p>13531</p><p>【样例说明】每行输出顶格，不需要中间的空格。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++) <span class="built_in">cout</span> &lt;&lt; j*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--) <span class="built_in">cout</span> &lt;&lt; j*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题2"><a href="#实践题2" class="headerlink" title="实践题2"></a>实践题2</h1><p>【问题描述】</p><p>某商店出售四种商品: A商品每公斤2.75元；B商品每个12.5 元；C商品每米26.8 元；D商品每台512元，超过3台优惠10%，超过8台优惠15%。设计一个计算价格的程序，通过输入购买四种商品的数量，计算并显示每种商品应付金额以及总金额。 </p><p>【输入形式】</p><p>输入每种商品的数量。</p><p>【输出形式】</p><p>输出每种商品的应付金额和总金额。</p><p>【样例输入】</p><p>   1 2 3 2</p><p>【样例输出】</p><p>A:2.75</p><p>B:25</p><p>C:80.4</p><p>D:1024</p><p>total:1132.15</p><p>【样例说明】输出每种数据占一行。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,c,d;</span><br><span class="line">    <span class="keyword">double</span> a_sum,b_sum,c_sum,d_sum;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"A:"</span> &lt;&lt; (a_sum=a*<span class="number">2.75</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"B:"</span> &lt;&lt; (b_sum=b*<span class="number">12.5</span>)&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"C:"</span> &lt;&lt; (c_sum=c*<span class="number">26.8</span>)&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">if</span>(d&gt;=<span class="number">0</span>&amp;&amp;d&lt;=<span class="number">3</span>) d_sum=d*<span class="number">512</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(d&gt;<span class="number">3</span>&amp;&amp;d&lt;=<span class="number">8</span>) d_sum=d*<span class="number">512</span>*<span class="number">0.9</span>;</span><br><span class="line">            <span class="keyword">else</span> d_sum=d*<span class="number">512</span>*<span class="number">0.85</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"D:"</span> &lt;&lt; d_sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"total:"</span> &lt;&lt; (a_sum+b_sum+c_sum+d_sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题3"><a href="#实践题3" class="headerlink" title="实践题3"></a>实践题3</h1><p>【问题描述】</p><p>求n以内被3除余1且个位数为6的所有整数（如16、46、…、286等）并显示在屏幕上。</p><p>【输入形式】</p><p> 输入某个数</p><p>【输出形式】</p><p>  输出所有结果，空格隔开</p><p>【样例输入】</p><p> 300</p><p>【样例输出】</p><p> 16 46 76 106 136 166 196 226 256 286</p><p>【样例说明】不要有多余字符。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(i%<span class="number">3</span>==<span class="number">1</span>&amp;&amp;i%<span class="number">10</span>==<span class="number">6</span>) <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题4"><a href="#实践题4" class="headerlink" title="实践题4"></a>实践题4</h1><p>【问题描述】</p><p>编写一程序统计参赛选手的得分，计分标准为去掉一个最高分和一个最低分后，对剩余得分求平均值。要求首先从键盘输入评委的个数num，然后输入num个分数（分数为小于等于10的一个正实数），输出最终得分。</p><p>【输入形式】</p><p>输入评委个数和各自分数。</p><p>【输出形式】</p><p>输出得分。</p><p>【样例输入】</p><p> 5<br>9.2 9.6 9.5 9.7 9.7</p><p>【样例输出】</p><p>9.6</p><p>【样例说明】只输出计算最终得分。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">double</span> min=<span class="number">10</span>,max=<span class="number">0</span>,sum=<span class="number">0</span>,num;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">        <span class="keyword">if</span>(min&gt;num) min=num;</span><br><span class="line">        <span class="keyword">if</span>(max&lt;num) max=num;</span><br><span class="line">        sum+=num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (sum-min-max)/(n<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题5"><a href="#实践题5" class="headerlink" title="实践题5"></a>实践题5</h1><p>【问题描述】</p><p>设计一个程序，对于用户输入的任意正整数a（a≥1）和b（b≥2），求出满足bn≤a的最大整数n。</p><p>【输入形式】</p><p>   两个数。</p><p>【输出形式】</p><p>   一个数据。</p><p>【样例输入】</p><p>   30 5</p><p>【样例输出】</p><p>   2</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b,ans;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    ans = <span class="built_in">log</span>(a)/<span class="built_in">log</span>(b);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】实验一 基本数据类型与运算符</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%B8%80-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E5%AE%9E%E9%AA%8C%E4%B8%80-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="实践题3"><a href="#实践题3" class="headerlink" title="实践题3"></a>实践题3</h1><p>【问题描述】  </p><p>编程序，任意输入5个数据（其中第一个和第三个为整型数据，第二个和第四个为实型数据，第五个为一个字符型数据），求出它们的累加和sum，并将结果显示在屏幕上。</p><p>【输入形式】</p><p>  10 2.3 5 3.3 A<br>【输出形式】</p><p> 85.6<br>【样例输入】</p><p>  10 2.3 5 3.3 A</p><p>【样例输出】</p><p>  85.6<br>【样例说明】只输出结果即可，不需要有其他的字符。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,c;</span><br><span class="line">    <span class="keyword">double</span> b,d,ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> e;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d &gt;&gt; e;</span><br><span class="line">    ans = a+b+c+d+e;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题4"><a href="#实践题4" class="headerlink" title="实践题4"></a>实践题4</h1><p>【问题描述】</p><p> 编程序，从键盘输入整数x、y，计算出x2+x–y以及w=2πx+πy2，并将结果显示在屏幕上。</p><p>【输入形式】3 4</p><p>【输出形式】8 69.115</p><p>【样例输入】3 4</p><p>【样例输出】8 69.115</p><p>【样例说明】数据输出将两式结果输出即可，中间使用空格。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; (x*x + x - y) &lt;&lt; <span class="string">" "</span> &lt;&lt; (<span class="number">2</span>*<span class="number">3.1415926</span>*x + <span class="number">3.1415926</span>*y*y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="实践题5"><a href="#实践题5" class="headerlink" title="实践题5"></a>实践题5</h1><p>【问题描述】 </p><p>编写一个程序，当用户按照“时、分、秒”格式输入两个时刻后，求出这两个时刻的时间差（按秒计算）并打印到屏幕上。</p><p>【输入形式】</p><p>  12 20 30 13 30 30<br>【输出形式】</p><p> 4200<br>【样例输入】</p><p>  12 20 30 13 30 30</p><p>【样例输出】</p><p> 4200<br>【样例说明】输入顺序为第一个时刻的时分秒（之间用空格），空格，第二个时刻的时分秒。输出相差秒数为正数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a1,b1,c1,a2,b2,c2;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a1 &gt;&gt; b1 &gt;&gt; c1 &gt;&gt; a2 &gt;&gt; b2 &gt;&gt; c2;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">abs</span>((a1*<span class="number">3600</span>+b1*<span class="number">60</span>+c1)-(a2*<span class="number">3600</span>+b2*<span class="number">60</span>+c2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++实践作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】第11章作业</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC11%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC11%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<hr><hr><h1 id="三个选择题"><a href="#三个选择题" class="headerlink" title="三个选择题"></a>三个选择题</h1><p><img src="https://img-blog.csdnimg.cn/20191124214301928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE1OTg5NDcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="Shape类的继承"><a href="#Shape类的继承" class="headerlink" title="Shape类的继承"></a>Shape类的继承</h1><p>【问题描述】定义一个Shape基类，在此基础上派生出Rectangle和Circle类，二者都有GetArea（）函数计算对象的面积,使用Rectangle类创建一个派生类Square。并应用相应类的对象测试。【注意：π取3.14】</p><p>【输入形式】三种形状基本数据。</p><p>【输出形式】对应每种形状的面积。<br><img src="https://img-blog.csdnimg.cn/20191124214139615.png" alt="在这里插入图片描述"><br>【样例说明】第一行的数据为基本数据（四个），分别为圆形半径，长方形长和宽，正方形边长。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shape</span> &#123;</span> </span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line">Shape()&#123;&#125;  </span><br><span class="line">~Shape()&#123;&#125; </span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">float</span> <span class="title">GetArea</span><span class="params">()</span> </span>&#123;<span class="keyword">return</span> <span class="number">-1</span>;&#125; </span><br><span class="line">&#125;; </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> :</span><span class="keyword">public</span> Shape </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">float</span> r;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Circle(<span class="keyword">float</span> rr):r(rr)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span>  <span class="keyword">float</span>  <span class="title">GetArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">3.14</span>*r*r);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span>:</span><span class="keyword">public</span> Shape </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="keyword">float</span> l,h;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Rectangle(<span class="keyword">float</span> ll,<span class="keyword">float</span> hh):l(ll),h(hh)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span>  <span class="keyword">float</span>  <span class="title">GetArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (l*h);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Square</span>:</span> <span class="keyword">public</span> Rectangle</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Square(<span class="keyword">float</span> ss):Rectangle(ss,ss)&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span>  <span class="keyword">float</span>  <span class="title">GetArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (h*l);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">Shape *sp; </span><br><span class="line"><span class="keyword">int</span> radium,length,hight,side;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;radium&gt;&gt;length&gt;&gt;hight&gt;&gt;side;</span><br><span class="line">sp=<span class="keyword">new</span> Circle(radium); </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"The area of the circle is "</span>&lt;&lt;sp-&gt;GetArea()&lt;&lt;<span class="built_in">endl</span>;   </span><br><span class="line">sp=<span class="keyword">new</span> Rectangle(length,hight); </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"The area of the rectangle is "</span>&lt;&lt;sp-&gt;GetArea()&lt;&lt;<span class="built_in">endl</span>;   </span><br><span class="line">sp=<span class="keyword">new</span> Square(side); </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"The area of the Square is "</span>&lt;&lt;sp-&gt;GetArea()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">delete</span> sp;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++理论作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】第9章作业</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC9%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC9%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="三角形类"><a href="#三角形类" class="headerlink" title="三角形类"></a>三角形类</h1><p>【问题描述】</p><p>先定义一个能描述平面上一条线段的类Beeline，包含私有数据成员为线段两个端点的坐标(X1，Y1，X2，Y2)，在类中定义形参默认值为0的构造函数，计算线段长度的公有成员函数Length()，显示线段两个端点坐标的公有成员函数show()。然后再定义一个能描述平面上三角形的类Triangle，其数据成员为用Beeline定义的对象line1，line2，line3。在类中定义的构造函数要能对对象成员进行初始化。再定义计算三角形面积的函数Area()及显示三条边端点坐标及面积的函数Print()，Print()函数中可调用show()函数显示三条边两端点坐标。</p><p>【输入形式】</p><p>输入三角形三个顶点的坐标(x1,y1)、(x2,y2)、(x3,y3)。</p><p>其中 -100 &lt;= x1,x2,x3,y1,y2,y3 &lt;= 100，且为整数。</p><p>在主函数中创建类对象tri(x1,y1,x2,y2,x3,y3)，对应line1(x1, y1, x2, y2),line2(x2,y2,x3,y3),line3(x3,y3,x1,y1)。</p><p>【输出形式】</p><p>调用Print()函数，将三角形三条边的端点坐标及面积。面积保留两位小数。</p><p>具体格式见样例。</p><p>【样例输入】</p><p>0 0</p><p>0 4</p><p>3 0</p><p>【样例输出】</p><p>Three edges’ points are listed as follows:</p><p>(0, 0),(0, 4)</p><p>(0, 4),(3, 0)</p><p>(3, 0),(0, 0)</p><p>The area of this triangle is: 6.00.</p><p>【提示】</p><p>1.严格按照输出样例输出，建议复制。 </p><p>2.计算面积建议用海伦公式。</p><p>3.严格控制保留2位小数。</p><p>4.如果没有严格使用类，得分为0。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt; </span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Beeline</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> x1;</span><br><span class="line">    <span class="keyword">int</span> x2;</span><br><span class="line">    <span class="keyword">int</span> y1;</span><br><span class="line">    <span class="keyword">int</span> y2;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Beeline(<span class="keyword">int</span> xx1=<span class="number">0</span>,<span class="keyword">int</span> yy1=<span class="number">0</span>,<span class="keyword">int</span> xx2=<span class="number">0</span>,<span class="keyword">int</span> yy2=<span class="number">0</span>):x1(xx1),y1(yy1),x2(xx2),y2(yy2)&#123;&#125;; </span><br><span class="line">    <span class="function"><span class="keyword">float</span> <span class="title">length</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">float</span> Beeline::length()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">sqrt</span>((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Beeline::show()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"("</span> &lt;&lt; x1 &lt;&lt; <span class="string">", "</span> &lt;&lt; y1 &lt;&lt; <span class="string">"),("</span> &lt;&lt; x2 &lt;&lt;<span class="string">", "</span> &lt;&lt; y2 &lt;&lt;<span class="string">")"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Triangle</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Beeline line1,line2,line3;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Triangle(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2,<span class="keyword">int</span> x3,<span class="keyword">int</span> y3):line1(x1,y1,x2,y2),line2(x2,y2,x3,y3),line3(x3,y3,x1,y1)&#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">float</span> <span class="title">area</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">float</span> Triangle::area()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> a=line1.length();</span><br><span class="line"><span class="keyword">float</span> b=line2.length();</span><br><span class="line"><span class="keyword">float</span> c=line3.length();</span><br><span class="line"><span class="keyword">float</span> p=(a+b+c)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">sqrt</span>(p*(p-a)*(p-b)*(p-c)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Triangle::print()</span><br><span class="line">&#123;</span><br><span class="line">line1.show();</span><br><span class="line">line2.show();</span><br><span class="line">line3.show();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x1,y1,x2,y2,x3,y3;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2 &gt;&gt; x3 &gt;&gt; y3;</span><br><span class="line"><span class="function">Triangle <span class="title">t</span><span class="params">(x1,y1,x2,y2,x3,y3)</span></span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Three edges' points are listed as follows:"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">t.print();</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"The area of this triangle is: "</span>;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span>.setf(<span class="built_in">std</span>::ios::fixed);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setprecision(<span class="number">2</span>)&lt;&lt; t.area() &lt;&lt; <span class="string">"."</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="学生成绩类"><a href="#学生成绩类" class="headerlink" title="学生成绩类"></a>学生成绩类</h1><p>【问题描述】设计学生成绩类Score。在主函数中定义学生成绩对象数组s[]。用Sum()计算每个学生的总成绩、用Show()显示每个学生的成绩。增加静态成员函数getAvg()，用于返回学生的总平均分。通过增加合适的成员、修改成员函数等完成这一功能。</p><p>【输入形式】</p><p>包含一组测试数据。第一行输入一个整数n（1&lt;=n&lt;=100）。</p><p>接下来n行。每行先输入一个整数op：</p><p>当op==1时，输入x, y, z。代表输入一位新同学i(i从1开始编号)的语文、数学、英语成绩，无需输出。</p><p>当op==2时，输入i，输出第i同学的总成绩。数据保证这位同学的成绩已经录入。</p><p>当op==3时，输入i，依次输出第i同学的语文数学英语成绩，成绩之间用空格隔开。</p><p>当op==4时，输出当前已经录入学生的总平均分，结果保留两位小数。</p><p>(1&lt;=n&lt;=100, 1&lt;=id&lt;=10, 1&lt;=op&lt;=3, 0&lt;=x,y,z&lt;=100,全部输入都为整型数)</p><p>【输出形式】<br><img src="https://img-blog.csdnimg.cn/20191124213623161.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE1OTg5NDcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>注意输入之间会有一些输出，但测试只看cout结果。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Score</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> Chinese, Math, English;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> TotalScore;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> TotalStudent;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Score() &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setScore</span> <span class="params">(<span class="keyword">int</span> c, <span class="keyword">int</span> m, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">        Chinese=c;</span><br><span class="line">        Math = m;</span><br><span class="line">        English = e;</span><br><span class="line">        TotalStudent++;</span><br><span class="line">        TotalScore = TotalScore + Chinese + Math + English;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Sum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Chinese+Math+English;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;Chinese&lt;&lt;<span class="string">" "</span>&lt;&lt;Math&lt;&lt;<span class="string">" "</span>&lt;&lt;English&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="keyword">static</span> <span class="title">getAve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">double</span>(TotalScore)/<span class="keyword">double</span>(TotalStudent);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> Score::TotalScore=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> Score::TotalStudent=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, op, i, c, m, e;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">1</span>;</span><br><span class="line">    Score sco[<span class="number">11</span>];</span><br><span class="line">    <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; c &gt;&gt; m &gt;&gt; e;</span><br><span class="line">            sco[id].setScore(c,m,e);id++;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; i;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;sco[i].Sum()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; i;</span><br><span class="line">            sco[i].Show();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;fixed&lt;&lt;setprecision(<span class="number">2</span>)&lt;&lt;Score::getAve()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="电视类"><a href="#电视类" class="headerlink" title="电视类"></a>电视类</h1><p>【问题描述】</p><p> 补全设计一个TV类和一个Remote类。Remote类的成员函数是TV类的友元， 电视类有状态、频道和音量基本属性，默认初始频道为5，默认初始音量为20。状态有开和关（-1表示关机状态，其他为开机状态）。</p><p> 在主函数根据输入的op值进行不同操作。补全代码使程序满足如下要求。</p><p>【输入形式】</p><p>当op==1时，</p><p>输入电视操作命令如下：</p><p>OFF_ON（切换电视开关机状态）</p><p>VOL_UP（电视音量+1）</p><p>VOL_DOWN（电视音量-1）</p><p>CHA_NEXT（电视频道+1）</p><p>CHA_PRE(电视频道-1)</p><p>CHA_TO x（0&lt;=x&lt;=100，将电视频道切到x）</p><p>VOL_TO x（0&lt;=x&lt;=100，将电视音量切到x）</p><p>其中CHA_TO与VOL_TO通过调用友元类实现。</p><p>当op==2时，输出当前电视状态。</p><p>当op==3时，结束程序。</p><p>【输出形式】</p><p>当op==2时，输出当前电视状态，具体格式见样例。<br><img src="https://img-blog.csdnimg.cn/20191124213828338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE1OTg5NDcz,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TV</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Remote</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Remote() &#123;&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">volume_to</span><span class="params">(TV &amp;tv, <span class="keyword">int</span> x)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">channel_to</span><span class="params">(TV &amp;tv, <span class="keyword">int</span> x)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TV</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">int</span> state;</span><br><span class="line">    <span class="keyword">int</span> channel;</span><br><span class="line">    <span class="keyword">int</span> volume;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">void</span> Remote::volume_to(TV &amp;tv, <span class="keyword">int</span> x);</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">void</span> Remote::channel_to(TV &amp;tv, <span class="keyword">int</span> x);</span><br><span class="line">    TV() &#123;&#125;;</span><br><span class="line">    TV(<span class="keyword">int</span> st) :state(st),volume(<span class="number">20</span>),channel(<span class="number">5</span>)&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onoff</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                state = -state;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cha_next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            channel++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">cha_pre</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            channel--;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">vol_up</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            volume++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">vol_down</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            volume--;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(state == <span class="number">-1</span>) &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The TV is OFF"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The TV is ON"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The channel is "</span> &lt;&lt; channel &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"The volume is "</span> &lt;&lt; volume &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Remote::volume_to(TV &amp;tv, <span class="keyword">int</span> x) &#123;</span><br><span class="line">    tv.volume = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Remote::channel_to(TV &amp;tv, <span class="keyword">int</span> x) &#123;</span><br><span class="line">    tv.channel = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, op;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="function">TV <span class="title">tv</span><span class="params">(<span class="number">-1</span>)</span></span>;</span><br><span class="line">    Remote rem;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">            <span class="keyword">if</span>(s == <span class="string">"OFF_ON"</span>) tv.onoff();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">"VOL_UP"</span>) tv.vol_up();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">"VOL_DOWN"</span>) tv.vol_down();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">"CHA_NEXT"</span>) tv.cha_next();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">"CHA_PRE"</span>) tv.cha_pre();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">"CHA_TO"</span>) &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">                rem.channel_to(tv, x);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(s == <span class="string">"VOL_TO"</span>) &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">                rem.volume_to(tv, x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(op == <span class="number">2</span>)&#123;</span><br><span class="line">            tv.print();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++理论作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】第6章作业</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC6%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC6%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="插入字符串"><a href="#插入字符串" class="headerlink" title="插入字符串"></a>插入字符串</h1><p>【问题描述】从键盘输入一个字符串，并在串中的第一次出现的最大元素后边插入字符串”ab”。</p><p>【输入形式】任意输入一个字符串</p><p>【输出形式】在串中的最大元素后边插入字符串”ab”</p><p>【样例输入】123csCUMT<br>【样例输出】123csabCUMT</p><p>【样例说明】为了保证输入的字符串有空格，请使用cin.getline(char* , int);</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxnum=<span class="number">0</span>,maxwhere=<span class="number">0</span>,i;</span><br><span class="line"><span class="keyword">char</span> str[<span class="number">500</span>];</span><br><span class="line"><span class="built_in">cin</span>.getline(str,<span class="number">500</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;str[i]!=<span class="string">'\0'</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="keyword">int</span>)str[i]&gt;maxnum)</span><br><span class="line">    &#123;</span><br><span class="line">    maxnum=(<span class="keyword">int</span>)str[i];</span><br><span class="line">    maxwhere=i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=maxwhere;i++) <span class="built_in">cout</span> &lt;&lt; str[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"ab"</span>;</span><br><span class="line"><span class="keyword">for</span>(i=maxwhere+<span class="number">1</span>;str[i]!=<span class="string">'\0'</span>;i++) <span class="built_in">cout</span> &lt;&lt; str[i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="统计整数个数"><a href="#统计整数个数" class="headerlink" title="统计整数个数"></a>统计整数个数</h1><p>【问题描述】输入一个字符串，其包括数字和非数字字符，如：a123x456 17935? 098tab，将其中连续的数字作为一个整数，依次存放到数组a中，统计共有多少个整数，并输出这些数。</p><p>【输入形式】数字和非数字字符的字符串</p><p>【输出形式】1)整数个数2）分别输出整数<br>【样例输入】a123x456 17935? 098tab583【注意需要保留带有空格的字符串，请不要使用gets，cin，练习使用cin.getline(char *str, int maxnum)】</p><p>【样例输出】</p><pre><code>51234561793598583</code></pre><p>【样例说明】第一个输出项为整数的个数，后面的分别为具体的整数。注意，不需要输出提示类文字，如：“整数为”，“分别为”等字样。直接输出结果。有一个数字的也要输出。测试用例中没有超过整数范围连续数字。当遇到0开头的数字应舍去0。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX=<span class="number">200</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_num</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;<span class="keyword">return</span> (c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)?<span class="number">1</span>:<span class="number">0</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[MAX];</span><br><span class="line">    <span class="keyword">int</span> total=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>.getline(str,MAX);</span><br><span class="line">    <span class="keyword">if</span>(is_num(str[<span class="number">0</span>]))total++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;str[i]!=<span class="string">'\0'</span>;i++) <span class="keyword">if</span>(is_num(str[i])&amp;&amp;!is_num(str[i<span class="number">-1</span>])) total++;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; total &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;str[i]!=<span class="string">'\0'</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_num(str[i])||(str[i]==<span class="string">'0'</span>&amp;&amp;!is_num(str[i<span class="number">-1</span>])&amp;&amp;is_num(str[i+<span class="number">1</span>])))<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">while</span>(is_num(str[i])) <span class="built_in">cout</span> &lt;&lt; str[i++];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="字符串排序"><a href="#字符串排序" class="headerlink" title="字符串排序"></a>字符串排序</h1><p>【问题描述】有5个字符串，首先将它们按照字符串中字符个数由小到大排序，再分别取出每个字符串的第三个字母合并成一个新的字符串输出（若少于三个字符的输出空格）。要求：利用字符串指针和指针数组实现。</p><p>【输入形式】5个字符串，用回车分隔<br>【输出形式】输出一个字符串：按5个字符串中字符个数由小到大排序，再分别取出每个字符串的第三个字母合并成一个新的字符串输出，若少于三个字符的输出空格</p><p>【样例输入】</p><pre><code>test1234123testcumtthinkapples</code></pre><p>【样例输出】</p><pre><code>cumt think apples 123test test1234concatenate string:mip3s</code></pre><p>【样例说明】输出每个字符串之间用一个空格。字符数量相等的串相对顺序不变。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">char</span> *ch[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        ch[i]=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>]; </span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; ch[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>-i<span class="number">-1</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strlen</span>(ch[j])&gt;<span class="built_in">strlen</span>(ch[j+<span class="number">1</span>]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">char</span> *temp=ch[j];</span><br><span class="line">                ch[j]=ch[j+<span class="number">1</span>];</span><br><span class="line">                ch[j+<span class="number">1</span>]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)<span class="built_in">cout</span> &lt;&lt; ch[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="string">"concatenate string:"</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(ch[i])&lt;<span class="number">3</span>)<span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; ch[i][<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">delete</span> ch[i];</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++理论作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】第5章作业</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC5%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC5%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="学生成绩统计"><a href="#学生成绩统计" class="headerlink" title="学生成绩统计"></a>学生成绩统计</h1><p>【问题描述】<br>定义数组存储5位学生的姓名和4科考试的成绩，计算并输出每个学生的总成绩和平均成绩，找出平均成绩最高的学生姓名。</p><p>【输入形式】依次输入每位学生的姓名和4科考试的成绩。</p><p>【输出形式】1)输出每个学生的总成绩和平均成绩；2）输出平均成绩最高的学生姓名。</p><p>【样例输入】说明：下列输入的字符及数字间的空格数为一个空格，如“zhangsan 87 76 91 79”中，“zhangsan”与“87”间为一个空格</p><p>zhangsan 87 76 91 79</p><p>lisi 90 89 78 69</p><p>wangwu 80 88 91 85</p><p>zhaoqian 77 79 78 75</p><p>sunli 89 87 88 87<br>【样例输出】 说明：下列输出内容格式如下：cout&lt;&lt;setiosflags(ios::left)&lt;&lt;setw(10)&lt;&lt;Name&lt;&lt;setw(9)&lt;&lt;TotalScore&lt;&lt;AverageScore&lt;&lt;endl。</p><p>“Name”、”TotalScore”、”AverageScore”用具体的数值替代，如下例：</p><p>Name TotalScore AverageScore</p><p>zhangsan  333      83</p><p>lisi      326      81</p><p>wangwu    344      86</p><p>zhaoqian  309      77</p><p>sunli     351      87</p><h2 id="Student-with-the-highest-AverageScore-is-sunli-AverageScore-is-87"><a href="#Student-with-the-highest-AverageScore-is-sunli-AverageScore-is-87" class="headerlink" title="Student with the highest AverageScore is sunli,AverageScore is 87"></a>Student with the highest AverageScore is sunli,AverageScore is 87</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> name[<span class="number">6</span>];</span><br><span class="line">    <span class="keyword">int</span> score[<span class="number">6</span>][<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> ave,max=<span class="number">0</span>,no;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; name[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; score[i][j];</span><br><span class="line">            score[i][<span class="number">0</span>]+=score[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(score[i][<span class="number">0</span>]&gt;max)</span><br><span class="line">        &#123;</span><br><span class="line">            max=score[i][<span class="number">0</span>];</span><br><span class="line">            no=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ave=score[no][<span class="number">0</span>]/<span class="number">4</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Name TotalScore AverageScore"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++) <span class="built_in">cout</span>&lt;&lt;setiosflags(ios::left)&lt;&lt;setw(<span class="number">10</span>)&lt;&lt;name[i]&lt;&lt;setw(<span class="number">9</span>)&lt;&lt;score[i][<span class="number">0</span>]&lt;&lt;score[i][<span class="number">0</span>]/<span class="number">4</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt;<span class="string">"Student with the highest AverageScore is "</span> &lt;&lt; name[no] &lt;&lt;<span class="string">",AverageScore is "</span> &lt;&lt; ave;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="求二维数组的鞍点"><a href="#求二维数组的鞍点" class="headerlink" title="求二维数组的鞍点"></a>求二维数组的鞍点</h1><p>【问题描述】</p><p> 找出一个二维数组（以三行四列的数组为例）中的鞍点，即该位置上的元素在该行上值最大，在该列上值最小（也可能没有鞍点）</p><p>【输入形式】</p><p>标准输入：二维数组（以三行四列的数组为例）</p><p>【输出形式】</p><p>标准输出：如果有鞍点，输出鞍点的值及所在行列（例如[1][2]=96 is Saddle Point），如果没有，输出没有鞍点（例如 No Saddle Point）</p><p>【样例输入】 </p><p>9 80 205 40</p><p>90 60 96 1</p><p>210 3 101 89</p><p>【样例输出】</p><p>[1][2]=96 is Saddle Point</p><p>【样例说明】</p><p> 请正确输入二维数组,并按照【样例输出】的要求输出结果。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> n[<span class="number">6</span>][<span class="number">6</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)n[i][<span class="number">0</span>]=<span class="number">-0x7ffffff</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)n[<span class="number">0</span>][i]=<span class="number">0x7ffffff</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; n[i][j];</span><br><span class="line">            <span class="keyword">if</span>(n[i][j]&gt;n[i][<span class="number">0</span>])n[i][<span class="number">0</span>]=n[i][j];</span><br><span class="line">            <span class="keyword">if</span>(n[i][j]&lt;n[<span class="number">0</span>][j])n[<span class="number">0</span>][j]=n[i][j];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">            <span class="keyword">if</span>(n[i][j]==n[i][<span class="number">0</span>]&amp;&amp;n[i][j]==n[<span class="number">0</span>][j]) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt;<span class="string">"["</span>&lt;&lt;i<span class="number">-1</span>&lt;&lt;<span class="string">"]"</span>&lt;&lt;<span class="string">"["</span>&lt;&lt;j<span class="number">-1</span>&lt;&lt;<span class="string">"]="</span>&lt;&lt;n[i][j]&lt;&lt;<span class="string">" is Saddle Point"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">            &#125; </span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt;<span class="string">"No Saddle Point"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="字符统计"><a href="#字符统计" class="headerlink" title="字符统计"></a>字符统计</h1><p>【问题描述】</p><p>输入字符串s，编程统计出s中共出现了多少个数字字符。进一步考虑，如何统计出10个数字字符各自出现的次数。</p><p>【输入形式】</p><p>输入带数字字符的字符串</p><p>【输出形式】</p><p> 1）输出字符串中数字字符的总个数；<br> 2）一次逐行输出从数字字符‘0’到数字字符‘9’的个数</p><p>【样例输入】</p><p> abcdefk12345</p><p>【样例输出】 </p><p>Number’s amount is:5<br> ‘0…9’ amount is:0 1 1 1 1 1 0 0 0 0</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen("1.in","r",stdin);</span></span><br><span class="line"><span class="comment">//freopen("1.out","w",stdout);</span></span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,n[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; ch)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch-<span class="string">'0'</span>&gt;=<span class="number">0</span>&amp;&amp;ch-<span class="string">'0'</span>&lt;=<span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sum++;</span><br><span class="line">            n[ch-<span class="string">'0'</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Number's amount is:"</span> &lt;&lt; sum &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"'0...9' amount is:"</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)<span class="built_in">cout</span>&lt;&lt;n[i]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line"><span class="comment">//fclose(stdin);</span></span><br><span class="line"><span class="comment">//fclose(stdout);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++理论作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】第4章作业</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC4%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC4%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="不同进制间的转换"><a href="#不同进制间的转换" class="headerlink" title="不同进制间的转换"></a>不同进制间的转换</h1><p>【问题描述】设计一个函数toOcr(int n)，实现把输入的一个十进制数转换为八进制数</p><p>【输入形式】十进制数。</p><p>【输出形式】与之对应的八进制数。<br>【样例输入】126</p><p>【样例输出】176</p><p>【样例说明】直接输出数据，不要有其他输出语句，如需测试请使用cerr。<br>【评分标准】给出一个十进制数，正确输出八进制对应的数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">toOcr</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp,ii=<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(num)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = num%<span class="number">8</span>;</span><br><span class="line">        ans+=ii*temp;</span><br><span class="line">        num/=<span class="number">8</span>;</span><br><span class="line">        ii*=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; toOcr(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="找出亲密对数"><a href="#找出亲密对数" class="headerlink" title="找出亲密对数"></a>找出亲密对数</h1><p>【问题描述】求数n之内的亲密对数。所谓“亲密对数”，即A的所有因子（包含1但不包含其本身）之和等于B，而B的所有因子之和等于A。</p><p>【输入形式】某个数字n。<br>【输出形式】此数字n之内的亲密对数。</p><p>【样例输入】400</p><p>【样例输出】220 284<br>【样例说明】输出结果每行输出一对亲密数，剔除重复的，按每行第一个数的大小排序。<br>【评分标准】 根据输入的N值，正确列举出N值内的亲密对数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">yinzi</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;num;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num%i==<span class="number">0</span>)sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,a,b;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a=i;</span><br><span class="line">        b=yinzi(a);</span><br><span class="line">        <span class="keyword">if</span>(a==yinzi(b)&amp;&amp;a&lt;b) <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">" "</span>&lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="在给定的数中从右边查找第K位数字"><a href="#在给定的数中从右边查找第K位数字" class="headerlink" title="在给定的数中从右边查找第K位数字"></a>在给定的数中从右边查找第K位数字</h1><p>【问题描述】设计一个函数int digit(long n,int k)，它返回整数n从右边开始第k个数字的值，若不存在第k个数字则返回-1。</p><p>【输入形式】输入两个实参<br>【输出形式】对应位的数值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">digit</span><span class="params">(<span class="keyword">long</span> n,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n%<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> a;</span><br><span class="line">    <span class="keyword">int</span> b;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; digit(a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++理论作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++】第3章作业</title>
      <link href="/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC3%E7%AB%A0%E4%BD%9C%E4%B8%9A/"/>
      <url>/2019/11/24/%E3%80%90C-%E3%80%91%E7%AC%AC3%E7%AB%A0%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h1 id="猴子吃桃问题"><a href="#猴子吃桃问题" class="headerlink" title="猴子吃桃问题"></a>猴子吃桃问题</h1><p>【问题描述】猴子吃桃问题。猴子第1天摘了若干个桃子，当即吃了一半，还不解馋，又多吃了一个；第2天，吃剩下的桃子的一半，还不过瘾，又多吃了一个；以后每天都吃前一天剩下的一半多一个，到第n天想再吃时，只剩下一个桃子了。问第一天共摘了多少个桃子？<br>【输入形式】标准输入，剩下一个桃子的天数n。<br>【输出形式】标准输出，第一天共摘的桃子个数。<br>【样例输入】10<br>【样例输出】1534<br>【样例说明】只需输入和输出数据，不要有多余字符出现，有测试输出时请使用cerr。<br>【评分标准】 给出天数，正确输出第一天摘桃子个数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=(ans+<span class="number">1</span>)*<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="百鸡问题"><a href="#百鸡问题" class="headerlink" title="百鸡问题"></a>百鸡问题</h1><p>【问题描述】n元买100只鸡，大鸡5元每只，小鸡3元每只，还有1/3元每只的小鸡，分别记为x只，y只，z只，求所有解<br>【输入形式】标准输入，总钱数n<br>【输出形式】标准输出，输出x y z 的值，按照x,y,z依次增大顺序输出 </p><p>【样例输入】100<br>【样例输出】</p><pre><code>x=0,y=25,z=75x=4,y=18,z=78x=8,y=11,z=81x=12,y=4,z=84</code></pre><p>【样例说明】每行一个解，注意逗号为英文字符，每行数据顶格输出。<br>【评分标准】给出n，正确得出所有求解结果</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">100</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            k = <span class="number">100</span>-j-i;</span><br><span class="line">            <span class="keyword">if</span>((<span class="number">15</span>*i+<span class="number">9</span>*j+k)==<span class="number">3</span>*n &amp;&amp; i+j+k==<span class="number">100</span> &amp;&amp; k&gt;=<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"x="</span> &lt;&lt; i &lt;&lt; <span class="string">",y="</span> &lt;&lt; j &lt;&lt; <span class="string">",z="</span> &lt;&lt; k &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="数字逆序"><a href="#数字逆序" class="headerlink" title="数字逆序"></a>数字逆序</h1><p>问题描述】输入一个int型的整数num，逆向输出其各位数字，同时求出其位数以及各位数字之和。</p><p>【输入形式】输入流（标准）输入，输入一个整数。<br>【输出形式】输出流（标准）输出。结果为三行，第一行为逆向数字，第二行为各位数字之和，第三行为数字位数。<br>【样例输入】1000<br>【样例输出】</p><pre><code>000114</code></pre><p>【样例说明】注意输出位置在每行开始，不要有其他输出语句，不要有其他多余符号。如有测试必要请使用cerr。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num,i,temp;</span><br><span class="line">    <span class="keyword">int</span> num3=<span class="number">0</span>,num2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">    temp = num;</span><br><span class="line">    <span class="keyword">while</span>(temp)&#123;</span><br><span class="line">        temp/=<span class="number">10</span>;</span><br><span class="line">        num3++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=num3;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = <span class="built_in">pow</span>(<span class="number">10</span>,i);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (num%temp)/(temp/<span class="number">10</span>);</span><br><span class="line">        num2+=(num%temp)/(temp/<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; num2 &lt;&lt; <span class="built_in">endl</span> &lt;&lt; num3 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="比赛对阵策略"><a href="#比赛对阵策略" class="headerlink" title="比赛对阵策略"></a>比赛对阵策略</h1><p>【问题描述】两个乒乓球队进行比赛，各出三人。甲队为A,B,C三人，乙队为X,Y,Z三人。已抽签决定比赛名单。有人向队员打听比赛的名单。A说他不和X比，C说他不和X,Z比，请编程找出三对赛手间的对阵情况。</p><p>【输入形式】无<br>【输出形式】标准输出，三对赛手对阵对阵情况，每对内部用“–”隔开，每对间使用空格隔开。</p><p>【样例输入】<br>【样例输出】A–Z  B–X  C–Y</p><p>【样例说明】注意输出格式，空格和回车不要出现混乱。<br>【评分标准】正确输出结果。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> i,j,k;              </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="string">'X'</span>;i&lt;=<span class="string">'Z'</span>;i++)</span><br><span class="line">        <span class="keyword">for</span> (j=<span class="string">'X'</span>;j&lt;=<span class="string">'Z'</span>;j++)</span><br><span class="line">        <span class="keyword">for</span> (k=<span class="string">'X'</span>;k&lt;=<span class="string">'Z'</span>;k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="string">'X'</span>  &amp;&amp;  k!=<span class="string">'X'</span>  &amp;&amp;  k!=<span class="string">'Z'</span>  &amp;&amp;  i!=j  &amp;&amp;  j!=k  &amp;&amp;  i!=k)   <span class="built_in">cout</span>  &lt;&lt;  <span class="string">"A--"</span>  &lt;&lt;  i  &lt;&lt;   <span class="string">"  B--"</span>  &lt;&lt;  j  &lt;&lt;  <span class="string">"  C--"</span>  &lt;&lt;  k;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++理论作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【C++继承与派生】构造函数的执行顺序</title>
      <link href="/2019/11/23/%E3%80%90C-%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F%E3%80%91%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/"/>
      <url>/2019/11/23/%E3%80%90C-%E7%BB%A7%E6%89%BF%E4%B8%8E%E6%B4%BE%E7%94%9F%E3%80%91%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="派生类对象构造函数的执行顺序："><a href="#派生类对象构造函数的执行顺序：" class="headerlink" title="派生类对象构造函数的执行顺序："></a><strong>派生类对象构造函数的执行顺序：</strong></h1><ol><li>先调用基类的构造函数</li><li>再执行“初始化列表”中所列出的数据成员的构造函数</li><li>最后执行派生类构造函数的函数体（指的是派生类构造函数的花括号内部的代码）</li></ol><hr><h2 id="举个栗子："><a href="#举个栗子：" class="headerlink" title="举个栗子："></a><strong>举个栗子：</strong></h2><p><strong>1.先创建一个名为A的简单基类，里面包含一个构造函数和一个数据成员</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">A(<span class="keyword">int</span> v) :a(v) &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>2.然后再用A类派生出一个B类，为了区分，我们将初始化列表分行表示</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> :</span><span class="keyword">public</span> A &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> b1;</span><br><span class="line">A obj1;</span><br><span class="line">A obj2;</span><br><span class="line"><span class="keyword">int</span> b2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b3;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">B(<span class="keyword">int</span> v) :</span><br><span class="line">b1(v),<span class="comment">//1号</span></span><br><span class="line">obj2(v),<span class="comment">//2号</span></span><br><span class="line">obj1(v),<span class="comment">//3号</span></span><br><span class="line">b2(v),<span class="comment">//4号</span></span><br><span class="line">A(v)<span class="comment">//5号</span></span><br><span class="line">&#123;</span><br><span class="line">b3 = v;<span class="comment">//6号</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>3.在主函数中定义一个B类对象，来调用派生类B的构造函数</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">B <span class="title">obj</span><span class="params">(<span class="number">5</span>)</span></span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.先用理论分析一波：</strong><br><strong>步骤一</strong>中“先调用基类的构造函数”：那么毋庸置疑，先执行5号代码A(v)调用基类的构造函数；</p><p><strong>步骤二</strong>“再执行“初始化列表”中所列出的数据成员的“构造函数”。</p><p>这里需要特别注意，初始化列表中的执行顺序，是按照“数据成员的声明顺序”来赋值，而不是按照初始化列表的语句（1号→2号→3号→4号）来依次赋值的。</p><p>所以此步的赋值顺序是：1号(b1) → 3号(obj1) → 2号(obj2) → 4号(b2)</p><p><strong>步骤三</strong>最后执行派生类构造函数的函数体：最后执行6号语句</p><p><strong>4.建议复制代码，在编辑器上调试一下，看看执行顺序是怎样的</strong></p><p><del>说了这么多，其实最主要的是步骤二，C++把子对象和基本类型的数据同等看待了</del> </p>]]></content>
      
      
      <categories>
          
          <category> 踩过的坑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>各种算法的Python写法(更新ing)</title>
      <link href="/2019/11/23/%E5%90%84%E7%A7%8D%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%86%99%E6%B3%95-%E6%9B%B4%E6%96%B0ing/"/>
      <url>/2019/11/23/%E5%90%84%E7%A7%8D%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%86%99%E6%B3%95-%E6%9B%B4%E6%96%B0ing/</url>
      
        <content type="html"><![CDATA[<h1 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_mao</span><span class="params">(arr)</span>:</span></span><br><span class="line"><span class="string">'''冒泡排序（从高到低)'''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(arr)<span class="number">-1</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,len(arr)-i<span class="number">-1</span>):</span><br><span class="line"><span class="keyword">if</span> arr[j]&gt;arr[j+<span class="number">1</span>]:</span><br><span class="line">arr[j],arr[j+<span class="number">1</span>] = arr[j+<span class="number">1</span>],arr[j]</span><br></pre></td></tr></table></figure><hr><h1 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort_xuan</span><span class="params">(arr)</span>:</span></span><br><span class="line"><span class="string">'''选择排序'''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(arr)<span class="number">-1</span>):</span><br><span class="line">min = arr[i]</span><br><span class="line">min_where = i</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>,len(arr)):</span><br><span class="line"><span class="keyword">if</span> arr[j] &lt; min:</span><br><span class="line">min = arr[j]</span><br><span class="line">min_where = j</span><br><span class="line">arr[i],arr[min_where] = arr[min_where],arr[i]</span><br></pre></td></tr></table></figure><hr><h1 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h1><h2 id="1-不用递归的方法"><a href="#1-不用递归的方法" class="headerlink" title="1).不用递归的方法"></a>1).不用递归的方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_no</span><span class="params">(arr,aim)</span>:</span></span><br><span class="line"><span class="string">'''非递归的二分查找'''</span></span><br><span class="line">start=<span class="number">0</span></span><br><span class="line">end=len(arr)</span><br><span class="line"><span class="keyword">while</span> start&lt;=end:</span><br><span class="line"><span class="comment">#这里的(start+end)/2要用int限定，否则自动为float型，会报错哦</span></span><br><span class="line">mid=int((start+end)/<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span>(arr[mid] == aim):</span><br><span class="line"><span class="keyword">return</span> mid</span><br><span class="line"><span class="keyword">elif</span>(arr[mid]&gt;aim):</span><br><span class="line">end = mid<span class="number">-1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">start = mid+<span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span> <span class="comment">#如果start&gt;end说明没找到，就返回False</span></span><br></pre></td></tr></table></figure><h2 id="2-用递归的方法"><a href="#2-用递归的方法" class="headerlink" title="2).用递归的方法"></a>2).用递归的方法</h2><p><strong>特别注意</strong>：在python中函数调用函数的时候，被调用的函数前面要加return，否则只会返回None，python中的递归过程参考:<a href="https://blog.csdn.net/csdn364747071/article/details/49614725" target="_blank" rel="noopener">python 递归函数返回值</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_yes</span><span class="params">(arr,aim,start,end)</span>:</span></span><br><span class="line"><span class="string">'''递归的二分查找'''</span></span><br><span class="line">mid = int((start+end)/<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span>(start&gt;end):</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"><span class="keyword">elif</span>(arr[mid]==aim):</span><br><span class="line"><span class="keyword">return</span> mid</span><br><span class="line"><span class="keyword">elif</span>(arr[mid]&gt;aim):</span><br><span class="line"><span class="comment">#此处必须写return 否则总会返回None（血的教训o(╥﹏╥)o）</span></span><br><span class="line"><span class="keyword">return</span> search_yes(arr,aim,start,mid<span class="number">-1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> search_yes(arr,aim,mid+<span class="number">1</span>,end)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《Python从入门到实践》笔记</title>
      <link href="/2019/11/21/%E3%80%8APython%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/21/%E3%80%8APython%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%E3%80%8B%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="第二章-变量和简单数据类型"><a href="#第二章-变量和简单数据类型" class="headerlink" title="第二章 变量和简单数据类型"></a>第二章 变量和简单数据类型</h2><h3 id="2-1-输出一个hello-world"><a href="#2-1-输出一个hello-world" class="headerlink" title="2.1 输出一个hello world"></a>2.1 输出一个hello world</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello world"</span>)</span><br><span class="line"><span class="comment">#用#进行注释</span></span><br></pre></td></tr></table></figure><h3 id="2-2-变量的定义"><a href="#2-2-变量的定义" class="headerlink" title="2.2 变量的定义"></a>2.2 变量的定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">num1 = <span class="number">1</span> <span class="comment">#整型</span></span><br><span class="line">num2 = <span class="number">1.0</span> <span class="comment">#浮点型</span></span><br><span class="line">str1 = <span class="string">'abcd'</span> <span class="comment">#字符串型</span></span><br><span class="line">str2 = <span class="string">"abcd"</span> <span class="comment">#字符串型</span></span><br><span class="line">bool1 = <span class="literal">True</span> <span class="comment">#布尔型</span></span><br></pre></td></tr></table></figure><blockquote><p>直接用 <strong>变量名=变量值</strong>  来定义，系统自动检测变量的类型</p></blockquote><h3 id="2-3-1-使用方法修改字符串的大小写（title-upper-lower）"><a href="#2-3-1-使用方法修改字符串的大小写（title-upper-lower）" class="headerlink" title="2.3.1 使用方法修改字符串的大小写（title,upper,lower）"></a>2.3.1 使用方法修改字符串的大小写（title,upper,lower）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"i loVe pYthon"</span></span><br><span class="line">print(name.upper()) <span class="comment">#临时转为大写</span></span><br><span class="line">print(name.lower()) <span class="comment">#临时转为小写</span></span><br><span class="line">print(name.title()) <span class="comment">#临时首字母大写</span></span><br></pre></td></tr></table></figure><h3 id="2-3-2-合并字符串（str-str）"><a href="#2-3-2-合并字符串（str-str）" class="headerlink" title="2.3.2 合并字符串（str + str）"></a>2.3.2 合并字符串（str + str）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">first_name = <span class="string">"abc"</span></span><br><span class="line">last_name = <span class="string">"def"</span></span><br><span class="line">name = first_name + last_name</span><br><span class="line">print(name) </span><br><span class="line">================ 运行结果 ================</span><br><span class="line">abcdef</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="2-3-4-删除空白（str-strip-str-lstrip-str-rstrip"><a href="#2-3-4-删除空白（str-strip-str-lstrip-str-rstrip" class="headerlink" title="2.3.4 删除空白（str.strip() str.lstrip() str.rstrip() )"></a>2.3.4 删除空白（str.strip() str.lstrip() str.rstrip() )</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c = <span class="string">" python "</span></span><br><span class="line">print(<span class="string">"."</span>+c.rstrip()+<span class="string">"."</span>) <span class="comment">#删除右边的空白</span></span><br><span class="line">print(<span class="string">"."</span>+c.lstrip()+<span class="string">"."</span>) <span class="comment">#删除左边的空白</span></span><br><span class="line">print(<span class="string">"."</span>+c.strip()+<span class="string">"."</span>) <span class="comment">#删除两边的空格</span></span><br><span class="line">================ 运行结果 ================</span><br><span class="line">. python.</span><br><span class="line">.python .</span><br><span class="line">.python.</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h2 id="第三章-列表简介"><a href="#第三章-列表简介" class="headerlink" title="第三章 列表简介"></a>第三章 列表简介</h2><h3 id="3-1-建立并访问列表"><a href="#3-1-建立并访问列表" class="headerlink" title="3.1 建立并访问列表"></a>3.1 建立并访问列表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line">print(arr[<span class="number">0</span>]) <span class="comment">#类似于C，用下标的方式寻找</span></span><br><span class="line">print(arr[<span class="number">-2</span>]) <span class="comment">#访问倒数第二个元素</span></span><br></pre></td></tr></table></figure><h3 id="3-2-修改添加和删除元素"><a href="#3-2-修改添加和删除元素" class="headerlink" title="3.2 修改添加和删除元素"></a>3.2 修改添加和删除元素</h3><p>1.修改元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="string">"abc"</span>,<span class="string">"def"</span>]</span><br><span class="line">s[<span class="number">0</span>] = <span class="string">"ghi"</span> <span class="comment"># 修改</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>2.添加元素（添加append、插入insert）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>]</span><br><span class="line">s.append(<span class="string">"添加了e"</span>)</span><br><span class="line">s.insert(<span class="number">1</span>,<span class="string">"插入了python"</span>)</span><br><span class="line">print(s)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'插入了python'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'添加了e'</span>]</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>3.删除元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>]</span><br><span class="line"><span class="keyword">del</span> s[<span class="number">0</span>] <span class="comment">#无返回值删除</span></span><br><span class="line">temp1 = s.pop() <span class="comment">#删除最后一个元素 并返回</span></span><br><span class="line">temp2 = s.pop(<span class="number">1</span>) <span class="comment">#删除index=1的元素 并返回</span></span><br><span class="line">s.remove(<span class="string">'b'</span>) <span class="comment">#根据值删除元素</span></span><br></pre></td></tr></table></figure><h3 id="3-3-组织列表（永久排序，临时排序，永久反转，确定长度）"><a href="#3-3-组织列表（永久排序，临时排序，永久反转，确定长度）" class="headerlink" title="3.3 组织列表（永久排序，临时排序，永久反转，确定长度）"></a>3.3 组织列表（永久排序，临时排序，永久反转，确定长度）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">arr.sort() <span class="comment">#顺序永久排序</span></span><br><span class="line">arr.sort(reverse=<span class="literal">True</span>) <span class="comment">#倒序永久排序</span></span><br><span class="line">print(arr.sorted) <span class="comment">#临时顺序排序</span></span><br><span class="line">arr.reverse() <span class="comment">#永久反转</span></span><br><span class="line">lenth=len(arr) <span class="comment">#获取列表的长度</span></span><br></pre></td></tr></table></figure><h2 id="第四章-操作列表"><a href="#第四章-操作列表" class="headerlink" title="第四章 操作列表"></a>第四章 操作列表</h2><h3 id="4-1-遍历列表（for语句）"><a href="#4-1-遍历列表（for语句）" class="headerlink" title="4.1 遍历列表（for语句）"></a>4.1 遍历列表（for语句）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ss = [<span class="string">'ab'</span>,<span class="string">'cd'</span>,<span class="string">'ef'</span>]</span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ss:</span><br><span class="line">print(<span class="string">'进入循环'</span>)</span><br><span class="line">print(s) </span><br><span class="line">print(<span class="string">"Thanks"</span>)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">进入循环</span><br><span class="line">ab</span><br><span class="line">进入循环</span><br><span class="line">cd</span><br><span class="line">进入循环</span><br><span class="line">ef</span><br><span class="line">Thanks</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>1.第二行代码让python从列表ss中依次取出一个元素，并将其储存在s变量中<br>2.在代码行for s in ss:后面缩进的代码行都是循环的一部分</p></blockquote><h3 id="4-3-创建数字列表"><a href="#4-3-创建数字列表" class="headerlink" title="4.3 创建数字列表"></a>4.3 创建数字列表</h3><p>1.使用range()函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">print(value)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>实际上range()函数返回一个临时的列表</p></blockquote><p>2.用list()将range()的结果转换为列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">numbers = list(range(<span class="number">1</span>,<span class="number">5</span>))</span><br><span class="line">print(numbers)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>3.创建一个包含前10个整数平方的列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">arr = []</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">arr.append(value**<span class="number">2</span>)</span><br><span class="line">print(arr)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>, <span class="number">100</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>value<strong>2表示value的平方，同理value\</strong>n代表value的n次方</p></blockquote><p>4.对数字进行简单的统计计算（min，max，sum函数）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>digits = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>min(digits)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>max(digits)</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sum(digits)</span><br><span class="line"><span class="number">55</span></span><br></pre></td></tr></table></figure><p>5.列表解析（一行代码生成 前10个整数平方的 列表)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr = [value**<span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>)]</span><br></pre></td></tr></table></figure><blockquote><p>for value in range(1,11)语句依次对value赋值</p></blockquote><h3 id="4-4-使用列表的一部分-切片"><a href="#4-4-使用列表的一部分-切片" class="headerlink" title="4.4 使用列表的一部分(切片)"></a>4.4 使用列表的一部分(切片)</h3><p>1.切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ss = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(ss[<span class="number">1</span>:<span class="number">3</span>]) <span class="comment">#输出下标 1-2 的元素</span></span><br><span class="line">[<span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(ss[:<span class="number">3</span>]) <span class="comment">#输出前三个元素</span></span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(ss[<span class="number">1</span>:]) <span class="comment">#输出下标 1 之后的元素</span></span><br><span class="line">[<span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(ss[<span class="number">-2</span>:]) <span class="comment">#输出倒数2个元素</span></span><br><span class="line">[<span class="string">'e'</span>, <span class="string">'f'</span>]</span><br></pre></td></tr></table></figure><p>2.遍历切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ss = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> temp <span class="keyword">in</span> ss[<span class="number">1</span>:<span class="number">4</span>]:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(temp)</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br></pre></td></tr></table></figure><p>3.复制列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ss = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>]</span><br><span class="line">temp1 = ss[:]</span><br><span class="line">temp2 = ss</span><br></pre></td></tr></table></figure><blockquote><p>temp1 = ss[:]为值的复制，若修改temp1，ss不会受到影响<br>temp2 = ss为地址的复制，相当于C++中的创建引用。若修改temp2，那么ss也会被修改</p></blockquote><h3 id="4-5-元组（不可变的列表）"><a href="#4-5-元组（不可变的列表）" class="headerlink" title="4.5 元组（不可变的列表）"></a>4.5 元组（不可变的列表）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义元组（用括号）</span></span><br><span class="line">arr = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">print(arr[<span class="number">0</span>])</span><br><span class="line"><span class="comment">#遍历元组的值</span></span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> arr:</span><br><span class="line">print(temp)</span><br><span class="line"><span class="comment">#修改元组的值（不能修改元组的元素，但是可以给存储元组的变量赋值</span></span><br><span class="line">arr1 = (<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">2</span>   ×</span><br><span class="line">arr1 = (<span class="number">3</span>,<span class="number">4</span>)   √</span><br></pre></td></tr></table></figure><h2 id="第五章-if语句"><a href="#第五章-if语句" class="headerlink" title="第五章 if语句"></a>第五章 if语句</h2><h3 id="5-1-基本句法"><a href="#5-1-基本句法" class="headerlink" title="5.1 基本句法"></a>5.1 基本句法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">old = <span class="number">18</span></span><br><span class="line"><span class="keyword">if</span> old&lt;<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"婴儿"</span>)</span><br><span class="line"><span class="keyword">elif</span> old&gt;=<span class="number">2</span> <span class="keyword">and</span> old&lt;<span class="number">4</span>:</span><br><span class="line">    print(<span class="string">"蹒跚学步"</span>)</span><br><span class="line"><span class="keyword">elif</span> old&gt;=<span class="number">4</span> <span class="keyword">and</span> old&lt;<span class="number">13</span>:</span><br><span class="line">    print(<span class="string">"儿童"</span>)</span><br><span class="line"><span class="keyword">elif</span> old&gt;=<span class="number">13</span> <span class="keyword">and</span> old&lt;<span class="number">18</span>:</span><br><span class="line">    print(<span class="string">"青少年"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"成年人"</span>)</span><br></pre></td></tr></table></figure><h3 id="5-2-用if检查列表中是否有某一个元素"><a href="#5-2-用if检查列表中是否有某一个元素" class="headerlink" title="5.2 用if检查列表中是否有某一个元素"></a>5.2 用if检查列表中是否有某一个元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ss = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="string">'a'</span> <span class="keyword">in</span> ss:</span><br><span class="line">    print(<span class="string">"YES"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"NO"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>‘a’ in ss 如果a能在ss列表中找到，那么就返回True</p></blockquote><h3 id="5-3-确定列表不是空的"><a href="#5-3-确定列表不是空的" class="headerlink" title="5.3 确定列表不是空的"></a>5.3 确定列表不是空的</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ss = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> ss:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    print(<span class="string">"不是空的"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>    print(<span class="string">"是空的"</span>)</span><br><span class="line">是空的</span><br></pre></td></tr></table></figure><h2 id="第六章-字典"><a href="#第六章-字典" class="headerlink" title="第六章 字典"></a>第六章 字典</h2><h3 id="6-2-使用字典"><a href="#6-2-使用字典" class="headerlink" title="6.2 使用字典"></a>6.2 使用字典</h3><p>1.字典的定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'name'</span>:<span class="string">'Amy'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;</span><br></pre></td></tr></table></figure><p>2.访问字典中的值（以1的定义为例）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(dic[<span class="string">'name'</span>])</span><br></pre></td></tr></table></figure><blockquote><p>字典是一系列  键-值对 ，与键相关联的可以是 数字、字符串、列表甚至字典（任何python对象都可以与其相关联）</p></blockquote><p>3.添加 键-值对</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'name'</span>:<span class="string">'Amy'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;</span><br><span class="line">dic[<span class="string">'score'</span>] = <span class="number">100</span></span><br></pre></td></tr></table></figure><blockquote><p>添加’score’-100键-值对到字典的最后面</p></blockquote><p>4.修改字典中的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'name'</span>:<span class="string">'Amy'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;</span><br><span class="line">dic[<span class="string">'name'</span>] = <span class="string">'Tom'</span></span><br></pre></td></tr></table></figure><p>5.删除键-值对</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'name'</span>:<span class="string">'Amy'</span>,<span class="string">'age'</span>:<span class="number">18</span>&#125;</span><br><span class="line"><span class="keyword">del</span> dic[<span class="string">'name'</span>]</span><br><span class="line">print(dic)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">&#123;<span class="string">'age'</span>: <span class="number">18</span>&#125;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-3-遍历字典"><a href="#6-3-遍历字典" class="headerlink" title="6.3 遍历字典"></a>6.3 遍历字典</h3><p>1.遍历所有的键-值对（用items()方法）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;</span><br><span class="line">    <span class="string">'name'</span>:<span class="string">'Amy'</span>,</span><br><span class="line">    <span class="string">'age'</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="string">'score'</span>:<span class="number">100</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> dic.items():</span><br><span class="line">    print(key + <span class="string">':'</span> + str(value))</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">name:Amy</span><br><span class="line">age:<span class="number">18</span></span><br><span class="line">score:<span class="number">100</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>1.dic.items() 分别将键与值赋值给key与value<br>2.str(value)将数值强制转换为字符型，才可以用+运算符</p></blockquote><p>2.遍历字典中所有的键（keys()方法）与值（values()方法）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dic.keys():<span class="comment">######</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> dic.values():<span class="comment">######</span></span><br></pre></td></tr></table></figure><blockquote><p>遍历键也可以不用keys，直接for key in dic:，但是用keys方法更容易被理解</p></blockquote><p>3.按顺序遍历字典中所有的键</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> sorted(dic.keys()):<span class="comment">#####</span></span><br></pre></td></tr></table></figure><blockquote><p>使用sorted函数将dic的键列表暂时排序</p></blockquote><p>4.用set()函数去重</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="number">1</span>:<span class="string">'a'</span>,<span class="number">2</span>:<span class="string">'b'</span>,<span class="number">3</span>:<span class="string">'a'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> set(dic.values()):</span><br><span class="line">    print(value)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-4-嵌套"><a href="#6-4-嵌套" class="headerlink" title="6.4 嵌套"></a>6.4 嵌套</h3><p>P93:有时候，需要将一系列字典存储在列表里，或将列表作为值存储在字典里，这称为<strong>嵌套</strong>（略）</p><h2 id="第七章-用户输入和while循环"><a href="#第七章-用户输入和while循环" class="headerlink" title="第七章 用户输入和while循环"></a>第七章 用户输入和while循环</h2><h3 id="7-1-用函数input-进行用户输入"><a href="#7-1-用函数input-进行用户输入" class="headerlink" title="7.1 用函数input()进行用户输入"></a>7.1 用函数input()进行用户输入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name = input(<span class="string">"Enter your name: "</span>)</span><br><span class="line">name = <span class="string">'Hello '</span> + name</span><br><span class="line">print(name)</span><br><span class="line">============= RESTART: C:\Users\Administrator\Desktop\python.py =============</span><br><span class="line">Enter your name: Tom</span><br><span class="line">Hello Tom</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="7-2-while循环简介"><a href="#7-2-while循环简介" class="headerlink" title="7.2 while循环简介"></a>7.2 while循环简介</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">5</span>:</span><br><span class="line">    print(i)</span><br><span class="line">    i+=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>while语句内部也可以用continue和break，规则与C++相同</p><h2 id="第八章-函数"><a href="#第八章-函数" class="headerlink" title="第八章 函数"></a>第八章 函数</h2><h3 id="8-1-定义函数"><a href="#8-1-定义函数" class="headerlink" title="8.1 定义函数"></a>8.1 定义函数</h3><p>python莫得数据类型（好吧，是弱化了），所以不需要</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">()</span>:</span></span><br><span class="line"><span class="string">'''文档字符串，可以用来描述函数功能'''</span></span><br><span class="line">print(<span class="string">'Hello World'</span>)</span><br><span class="line">show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《UE4蓝图完全学习》笔记</title>
      <link href="/2019/11/08/%E3%80%8AUE4%E8%93%9D%E5%9B%BE%E5%AE%8C%E5%85%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/11/08/%E3%80%8AUE4%E8%93%9D%E5%9B%BE%E5%AE%8C%E5%85%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="UE4蓝图完全学习教程笔记"><a href="#UE4蓝图完全学习教程笔记" class="headerlink" title="UE4蓝图完全学习教程笔记"></a>UE4蓝图完全学习教程笔记</h1><h2 id="Chapter-1-amp-2"><a href="#Chapter-1-amp-2" class="headerlink" title="Chapter 1 &amp; 2"></a>Chapter 1 &amp; 2</h2><h3 id="1-打印字符串：print（printstring）"><a href="#1-打印字符串：print（printstring）" class="headerlink" title="1. 打印字符串：print（printstring）"></a>1. 打印字符串：print（printstring）</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094106.png" alt=""></p><h3 id="2-创建各种类型的文本-make-literal-各种类型名（make-类型名更方便）"><a href="#2-创建各种类型的文本-make-literal-各种类型名（make-类型名更方便）" class="headerlink" title="2. 创建各种类型的文本:make literal + 各种类型名（make+类型名更方便）"></a>2. 创建各种类型的文本:make literal + 各种类型名（make+类型名更方便）</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094208.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094236.png" alt=""></p><h3 id="3-加减乘除运算：-（以-为例）"><a href="#3-加减乘除运算：-（以-为例）" class="headerlink" title="3. 加减乘除运算：+ - * /（以+为例）"></a>3. 加减乘除运算：+ - * /（以+为例）</h3><p><img src="https://img-blog.csdnimg.cn/20191108231952902.png" alt=""><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094727.png" alt=""></p><h3 id="4-添加数学表达式：在右击图标的最下方，选择“添加数学表达式”"><a href="#4-添加数学表达式：在右击图标的最下方，选择“添加数学表达式”" class="headerlink" title="4. 添加数学表达式：在右击图标的最下方，选择“添加数学表达式”"></a>4. 添加数学表达式：在右击图标的最下方，选择“添加数学表达式”</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094818.png" alt="">)<img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094844.png" alt="重命名即可"></p><h3 id="5-设置变量：蓝图编辑器左边“我的蓝图”界面直接创建"><a href="#5-设置变量：蓝图编辑器左边“我的蓝图”界面直接创建" class="headerlink" title="5.  设置变量：蓝图编辑器左边“我的蓝图”界面直接创建"></a>5.  设置变量：蓝图编辑器左边“我的蓝图”界面直接创建</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094905.png" alt="在这里插入图片描述"></p><h3 id="6-创建数组：在原有普通变量的基础上进行细节修改"><a href="#6-创建数组：在原有普通变量的基础上进行细节修改" class="headerlink" title="6.创建数组：在原有普通变量的基础上进行细节修改"></a>6.创建数组：在原有普通变量的基础上进行细节修改</h3><p> <img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094924.png" alt="在这里插入图片描述"><br> <img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217094942.png" alt="在这里插入图片描述"></p><h3 id="7-在流程中修改数组的值：set-array-elem（图示是将第1个元素修改为100）"><a href="#7-在流程中修改数组的值：set-array-elem（图示是将第1个元素修改为100）" class="headerlink" title="7.在流程中修改数组的值：set array elem（图示是将第1个元素修改为100）"></a>7.在流程中修改数组的值：set array elem（图示是将第1个元素修改为100）</h3><p> <img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095002.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095021.png" alt="在这里插入图片描述"></p><h3 id="8-从数组中取值：get（图示获取第0个元素并输出）"><a href="#8-从数组中取值：get（图示获取第0个元素并输出）" class="headerlink" title="8.从数组中取值：get（图示获取第0个元素并输出）"></a>8.从数组中取值：get（图示获取第0个元素并输出）</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095053.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095115.png" alt="在这里插入图片描述"></p><h3 id="9-在数组末尾添加元素：add"><a href="#9-在数组末尾添加元素：add" class="headerlink" title="9.在数组末尾添加元素：add"></a>9.在数组末尾添加元素：add</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095135.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095150.png" alt="在这里插入图片描述"></p><h3 id="10-删除数组元素：remove-index（图示删除第0个元素，后面的都会向前补位）"><a href="#10-删除数组元素：remove-index（图示删除第0个元素，后面的都会向前补位）" class="headerlink" title="10.删除数组元素：remove index（图示删除第0个元素，后面的都会向前补位）"></a>10.删除数组元素：remove index（图示删除第0个元素，后面的都会向前补位）</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095207.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095223.png" alt="在这里插入图片描述"></p><h3 id="11-在流程中动态创建数组：make-array"><a href="#11-在流程中动态创建数组：make-array" class="headerlink" title="11.在流程中动态创建数组：make array"></a>11.在流程中动态创建数组：make array</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095241.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095304.png" alt="在这里插入图片描述"></p><h2 id="Chapter-3（掌握流程控制）"><a href="#Chapter-3（掌握流程控制）" class="headerlink" title="Chapter 3（掌握流程控制）"></a>Chapter 3（掌握流程控制）</h2><h3 id="1-创建分支：branch（或中文输入“分支”）"><a href="#1-创建分支：branch（或中文输入“分支”）" class="headerlink" title="1.创建分支：branch（或中文输入“分支”）"></a>1.创建分支：branch（或中文输入“分支”）</h3><p><em>（Condition复选框为勾选状态时，执行“真”处理，否则执行“假”处理）</em></p><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095357.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095417.png" alt="在这里插入图片描述"></p><h3 id="2-值的比较：-gt-lt-（符合条件，则返回1，否则返回0）"><a href="#2-值的比较：-gt-lt-（符合条件，则返回1，否则返回0）" class="headerlink" title="2.值的比较：= &gt;= &lt;=（符合条件，则返回1，否则返回0）"></a>2.值的比较：= &gt;= &lt;=（符合条件，则返回1，否则返回0）</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095501.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095522.png" alt="在这里插入图片描述"></p><h3 id="3-判断变量是否为偶数（分支基本练习）"><a href="#3-判断变量是否为偶数（分支基本练习）" class="headerlink" title="3.判断变量是否为偶数（分支基本练习）"></a>3.判断变量是否为偶数（分支基本练习）</h3><p><em>（1）用数学表达式来判断</em><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095538.png" alt="在这里插入图片描述"><br><em>（2）用equal的方式判断</em><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095556.png" alt="在这里插入图片描述"></p><h3 id="4-蓝图中的switch：switch-on-string（开启字符串）"><a href="#4-蓝图中的switch：switch-on-string（开启字符串）" class="headerlink" title="4.蓝图中的switch：switch on string（开启字符串）"></a>4.蓝图中的switch：switch on string（开启字符串）</h3><blockquote><p><em>（拥有多项判断能力的分支，以猜拳为例）</em></p></blockquote><p><em>（1）创建switch on string节点</em><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095621.png" alt="在这里插入图片描述"><br><em>（2）创建转移</em><br><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095639.png" alt="在这里插入图片描述"><br><em>（2）创建“猜拳”变量并初始化，由switch判断“猜拳”变量中的值是哪一个元素</em></p><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095657.png" alt="在这里插入图片描述"></p><h3 id="5-ForLoop循环：loop-forloop-（利用计数器的循环"><a href="#5-ForLoop循环：loop-forloop-（利用计数器的循环" class="headerlink" title="5.ForLoop循环：loop(forloop) （利用计数器的循环)"></a>5.ForLoop循环：loop(forloop) （利用计数器的循环)</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095715.png" alt="在这里插入图片描述"></p><blockquote><p>上述输出结果为“1 2 3 4 5 循环体结束后执行completed节点”<br>其中，index返回每一层循环的index值</p></blockquote><h3 id="6-连接文本：append"><a href="#6-连接文本：append" class="headerlink" title="6.连接文本：append"></a>6.连接文本：append</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095733.png" alt="在这里插入图片描述"></p><blockquote><p>输出结果为“1time 2time 3time 4time 5time 循环体结束”</p></blockquote><h3 id="7-专门处理数组的循环：ForEachLoop"><a href="#7-专门处理数组的循环：ForEachLoop" class="headerlink" title="7.专门处理数组的循环：ForEachLoop"></a>7.专门处理数组的循环：ForEachLoop</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095757.png" alt="在这里插入图片描述"></p><h3 id="8-简单的循环：WhileLoop"><a href="#8-简单的循环：WhileLoop" class="headerlink" title="8.简单的循环：WhileLoop"></a>8.简单的循环：WhileLoop</h3><p><img src="https://cdn.jsdelivr.net/gh/cnatom/images/images/20191217095817.png" alt="在这里插入图片描述"></p><blockquote><p>示例为判断num是否是素数，counter初始值为2</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
